org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.facebook.react.bridge.JSIModuleSpec
okhttp3.internal.Util
okhttp3.Address
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.fbreact.specs.NativeLinkingManagerSpec
okhttp3.internal.http2.Http2Reader
okhttp3.internal.http2.ErrorCode
okhttp3.internal.URLFilter
com.horcrux.svg.RenderableViewManager$UseViewManager
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.facebook.react.views.picker.ReactDropdownPickerManager
com.facebook.react.bridge.JavaOnlyArray$1
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.material.datepicker.MaterialTextInputPicker
com.facebook.react.modules.datepicker.DatePickerDialogFragment
okhttp3.internal.annotations.EverythingIsNonNull
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.google.android.material.transformation.FabTransformationBehavior
com.horcrux.svg.RenderableViewManager$RectViewManager
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
okhttp3.internal.http2.StreamResetException
com.facebook.react.fabric.Binding
okhttp3.Cache$CacheResponseBody$1
okhttp3.EventListener$Factory
okhttp3.internal.http2.Http2Connection$Listener
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.facebook.react.modules.storage.AsyncStorageModule
com.facebook.react.bridge.JSIModuleProvider
androidx.recyclerview.widget.LinearLayoutManager
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler
okhttp3.internal.http2.Http2Connection$6
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.views.picker.ReactPickerManager
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.facebook.react.bridge.queue.MessageQueueThreadImpl
okhttp3.CacheControl
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.facebook.react.bridge.ReadableNativeMap
okhttp3.internal.http.RealInterceptorChain
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.JsonWriterHelper$1
okhttp3.internal.http2.Http2Stream$FramingSource
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.google.android.material.chip.ChipGroup
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
okhttp3.internal.http2.Http2Connection$3
okhttp3.ResponseBody$BomAwareReader
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.facebook.react.views.picker.ReactDialogPickerManager
com.facebook.react.fabric.events.EventEmitterWrapper
androidx.appcompat.widget.AlertDialogLayout
androidx.fragment.app.ListFragment
com.facebook.react.bridge.CatalystInstance
okhttp3.ConnectionSpec
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.uimanager.BaseViewManager
okhttp3.Headers$Builder
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.modules.blob.BlobCollector
okhttp3.internal.cache.DiskLruCache$1
com.facebook.react.bridge.Arguments
com.facebook.react.modules.dialog.DialogModule
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.react.bridge.JSIModuleType
okhttp3.internal.huc.BufferedRequestBody
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.horcrux.svg.R$id
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.uimanager.SimpleViewManager
okhttp3.internal.ws.WebSocketProtocol
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
androidx.recyclerview.widget.GridLayoutManager
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.react.bridge.ReadableNativeMap$1
com.horcrux.svg.R$styleable
androidx.appcompat.widget.SearchView$SearchAutoComplete
okhttp3.RequestBody$2
okhttp3.OkHttpClient$1
okhttp3.internal.ws.RealWebSocket
okhttp3.internal.http.HttpDate$1
okhttp3.internal.platform.AndroidPlatform$CloseGuard
com.facebook.react.modules.core.ExceptionsManagerModule
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.jni.DestructorThread$Destructor
com.facebook.jni.DestructorThread$1
com.facebook.jni.IteratorHelper
androidx.appcompat.app.AppCompatViewInflater
com.facebook.react.modules.blob.FileReaderModule
okhttp3.internal.http2.PushObserver$1
com.facebook.react.bridge.UIManagerListener
com.google.android.gms.common.api.Scope
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner
okhttp3.internal.platform.Platform
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.facebook.react.bridge.DynamicFromMap
com.facebook.common.time.AwakeTimeSinceBootClock
okhttp3.Request
com.facebook.react.bridge.GuardedResultAsyncTask
com.google.android.material.textview.MaterialTextView
androidx.appcompat.widget.ActionBarOverlayLayout
okhttp3.internal.connection.RouteDatabase
com.facebook.react.bridge.Arguments$2
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.bridge.ReadableMapKeySetIterator
com.google.firebase.provider.FirebaseInitProvider
okhttp3.CertificatePinner$Pin
okhttp3.MultipartBody
okhttp3.internal.io.FileSystem
com.facebook.react.modules.share.ShareModule
com.facebook.react.bridge.JavaMethodWrapper$8
com.google.firebase.messaging.FirebaseMessagingService
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.facebook.react.bridge.UnexpectedNativeTypeException
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
com.facebook.react.bridge.PerformanceCounter
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.react.animated.EventAnimationDriver
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.views.text.ReactVirtualTextViewManager
okhttp3.internal.platform.Android10Platform
com.google.firebase.components.ComponentDiscoveryService
androidx.appcompat.view.menu.ListMenuItemView
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider
com.facebook.react.bridge.CatalystInstanceImpl$1$1
com.facebook.react.bridge.JavaMethodWrapper$5
okhttp3.internal.http1.Http1Codec$ChunkedSink
com.facebook.react.uimanager.RootViewManager
com.reactnativecommunity.webview.RNCWebViewManager
okhttp3.internal.connection.StreamAllocation
androidx.appcompat.app.AppCompatDialogFragment
okhttp3.internal.cache.DiskLruCache$3
okhttp3.Call$Factory
com.facebook.react.bridge.Callback
com.horcrux.svg.RenderableViewManager$SymbolManager
okhttp3.internal.tls.DistinguishedNameParser
com.horcrux.svg.R$xml
okhttp3.WebSocket
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
okhttp3.FormBody$Builder
com.facebook.react.uimanager.ViewManager
com.facebook.react.bridge.MemoryPressureListener
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
okhttp3.internal.http2.Http2
com.facebook.react.modules.clipboard.ClipboardModule
okhttp3.package-info
okhttp3.internal.Internal
okhttp3.OkHttpClient$Builder
okhttp3.Authenticator$1
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
okhttp3.internal.cache.CacheStrategy
com.facebook.react.views.text.ReactTextAnchorViewManager
okhttp3.internal.http.BridgeInterceptor
okhttp3.RequestBody$3
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.jni.HybridData
com.facebook.react.bridge.CatalystInstanceImpl$4
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
okhttp3.internal.JavaNetHeaders$1
okhttp3.internal.ws.RealWebSocket$2
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.android.gms.common.api.GoogleApiActivity
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.horcrux.svg.SvgView
okhttp3.CipherSuite
com.facebook.fbreact.specs.NativeJSDevSupportSpec
okhttp3.ResponseBody
com.facebook.react.bridge.ColorPropConverter
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.bridge.ReactMarkerConstants
okhttp3.internal.ws.RealWebSocket$1
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
okhttp3.internal.http1.Http1Codec$UnknownLengthSource
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.bridge.JavaScriptContextHolder
com.horcrux.svg.RenderableViewManager$PathViewManager
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.google.android.material.textfield.TextInputLayout
com.facebook.react.views.textinput.ReactTextInputManager
okhttp3.internal.http1.Http1Codec$ChunkedSource
com.facebook.react.bridge.UIManager
com.facebook.react.bridge.ReactSoftException
com.google.android.gms.common.api.internal.BasePendingResult
okhttp3.CertificatePinner
com.facebook.react.views.slider.ReactSliderManager
androidx.fragment.app.Fragment$2
com.reactnativecommunity.cameraroll.CameraRollModule
com.facebook.jni.NativeRunnable
com.facebook.jni.CppSystemErrorException
com.facebook.react.bridge.NativeModuleCallExceptionHandler
okhttp3.internal.http2.Huffman$Node
okhttp3.internal.tls.CertificateChainCleaner
com.facebook.react.bridge.JavaScriptModule
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
okhttp3.internal.cache.DiskLruCache$2
com.facebook.react.devsupport.JSException
okhttp3.internal.http2.Http2Connection$PingRunnable
com.facebook.yoga.YogaLogLevel
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.google.android.gms.common.SupportErrorDialogFragment
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.bridge.AssertionException
com.facebook.react.modules.network.NetworkingModule
com.horcrux.svg.RenderableViewManager
okhttp3.internal.http2.Hpack$Reader
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.horcrux.svg.BuildConfig
okhttp3.ConnectionSpec$Builder
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.bridge.ProxyJavaScriptExecutor
okhttp3.internal.connection.RealConnection
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar
com.reactnativecommunity.webview.RNCWebViewModule
androidx.lifecycle.SavedStateHandleController
androidx.appcompat.widget.Toolbar
com.facebook.react.bridge.JSIModulePackage
okhttp3.internal.huc.OkHttpsURLConnection
com.google.android.material.internal.BaselineLayout
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.bridge.ReactMarker
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.modules.core.DeviceEventManagerModule
com.oblador.vectoricons.VectorIconsModule
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.internal.proxy.NullProxySelector
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.bridge.ReactBridge
okhttp3.internal.ws.RealWebSocket$Streams
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.views.image.ReactImageManager
okhttp3.FormBody
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.modules.toast.ToastModule
com.facebook.react.bridge.UiThreadUtil
com.facebook.imagepipeline.platform.PreverificationHelper
com.google.android.material.internal.NavigationMenuItemView
com.facebook.react.bridge.JSBundleLoader$4
okhttp3.internal.http2.Http2Stream
com.facebook.react.bridge.queue.NativeRunnable
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.bridge.JSBundleLoader$3
okhttp3.internal.cache.CacheInterceptor$1
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.facebook.fbreact.specs.NativeDevSettingsSpec
androidx.core.graphics.drawable.IconCompat
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.bridge.JavaModuleWrapper
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.facebook.fbreact.specs.NativeImageEditorSpec
com.RNFetchBlob.Utils.FileProvider
com.facebook.jni.CppException
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex
com.facebook.react.bridge.CatalystInstanceImpl$Builder
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
okhttp3.internal.connection.RouteSelector
com.facebook.react.bridge.ReadableArray
com.facebook.react.bridge.JSIModuleHolder
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.react.modules.datepicker.DatePickerDialogModule
okhttp3.Dns
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.bridge.ModuleSpec
okhttp3.internal.http2.Http2Connection$Listener$1
okhttp3.MultipartBody$Part
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
okhttp3.internal.http2.ConnectionShutdownException
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.reactnativecommunity.webview.RNCWebViewFileProvider
com.horcrux.svg.R$bool
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
okhttp3.Interceptor$Chain
com.facebook.react.bridge.NativeArray
com.facebook.common.time.RealtimeSinceBootClock
com.google.android.datatransport.cct.CctBackendFactory
okhttp3.JavaNetCookieJar
okhttp3.internal.tls.BasicTrustRootIndex
com.facebook.react.bridge.WritableArray
okhttp3.internal.http2.Http2Codec
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
com.facebook.react.uimanager.events.RCTEventEmitter
com.horcrux.svg.RenderableView
com.facebook.react.bridge.CatalystInstanceImpl$1
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
okhttp3.internal.http.CallServerInterceptor
okhttp3.internal.http2.Huffman
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.google.android.gms.common.annotation.KeepName
com.facebook.jni.annotations.DoNotStrip
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.react.bridge.CatalystInstanceImpl
okhttp3.RequestBody
androidx.lifecycle.Lifecycling$1
com.facebook.react.bridge.JSBundleLoader$1
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
androidx.appcompat.widget.ContentFrameLayout
okhttp3.internal.http.HttpCodec
com.horcrux.svg.SvgViewManager
com.facebook.react.bridge.CallbackImpl
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.modules.systeminfo.AndroidInfoModule
android.support.v4.graphics.drawable.IconCompatParcelizer
com.facebook.react.bridge.JavaOnlyMap$1
com.facebook.react.bridge.InvalidIteratorException
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.android.material.transformation.FabTransformationScrimBehavior
okhttp3.internal.cache.DiskLruCache$Entry
okhttp3.JavaNetAuthenticator
com.facebook.react.bridge.ObjectAlreadyConsumedException
androidx.appcompat.widget.SearchView
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.imagepipeline.nativecode.NativeBlurFilter
okhttp3.internal.huc.OkHttpURLConnection
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
com.facebook.fbreact.specs.NativeAlertManagerSpec
androidx.transition.FragmentTransitionSupport
com.horcrux.svg.RenderableViewManager$MaskManager
okhttp3.Callback
androidx.versionedparcelable.ParcelImpl
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.horcrux.svg.R$style
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec
com.horcrux.svg.RenderableViewManager$PatternManager
javax.inject.Provider
okhttp3.internal.http1.Http1Codec$AbstractSource
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.horcrux.svg.R$drawable
okhttp3.internal.tls.TrustRootIndex
okhttp3.internal.huc.OutputStreamRequestBody$1
okhttp3.EventListener
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.fabric.CoreComponentsRegistry
com.google.firebase.iid.FirebaseInstanceIdReceiver
okhttp3.Headers
com.facebook.react.modules.sound.SoundManagerModule
com.facebook.react.bridge.JSInstance
com.facebook.react.devsupport.JSDevSupport
okhttp3.internal.http2.Http2Connection$ReaderRunnable
com.facebook.react.bridge.SoftAssertions
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
okhttp3.internal.http.RetryAndFollowUpInterceptor
com.facebook.react.bridge.ReactCallback
okhttp3.Dispatcher
com.facebook.jni.HybridData$Destructor
com.facebook.soloader.DoNotOptimize
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.horcrux.svg.RenderableViewManager$LineViewManager
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
okhttp3.internal.huc.DelegatingHttpsURLConnection
com.facebook.react.modules.deviceinfo.DeviceInfoModule
okhttp3.internal.http2.Http2Connection$4
com.facebook.react.views.view.ReactViewManager
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.google.android.material.bottomsheet.BottomSheetDialogFragment
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
okhttp3.RealCall
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.bridge.ReactContext
androidx.fragment.app.DialogFragment
okhttp3.internal.http2.PushObserver
androidx.activity.ImmLeaksCleaner
okhttp3.internal.http1.Http1Codec$FixedLengthSource
com.google.firebase.messaging.FirebaseMessaging
okhttp3.internal.http2.Http2Stream$FramingSink
okhttp3.internal.platform.ConscryptPlatform
com.facebook.react.bridge.JavaScriptExecutorFactory
okhttp3.internal.Util$2
androidx.appcompat.widget.ButtonBarLayout
okhttp3.ConnectionPool$1
com.google.android.gms.common.api.Status
okhttp3.Cookie$Builder
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.modules.core.TimingModule
okhttp3.HttpUrl$Builder
com.horcrux.svg.SvgPackage
com.horcrux.svg.R$anim
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.bridge.JavaMethodWrapper$10
okhttp3.Cache
com.facebook.react.bridge.ActivityEventListener
androidx.recyclerview.widget.RecyclerView
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.google.android.gms.common.internal.ReflectedParcelable
okhttp3.internal.http.RealResponseBody
com.facebook.react.bridge.JavaMethodWrapper$1
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.react.views.view.ReactClippingViewManager
com.reactnativecommunity.asyncstorage.AsyncStorageModule
okhttp3.Cache$CacheResponseBody
com.facebook.react.bridge.ReadableType
com.google.firebase.FirebaseCommonRegistrar
androidx.savedstate.Recreator
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.react.modules.camera.ImageStoreManager
androidx.lifecycle.ReflectiveGenericLifecycleObserver
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.facebook.yoga.YogaNative
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
okhttp3.internal.io.FileSystem$1
okhttp3.internal.http.HttpMethod
com.facebook.react.bridge.JsonWriterHelper
com.facebook.react.views.text.ReactRawTextManager
com.facebook.soloader.Api18TraceUtils
okhttp3.internal.http.HttpDate
okhttp3.internal.http2.Http2Codec$StreamFinishingSource
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.bridge.GuardedRunnable
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.RNFetchBlob.RNFetchBlob
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.bridge.JSBundleLoader
okhttp3.EventListener$2
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.facebook.soloader.SoLoader$Api14Utils
okhttp3.internal.connection.ConnectInterceptor
com.facebook.react.modules.core.JSTimers
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.bridge.WritableNativeArray
okhttp3.internal.cache.DiskLruCache$Editor$1
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.hermes.reactexecutor.HermesExecutor
okhttp3.RealCall$AsyncCall
okhttp3.internal.http2.Settings
okhttp3.Connection
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
okhttp3.RealCall$1
androidx.core.app.CoreComponentFactory
com.facebook.react.modules.intent.IntentModule
okhttp3.internal.cache.DiskLruCache
com.facebook.react.bridge.ReactContext$1
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.views.text.ReactTextViewManager
com.facebook.jni.DestructorThread$DestructorList
okhttp3.ResponseBody$1
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.fbreact.specs.NativeShareModuleSpec
com.horcrux.svg.RenderableViewManager$GroupViewManager
okhttp3.Handshake
androidx.viewpager2.adapter.FragmentStateAdapter$5
okhttp3.internal.http1.Http1Codec$FixedLengthSink
com.facebook.soloader.SysUtil$LollipopSysdeps
com.swmansion.rnscreens.ScreenViewManager
androidx.savedstate.SavedStateRegistry$1
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.bridge.queue.MessageQueueThread
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.views.modal.ReactModalHostManager
okhttp3.internal.http2.Header$Listener
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.react.bridge.WindowFocusChangeListener
com.horcrux.svg.RenderableViewManager$ImageViewManager
okhttp3.OkHttpClient
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
okhttp3.Interceptor
com.swmansion.rnscreens.SearchBarManager
com.facebook.react.bridge.PromiseImpl
androidx.activity.ComponentActivity$2
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.bridge.MemoryPressure
com.facebook.react.modules.fabric.ReactFabric
androidx.appcompat.widget.ActionBarContextView
okhttp3.internal.ws.WebSocketWriter$FrameSink
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.react.bridge.JavaMethodWrapper$3
com.littleartists.MainActivity
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.ReadableMap
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.facebook.jni.UnknownCppException
com.facebook.react.bridge.NativeModuleRegistry
okhttp3.internal.http2.Http2Connection$Builder
okhttp3.internal.http2.Http2Writer
com.facebook.react.fabric.events.FabricEventEmitter
okhttp3.internal.NamedRunnable
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
okhttp3.internal.cache2.Relay$RelaySource
okhttp3.internal.http.CallServerInterceptor$CountingSink
okhttp3.internal.cache.CacheRequest
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.facebook.react.bridge.JavaMethodWrapper$2
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.systrace.TraceListener
okhttp3.internal.http.RequestLine
okhttp3.internal.http2.Http2Connection$2
okhttp3.internal.http.StatusLine
okhttp3.Cache$CacheRequestImpl
okhttp3.internal.ws.WebSocketReader$FrameCallback
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener
okhttp3.Cookie
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.material.appbar.MaterialToolbar
okhttp3.internal.http.UnrepeatableRequestBody
com.facebook.react.devsupport.HMRClient
com.horcrux.svg.RenderableViewManager$DefsViewManager
com.facebook.jni.ThreadScopeSupport
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
okhttp3.internal.platform.AndroidPlatform
com.facebook.react.bridge.NativeMap
okhttp3.internal.connection.RouteSelector$Selection
com.facebook.react.modules.permissions.PermissionsModule
com.littleartists.MainApplication
okhttp3.internal.http2.Hpack
com.facebook.react.bridge.WritableMap
com.reactnativecommunity.checkbox.ReactCheckBoxManager
com.facebook.react.bridge.Inspector
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.facebook.react.bridge.ReactNoCrashSoftException
okhttp3.internal.http1.Http1Codec
com.facebook.react.module.model.ReactModuleInfo
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.yoga.YogaNodeJNIBase
com.google.android.material.textfield.TextInputEditText
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.bridge.ContextBaseJavaModule
com.facebook.react.bridge.BackgroundExecutor
okhttp3.Cache$CacheRequestImpl$1
com.facebook.react.bridge.Promise
com.facebook.react.bridge.DynamicFromMap$1
com.horcrux.svg.R
com.horcrux.svg.R$color
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.react.ReactFragment
okhttp3.internal.connection.RealConnection$1
com.facebook.react.bridge.JavaMethodWrapper$6
okhttp3.internal.huc.OutputStreamRequestBody
okhttp3.internal.platform.JdkWithJettyBootPlatform
okhttp3.internal.ws.WebSocketReader
okhttp3.Route
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.facebook.react.bridge.JavaMethodWrapper$4
okhttp3.CookieJar
okhttp3.internal.cache2.FileOperator
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.facebook.react.bridge.BaseJavaModule
okhttp3.Authenticator
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
androidx.appcompat.widget.DialogTitle
com.facebook.react.bridge.ModuleHolder
io.invertase.firebase.app.ReactNativeFirebaseAppModule
com.google.android.material.chip.Chip
com.google.android.material.internal.NavigationMenuView
com.google.android.gms.common.util.DynamiteApi
com.facebook.react.bridge.WritableNativeMap
okhttp3.Cache$Entry
okhttp3.internal.http2.Http2Connection$7
okhttp3.internal.http.HttpHeaders
okhttp3.internal.http2.Http2Connection$1
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
io.invertase.firebase.common.ReactNativeFirebaseModule
com.facebook.react.bridge.Inspector$Page
okhttp3.internal.ws.RealWebSocket$PingRunnable
com.google.android.material.transformation.ExpandableBehavior
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.google.android.material.transformation.ExpandableTransformationBehavior
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.views.switchview.ReactSwitchManager
okhttp3.internal.connection.ConnectionSpecSelector
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
okhttp3.Challenge
okhttp3.RequestBody$1
okhttp3.internal.http2.Http2Reader$Handler
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
org.devio.rn.splashscreen.SplashScreenModule
okhttp3.Call
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
okhttp3.internal.http2.Http2Reader$ContinuationSource
com.google.android.gms.common.GooglePlayServicesManifestException
com.google.firebase.datatransport.TransportRegistrar
okhttp3.internal.JavaNetHeaders
com.facebook.yoga.YogaLogger
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
androidx.core.util.Pools$SimplePool
com.facebook.react.bridge.CatalystInstanceImpl$5
okhttp3.MediaType
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.jni.DestructorThread
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.facebook.common.internal.DoNotStrip
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.bridge.JSBundleLoader$5
okhttp3.CacheControl$Builder
com.horcrux.svg.R$integer
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.jni.MapIteratorHelper
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
okhttp3.internal.http2.Http2Connection$5
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor
okhttp3.internal.http2.Http2Connection
com.facebook.react.modules.fresco.FrescoModule
com.horcrux.svg.SvgViewModule
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.google.android.material.datepicker.MaterialCalendar
okhttp3.WebSocketListener
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.bridge.Dynamic
com.facebook.react.bridge.Arguments$1
okhttp3.internal.cache.DiskLruCache$Snapshot
com.swmansion.rnscreens.ScreenFragment
okhttp3.internal.ws.RealWebSocket$Close
okhttp3.internal.cache.FaultHidingSink
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.bridge.ReactContext$2
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
okhttp3.CookieJar$1
okhttp3.internal.platform.OptionalMethod
okhttp3.internal.cache.CacheInterceptor
com.google.android.gms.common.api.internal.zzd
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.react.bridge.NativeArgumentsParseException
okhttp3.internal.cache.InternalCache
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.facebook.react.fabric.ReactNativeConfig
com.google.android.gms.auth.api.signin.RevocationBoundService
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.views.scroll.ReactScrollViewManager
com.facebook.react.animated.NativeAnimatedModule
okhttp3.Protocol
com.facebook.react.modules.debug.SourceCodeModule
okhttp3.internal.platform.Jdk9Platform
com.horcrux.svg.RenderableViewManager$TextPathViewManager
okhttp3.internal.Util$1
com.google.android.gms.auth.api.signin.SignInAccount
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.fabric.ComponentFactory
okhttp3.Request$Builder
okhttp3.CertificatePinner$Builder
com.facebook.fbreact.specs.NativeRedBoxSpec
okhttp3.internal.http1.Http1Codec$1
com.google.android.material.internal.CheckableImageButton
com.horcrux.svg.SVGLength$UnitType
okhttp3.Dns$1
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.bridge.NoSuchKeyException
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
androidx.lifecycle.SingleGeneratedAdapterObserver
com.horcrux.svg.RNSVGRenderableManager
com.google.android.material.appbar.AppBarLayout$Behavior
okhttp3.internal.connection.RouteException
com.facebook.proguard.annotations.KeepGettersAndSetters
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService
com.facebook.react.bridge.NativeModule$NativeMethod
androidx.core.app.RemoteActionCompat
okhttp3.TlsVersion
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.horcrux.svg.R$attr
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.hermes.unicode.AndroidUnicodeUtils
okhttp3.CipherSuite$1
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.jni.HybridClassBase
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.fbreact.specs.NativeTimingSpec
com.horcrux.svg.R$string
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver
com.facebook.react.bridge.ReadableNativeArray$1
com.facebook.react.modules.image.ImageLoaderModule
okhttp3.EventListener$1
com.facebook.proguard.annotations.DoNotStrip
com.horcrux.svg.VirtualView
okhttp3.MultipartBody$Builder
okhttp3.Cache$1
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.facebook.react.bridge.NativeModule
okhttp3.internal.ws.WebSocketWriter
com.facebook.react.bridge.JavaOnlyMap
com.th3rdwave.safeareacontext.SafeAreaProviderManager
okhttp3.internal.cache2.Relay
com.facebook.react.jscexecutor.JSCExecutor
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.util.RCTLog
com.facebook.react.bridge.BaseActivityEventListener
com.th3rdwave.safeareacontext.SafeAreaViewManager
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
okhttp3.internal.huc.StreamedRequestBody
okhttp3.WebSocket$Factory
okhttp3.OkUrlFactory
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
okhttp3.Cache$2
okhttp3.internal.cache.CacheStrategy$Factory
okhttp3.Response$Builder
com.facebook.fbreact.specs.NativeModalManagerSpec
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.google.android.material.button.MaterialButton
com.horcrux.svg.RenderableViewManager$MarkerManager
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.bridge.JSCJavaScriptExecutor
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
okhttp3.internal.ws.RealWebSocket$CancelRunnable
okhttp3.internal.tls.OkHostnameVerifier
com.swmansion.rnscreens.ScreenStackViewManager
okhttp3.internal.http2.Http2Stream$StreamTimeout
com.facebook.react.common.LifecycleState
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2
okhttp3.internal.http2.Header
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
okhttp3.internal.http2.Hpack$Writer
okhttp3.internal.tls.BasicCertificateChainCleaner
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.appcompat.widget.ViewStubCompat
androidx.activity.ComponentActivity$3
com.horcrux.svg.RenderableViewManager$TextViewManager
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.bridge.ReactMethod
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
androidx.core.widget.NestedScrollView
com.swmansion.rnscreens.ScreenStackFragment
com.facebook.react.bridge.JavaJSExecutor
com.facebook.react.bridge.JavaMethodWrapper$9
com.horcrux.svg.R$layout
androidx.annotation.Keep
okhttp3.Credentials
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.uimanager.ViewGroupManager
okhttp3.internal.cache.DiskLruCache$Editor
com.facebook.fbreact.specs.NativeDeviceInfoSpec
okhttp3.Response
com.facebook.react.modules.i18nmanager.I18nManagerModule
okhttp3.ConnectionPool
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.bridge.NativeArrayInterface
androidx.lifecycle.SavedStateHandleController$1
com.horcrux.svg.R$dimen
com.facebook.react.bridge.ReactIgnorableMountingException
com.horcrux.svg.SvgView$Events
okhttp3.OkUrlFactory$1
com.facebook.react.bridge.JSIModule
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.react.bridge.Systrace
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule
okhttp3.HttpUrl
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
okhttp3.internal.Version
com.facebook.react.devsupport.LogBoxModule
com.google.android.material.snackbar.SnackbarContentLayout
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.react.devsupport.JSCHeapCapture
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.horcrux.svg.R$styleable: int View_android_focusable
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_id
com.horcrux.svg.R$id: int search_button
okhttp3.Headers: java.lang.String[] namesAndValues
com.horcrux.svg.R$attr: int contentInsetLeft
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
okhttp3.Response: okhttp3.Headers headers
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.horcrux.svg.R$attr: int switchTextAppearance
com.horcrux.svg.R$styleable: int TextAppearance_android_textColor
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.horcrux.svg.R$attr: int editTextStyle
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImageScaleType
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.horcrux.svg.R$id: int search_close_btn
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView svgView
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setAlpnProtocols
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.horcrux.svg.R$styleable: int RecycleListView_paddingBottomNoButtons
com.horcrux.svg.R$string: int abc_search_hint
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_SAVE
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionListener webviewFileDownloaderPermissionListener
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.horcrux.svg.R$drawable: int notification_tile_bg
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Small
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.internal.http1.Http1Codec: int STATE_READING_RESPONSE_BODY
com.horcrux.svg.RenderableView: int JOIN_ROUND
okhttp3.internal.cache.DiskLruCache: long maxSize
com.horcrux.svg.R$styleable: int FontFamily_fontProviderQuery
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
com.horcrux.svg.R$dimen: int tooltip_y_offset_touch
okhttp3.OkHttpClient: boolean followSslRedirects
com.horcrux.svg.R$color: int bright_foreground_material_light
okhttp3.Cache$Entry: int code
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$styleable: int GradientColor_android_centerColor
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache val$this$0
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
okhttp3.internal.http2.Settings: int ENABLE_PUSH
com.horcrux.svg.R$dimen: int abc_action_button_min_height_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.horcrux.svg.R$style: int Platform_V21_AppCompat
okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItem
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
okhttp3.internal.tls.DistinguishedNameParser: int pos
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
com.horcrux.svg.R$anim: int abc_slide_out_bottom
com.horcrux.svg.R$attr: int layout_anchor
com.horcrux.svg.R$styleable: int ActionMenuItemView_android_minWidth
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int material_grey_850
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.horcrux.svg.R$color: int bright_foreground_inverse_material_light
com.horcrux.svg.R$color: int background_floating_material_light
okhttp3.Response: java.lang.String message
com.horcrux.svg.R$styleable: int StateListDrawable_android_variablePadding
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
okhttp3.Address: java.util.List connectionSpecs
com.horcrux.svg.R$attr: int actionBarWidgetTheme
com.horcrux.svg.R$layout: int fps_view
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
com.horcrux.svg.R$attr: int viewInflaterClass
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.horcrux.svg.R$attr: int roundBottomEnd
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
okhttp3.ConnectionPool: long keepAliveDurationNs
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.horcrux.svg.VirtualView: boolean mTransformInvertible
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String RESPONSE_SOURCE
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.horcrux.svg.R$styleable: int View_paddingStart
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.horcrux.svg.R$styleable: int SwitchCompat_switchMinWidth
com.horcrux.svg.R$anim: int abc_shrink_fade_out_from_bottom
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_INJECT_JAVASCRIPT
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.horcrux.svg.R$attr: int commitIcon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
okhttp3.internal.cache.DiskLruCache$2: boolean $assertionsDisabled
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.horcrux.svg.R$attr: int actionModeStyle
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
okhttp3.internal.connection.RealConnection: int successCount
okhttp3.HttpUrl: java.lang.String password
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.horcrux.svg.R$styleable: int AppCompatImageView_tint
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
okhttp3.RealCall: okhttp3.OkHttpClient client
com.horcrux.svg.R$id: int info
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.horcrux.svg.R$layout: int abc_list_menu_item_layout
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog
okhttp3.Response$Builder: okhttp3.Response priorResponse
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_Solid
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
okhttp3.CertificatePinner$Pin: java.lang.String WILDCARD
com.horcrux.svg.R$attr: int colorAccent
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImage
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.reactnativecommunity.webview.RNCWebViewModule: int FILE_DOWNLOAD_PERMISSION_REQUEST
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
okhttp3.Cache$1: okhttp3.Cache this$0
com.horcrux.svg.R$layout: int abc_popup_menu_item_layout
com.horcrux.svg.R$attr: int roundTopLeft
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int contentInsetEndWithActions
okhttp3.internal.http2.Http2Stream: boolean $assertionsDisabled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$id: int centerInside
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_REQUEST_BODY
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
okhttp3.internal.http2.Settings: int[] values
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_end_material
com.horcrux.svg.R$drawable: int abc_textfield_search_material
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
okhttp3.CertificatePinner$Pin: java.lang.String pattern
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_major
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerVertical
com.horcrux.svg.R$dimen: int abc_control_inset_material
com.horcrux.svg.R$id: int action_bar_spinner
okhttp3.Challenge: java.lang.String scheme
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.horcrux.svg.SvgView: android.graphics.Matrix mInvViewBoxMatrix
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.horcrux.svg.R$string: int status_bar_notification_info_overflow
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_behavior
com.horcrux.svg.R$dimen: int compat_control_corner_material
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_light
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
com.horcrux.svg.R$id: int action_container
okhttp3.Request$Builder: java.lang.String method
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
okhttp3.internal.http2.Http2: byte FLAG_END_STREAM
com.horcrux.svg.R$styleable: int Toolbar_collapseContentDescription
okhttp3.Response$Builder: int code
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
com.horcrux.svg.R$styleable: int MenuItem_android_menuCategory
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.horcrux.svg.R$dimen: int notification_main_column_padding_top
com.facebook.react.bridge.ModuleSpec: java.lang.Class mType
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
com.horcrux.svg.R$drawable: int abc_btn_check_material
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_dark
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_FILE_SIZE
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar
com.horcrux.svg.R$styleable: int GradientColor_android_startX
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvCTM
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
okhttp3.internal.cache.DiskLruCache: int valueCount
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PT
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextColor
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_FILENAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
okhttp3.internal.http.HttpCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_anchor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.horcrux.svg.R$styleable: int AppCompatTheme_popupMenuStyle
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.horcrux.svg.R$attr: int actionViewClass
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.horcrux.svg.R$string: int catalyst_perf_monitor_stop
com.horcrux.svg.R$id: int parentPanel
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_width
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.http2.Http2Codec: java.lang.String HOST
com.horcrux.svg.R$style: int Theme_AppCompat_Light_NoActionBar
com.horcrux.svg.R$color: int abc_color_highlight_material
com.horcrux.svg.R$attr: int roundTopStart
okhttp3.Response: int code
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.horcrux.svg.R$style: int Theme_AppCompat_CompactMenu
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
okhttp3.RequestBody$2: okhttp3.MediaType val$contentType
com.horcrux.svg.R$dimen: int abc_button_padding_horizontal_material
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
okhttp3.internal.http2.Http2Writer: int maxFrameSize
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedFade
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ImageButton
com.horcrux.svg.SvgView: boolean mInvertible
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
okhttp3.HttpUrl: java.util.List queryNamesAndValues
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_POST_MESSAGE
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int TextAppearance_fontVariationSettings
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.horcrux.svg.R$color: int abc_primary_text_material_light
com.horcrux.svg.R$attr: int maxButtonHeight
com.horcrux.svg.R$dimen: int notification_content_margin_start
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.horcrux.svg.VirtualView: boolean mInvertible
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.horcrux.svg.R$attr: int background
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.horcrux.svg.R$styleable: int Toolbar_logoDescription
com.horcrux.svg.R$attr: int roundBottomStart
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvTransform
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImageScaleType
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
com.horcrux.svg.R$integer: int status_bar_notification_info_maxnum
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.horcrux.svg.R$styleable: int ColorStateListItem_android_color
com.horcrux.svg.R$attr: int actionBarSplitStyle
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
com.horcrux.svg.R$dimen: int notification_media_narrow_margin
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
com.horcrux.svg.R$id: int submit_area
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
okhttp3.Cookie: boolean httpOnly
com.horcrux.svg.R$attr: int activityChooserViewStyle
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
com.horcrux.svg.R$style: int Theme_Catalyst_RedBox
okhttp3.internal.platform.Platform: int WARN
com.horcrux.svg.R$styleable: int Toolbar_android_gravity
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
com.horcrux.svg.R$id: int line3
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.horcrux.svg.R$attr: int coordinatorLayoutStyle
com.horcrux.svg.R$styleable: int MenuItem_android_title
com.horcrux.svg.R$styleable: int[] CompoundButton
com.horcrux.svg.R$dimen: int abc_button_inset_horizontal_material
okio.Timeout: boolean hasDeadline
com.horcrux.svg.R$drawable: int abc_seekbar_tick_mark_material
com.horcrux.svg.R$dimen: int notification_right_side_padding_top
com.horcrux.svg.R$attr: int failureImage
com.horcrux.svg.R$attr: int customNavigationLayout
okhttp3.internal.huc.OkHttpURLConnection: boolean connectPending
okhttp3.internal.huc.OutputStreamRequestBody$1: okio.BufferedSink val$sink
okhttp3.internal.Util: okio.ByteString UTF_32_LE_BOM
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
okhttp3.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSize
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.horcrux.svg.R$id: int italic
okhttp3.internal.http2.Http2: byte FLAG_PADDED
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeStyle
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.http1.Http1Codec: int STATE_READ_RESPONSE_HEADERS
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.R$anim: int catalyst_slide_up
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean canceled
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.horcrux.svg.R$attr: int hideOnContentScroll
com.horcrux.svg.R$dimen: int abc_text_size_small_material
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
okhttp3.internal.connection.RealConnection: int allocationLimit
com.horcrux.svg.R$layout: int abc_alert_dialog_button_bar_material
okhttp3.HttpUrl: java.lang.String username
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabBar
com.horcrux.svg.R$string: int search_description
com.horcrux.svg.R$attr: int windowMinWidthMinor
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTint
com.horcrux.svg.R$string: int menuitem_description
com.horcrux.svg.R$attr: int textAllCaps
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String NAME
com.horcrux.svg.R$string: int catalyst_reload_button
com.horcrux.svg.R$attr: int roundingBorderColor
okhttp3.internal.huc.OutputStreamRequestBody: boolean closed
com.horcrux.svg.R$attr: int textAppearanceSmallPopupMenu
com.horcrux.svg.R$dimen: int abc_control_padding_material
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchStrategy
okhttp3.internal.http2.Http2Connection$5: int val$streamId
okhttp3.internal.tls.DistinguishedNameParser: char[] chars
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
com.horcrux.svg.R$styleable: int ActionBar_hideOnContentScroll
com.horcrux.svg.R$color: int foreground_material_dark
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int homeLayout
okhttp3.internal.huc.StreamedRequestBody: okio.Pipe pipe
com.horcrux.svg.R$attr: int buttonIconDimen
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.horcrux.svg.R$styleable: int SwitchCompat_switchPadding
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
com.facebook.react.bridge.Inspector$Page: int mId
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_ENCODING
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Time
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.horcrux.svg.R$id: int title_template
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mOperations
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
okhttp3.internal.huc.OutputStreamRequestBody$1: long val$expectedContentLength
com.horcrux.svg.R$attr: int buttonBarPositiveButtonStyle
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
okhttp3.internal.connection.StreamAllocation: boolean reportedAcquired
okhttp3.CacheControl: int maxAgeSeconds
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat
com.horcrux.svg.VirtualView: android.graphics.Path mPath
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.horcrux.svg.R$styleable: int MenuItem_showAsAction
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.horcrux.svg.R$attr: int buttonBarNegativeButtonStyle
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long bytesRead
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte EXCEPTION_MARKER
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$drawable: int abc_ic_star_black_36dp
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.VirtualView: android.graphics.Path mClipRegionPath
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
com.horcrux.svg.R$string: int catalyst_debug_stop
com.horcrux.svg.R$attr: int overlapAnchor
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_LOCATION
com.horcrux.svg.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.horcrux.svg.R$color: int bright_foreground_disabled_material_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
com.horcrux.svg.R$attr: int actionModeFindDrawable
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
com.horcrux.svg.R$color: int dim_foreground_material_dark
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long bytesRemaining
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.internal.ws.RealWebSocket: long queueSize
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
com.horcrux.svg.R$attr: int popupWindowStyle
okhttp3.Handshake: java.util.List localCertificates
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
com.horcrux.svg.R$style: int Base_DialogWindowTitle_AppCompat
com.horcrux.svg.R$layout: int abc_action_menu_layout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.horcrux.svg.R$attr: int progressBarPadding
com.horcrux.svg.R$dimen: int abc_select_dialog_padding_start_material
com.horcrux.svg.R$color: int dim_foreground_material_light
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EXS
okhttp3.internal.connection.RealConnection: boolean noNewStreams
com.horcrux.svg.R$styleable: int Toolbar_titleMarginEnd
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MAIN_BUNDLE
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.horcrux.svg.R$string: int abc_activity_chooser_view_see_all
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.horcrux.svg.R$attr: int iconTint
com.horcrux.svg.R$attr: int textAppearanceLargePopupMenu
com.horcrux.svg.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.horcrux.svg.R$attr: int listPreferredItemPaddingLeft
okhttp3.TlsVersion: java.lang.String javaName
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int SearchView_android_maxWidth
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
com.horcrux.svg.R$layout: int abc_select_dialog_material
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.horcrux.svg.VirtualView: android.graphics.RectF mClipBounds
com.horcrux.svg.R$styleable: int MenuGroup_android_checkableBehavior
okhttp3.internal.http2.Http2Codec: java.lang.String PROXY_CONNECTION
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$dimen: int disabled_alpha_material_dark
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.horcrux.svg.VirtualView: java.util.ArrayList elements
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Button
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCutDrawable
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.horcrux.svg.R$style: int Widget_AppCompat_DrawerArrowToggle
com.horcrux.svg.R$styleable: int ButtonBarLayout_allowStacking
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions
com.horcrux.svg.R$attr: int keylines
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.horcrux.svg.R$styleable: int ActionBar_subtitle
com.horcrux.svg.R$style: int Theme_Catalyst
com.horcrux.svg.RenderableView: float strokeDashoffset
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate
com.horcrux.svg.R$string: int catalyst_settings_title
okhttp3.MediaType: java.lang.String TOKEN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
com.horcrux.svg.R$color: int material_blue_grey_800
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar_Discrete
okhttp3.Dispatcher: boolean $assertionsDisabled
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.horcrux.svg.R$id: int split_action_bar
com.horcrux.svg.R$string: int combobox_description
okhttp3.internal.Util$2: boolean val$daemon
okhttp3.internal.http.RealInterceptorChain: int calls
okhttp3.OkHttpClient: int writeTimeout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.horcrux.svg.R$id: int rn_redbox_report_label
com.horcrux.svg.R$attr: int roundedCornerRadius
com.horcrux.svg.R$styleable: int SearchView_android_imeOptions
com.horcrux.svg.R$id: int titleDividerNoCustom
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
okhttp3.HttpUrl: java.lang.String fragment
com.horcrux.svg.R$dimen: int abc_text_size_large_material
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMinor
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.horcrux.svg.R$id: int right_side
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.horcrux.svg.R$layout: int abc_action_mode_bar
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
okhttp3.internal.http2.Settings: int COUNT
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.internal.http1.Http1Codec this$0
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean forWebSocket
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.horcrux.svg.R$attr: int listPreferredItemHeightSmall
com.horcrux.svg.R$attr: int backgroundImage
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
okhttp3.ConnectionPool: java.util.Deque connections
com.horcrux.svg.RenderableView: android.graphics.Paint$Join strokeLinejoin
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
okhttp3.internal.platform.OptionalMethod: java.lang.Class returnType
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeFindDrawable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
okhttp3.Response$Builder: okhttp3.Request request
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.horcrux.svg.R$id: int alertTitle
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.horcrux.svg.R$attr: int iconifiedByDefault
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
okhttp3.MultipartBody$Part: okhttp3.Headers headers
okhttp3.internal.http2.Http2Codec: java.lang.String KEEP_ALIVE
com.horcrux.svg.R$styleable: int DrawerArrowToggle_color
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.horcrux.svg.R$style: int Theme_AppCompat_NoActionBar
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.horcrux.svg.SvgView: boolean mResponsible
okhttp3.internal.ws.RealWebSocket: java.util.Random random
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_DOCUMENT_DIRECTORY
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogPreferredPadding
okhttp3.internal.http1.Http1Codec$ChunkedSource: boolean hasMoreChunks
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImage
com.horcrux.svg.R$styleable: int AlertDialog_multiChoiceItemLayout
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.horcrux.svg.R$styleable: int AppCompatTheme_viewInflaterClass
com.horcrux.svg.R$attr: int drawerArrowStyle
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.horcrux.svg.R$drawable: int abc_ic_menu_cut_mtrl_alpha
okhttp3.internal.http2.Http2: byte TYPE_RST_STREAM
okhttp3.internal.http2.Http2Connection: java.lang.String hostname
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
com.horcrux.svg.R$attr: int actionModeCloseDrawable
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopLeft
com.horcrux.svg.R$layout: int notification_template_custom_big
com.horcrux.svg.R$color: int dim_foreground_disabled_material_dark
okhttp3.RealCall: okhttp3.EventListener eventListener
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method getMethod
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.facebook.react.uimanager.events.ReactEventEmitter: android.util.SparseArray mEventEmitters
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.horcrux.svg.R$color: int material_blue_grey_950
okhttp3.internal.ws.RealWebSocket: boolean $assertionsDisabled
okhttp3.internal.platform.OptionalMethod: java.lang.Class[] methodParams
okhttp3.internal.http1.Http1Codec: okhttp3.OkHttpClient client
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$string: int abc_menu_delete_shortcut_label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.horcrux.svg.R$attr: int showDividers
com.horcrux.svg.R$attr: int fontProviderFetchTimeout
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request downloadRequest
com.horcrux.svg.R$styleable: int MenuItem_android_titleCondensed
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType IN
com.horcrux.svg.R$drawable: int notification_bg
com.horcrux.svg.R$id: int search_mag_icon
com.horcrux.svg.R$string: int search_menu_title
okhttp3.internal.http2.Http2Connection$Builder: boolean client
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object lock
com.horcrux.svg.R$attr: int titleMargin
okhttp3.internal.ws.WebSocketWriter: boolean isClient
okhttp3.Handshake: java.util.List peerCertificates
com.horcrux.svg.R$dimen: int abc_dialog_min_width_minor
okhttp3.internal.Util: okio.ByteString UTF_16_BE_BOM
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
okhttp3.Cache: int writeAbortCount
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.horcrux.svg.R$style: int CalendarDatePickerDialog
com.horcrux.svg.R$drawable: int abc_ic_menu_overflow_material
okhttp3.HttpUrl: char[] HEX_DIGITS
com.horcrux.svg.R$id: int text
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.internal.huc.OkHttpURLConnection this$0
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
okhttp3.CacheControl: boolean noCache
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.horcrux.svg.R$styleable: int[] View
com.horcrux.svg.R$attr: int alertDialogButtonGroupStyle
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
com.horcrux.svg.R$color: int primary_dark_material_dark
com.horcrux.svg.R$dimen: int abc_text_size_title_material
com.horcrux.svg.R$color: int switch_thumb_disabled_material_light
okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.horcrux.svg.R$id: int line1
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.horcrux.svg.R$string: int catalyst_hot_reloading_stop
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
com.horcrux.svg.R$styleable: int Toolbar_titleMargins
com.horcrux.svg.SvgView: java.util.Map mDefinedMasks
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_Underlined
com.horcrux.svg.R$color: int primary_text_disabled_material_light
com.horcrux.svg.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.horcrux.svg.R$dimen: int abc_text_size_display_2_material
com.horcrux.svg.R$layout: int abc_search_view
com.horcrux.svg.R$styleable: int FontFamilyFont_fontVariationSettings
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256
com.horcrux.svg.R$styleable: int Spinner_android_dropDownWidth
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Stream stream
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.horcrux.svg.R$style: int Widget_AppCompat_EditText
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarItemBackground
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.OkHttpClient client
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light
com.horcrux.svg.R$color: int material_blue_grey_900
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_VIDEOS
com.horcrux.svg.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int dividerHorizontal
com.horcrux.svg.R$attr: int checkboxStyle
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
okhttp3.internal.ws.RealWebSocket: java.lang.Runnable writerRunnable
okhttp3.Response$Builder: okhttp3.Handshake handshake
com.horcrux.svg.R$attr: int editTextColor
com.horcrux.svg.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedSlide
com.horcrux.svg.R$dimen: int abc_dialog_padding_material
okhttp3.OkHttpClient: int readTimeout
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.horcrux.svg.VirtualView: java.lang.String mClipPath
okhttp3.internal.http2.Huffman: byte[] CODE_LENGTHS
com.horcrux.svg.R$string: int catalyst_copy_button
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_right
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.RNFetchBlob.RNFetchBlob: okhttp3.OkHttpClient mClient
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
okhttp3.MediaType: java.lang.String charset
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
com.horcrux.svg.R$attr: int switchMinWidth
com.horcrux.svg.R$id: int centerCrop
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_enable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.HttpUrl url
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.horcrux.svg.R$id: int scrollIndicatorUp
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.horcrux.svg.R$attr: int listMenuViewStyle
com.horcrux.svg.R$id: int rn_redbox_loading_indicator
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
com.horcrux.svg.R$attr: int listLayout
com.horcrux.svg.R$attr: int autoSizeStepGranularity
com.horcrux.svg.R$styleable: int AppCompatTheme_homeAsUpIndicator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
com.horcrux.svg.R$drawable: int abc_ratingbar_indicator_material
com.horcrux.svg.R$styleable: int SearchView_queryHint
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_dark
com.facebook.react.views.view.ReactViewGroup: int DEFAULT_BACKGROUND_COLOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.RealCall$AsyncCall: okhttp3.RealCall this$0
com.horcrux.svg.R$styleable: int MenuView_preserveIconSpacing
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.horcrux.svg.R$styleable: int ActionBarLayout_android_layout_gravity
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.horcrux.svg.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.horcrux.svg.R$styleable: int LinearLayoutCompat_divider
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection
com.horcrux.svg.R$string: int abc_menu_function_shortcut_label
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.horcrux.svg.R$id: int custom
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
okhttp3.Cookie: java.lang.String value
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.internal.cache.DiskLruCache$2: okhttp3.internal.cache.DiskLruCache this$0
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large
okhttp3.Response$Builder: okhttp3.Protocol protocol
com.horcrux.svg.R$dimen: int abc_cascading_menus_min_smallest_width
okio.AsyncTimeout: long timeoutAt
com.horcrux.svg.R$string: int state_expanded_description
com.horcrux.svg.R$styleable: int Toolbar_titleTextColor
com.horcrux.svg.R$string: int catalyst_open_flipper_error
com.horcrux.svg.R$style: int AlertDialog_AppCompat_Light
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification
com.horcrux.svg.R$id: int right_icon
com.horcrux.svg.R$styleable: int GradientColor_android_centerY
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupWindow
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_dark
com.horcrux.svg.VirtualView: android.graphics.Path mCachedClipPath
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabView
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.horcrux.svg.R$style: int DialogAnimationFade
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$bool: int abc_config_actionMenuItemAllCaps
com.horcrux.svg.R$style: int Widget_AppCompat_PopupWindow
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_RELOAD
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink
com.horcrux.svg.R$styleable: int ActionBar_navigationMode
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_threshold
com.horcrux.svg.R$attr: int autoCompleteTextViewStyle
com.facebook.react.bridge.queue.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$color: int notification_action_color_filter
com.horcrux.svg.R$attr: int divider
com.horcrux.svg.R$drawable: int abc_item_background_holo_dark
okhttp3.HttpUrl$Builder: int port
okhttp3.OkHttpClient: okhttp3.Dns dns
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat
com.horcrux.svg.R$style: int Widget_AppCompat_ListMenuView
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService writerExecutor
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.horcrux.svg.SvgView: java.util.Map mDefinedTemplates
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_TEMP_DIRECTORY
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$anim: int catalyst_fade_out
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int[] ActionBar
okhttp3.internal.cache2.Relay: int sourceCount
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
com.horcrux.svg.R$drawable: int abc_scrubber_primary_mtrl_alpha
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.horcrux.svg.R$styleable: int ActionBar_progressBarStyle
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mPreOperations
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.horcrux.svg.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int catalyst_debug_connecting
okhttp3.Cache$2: java.lang.String nextUrl
okhttp3.internal.http1.Http1Codec$ChunkedSink: okhttp3.internal.http1.Http1Codec this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.horcrux.svg.R$styleable: int GradientColorItem_android_color
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_dark
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
com.horcrux.svg.R$styleable: int AlertDialog_singleChoiceItemLayout
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.horcrux.svg.R$id: int src_over
com.horcrux.svg.R$attr: int ratingBarStyle
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
okhttp3.internal.http2.Http2Connection$6: okio.Buffer val$buffer
com.horcrux.svg.R$attr: int subMenuArrow
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display1
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputVideo
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Headline
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.horcrux.svg.R$attr: int seekBarStyle
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.horcrux.svg.R$layout: int notification_template_icon_group
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.horcrux.svg.R$color: int material_grey_100
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Dialog
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundedCornerRadius
okhttp3.Response$Builder: long sentRequestAtMillis
okhttp3.EventListener$2: okhttp3.EventListener val$listener
com.horcrux.svg.R$styleable: int AppCompatTheme_switchStyle
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeStepGranularity
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
okhttp3.internal.http2.Http2Stream$FramingSource: boolean $assertionsDisabled
com.horcrux.svg.R$id: int start
com.horcrux.svg.R$attr: int actionMenuTextColor
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.horcrux.svg.R$dimen: int abc_list_item_padding_horizontal_material
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomStart
okhttp3.MultipartBody: byte[] COLONSPACE
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
okhttp3.internal.JavaNetHeaders: java.util.Comparator FIELD_NAME_COMPARATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int actionBarItemBackground
com.horcrux.svg.VirtualView: float[] sRawMatrix
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String JAVASCRIPT_INTERFACE
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
okhttp3.OkHttpClient: int callTimeout
okhttp3.internal.http2.Http2Stream$FramingSink: long EMIT_BUFFER_SIZE
com.horcrux.svg.R$style: int Base_Theme_AppCompat
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.horcrux.svg.R$attr: int layout
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableCompat
com.horcrux.svg.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopRight
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_FORWARD
com.reactnativecommunity.webview.RNCWebViewManager: int SHOULD_OVERRIDE_URL_LOADING_TIMEOUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.horcrux.svg.R$attr: int imageButtonStyle
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSThreadDestructionComplete
okhttp3.internal.ws.WebSocketReader: boolean closed
com.horcrux.svg.VirtualView: com.facebook.react.bridge.ReactContext mContext
com.horcrux.svg.R$attr: int itemPadding
com.horcrux.svg.R$attr: int tickMarkTintMode
okhttp3.internal.http.HttpDate: long MAX_DATE
okhttp3.Cache: okhttp3.internal.cache.InternalCache internalCache
com.horcrux.svg.R$styleable: int MenuItem_iconTintMode
com.horcrux.svg.R$dimen: int abc_text_size_subtitle_material_toolbar
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
okhttp3.Cache$2: java.util.Iterator delegate
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextStyle
com.horcrux.svg.R$anim: int catalyst_fade_in
com.horcrux.svg.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.horcrux.svg.R$attr: int font
okhttp3.Cookie: boolean hostOnly
okhttp3.internal.http2.Http2Connection: java.util.Map streams
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response response
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogStyle
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_height
com.horcrux.svg.RenderableViewManager: double EPSILON
okhttp3.internal.http2.Http2: byte TYPE_SETTINGS
okhttp3.internal.http2.Http2Connection: boolean $assertionsDisabled
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.horcrux.svg.R$attr: int actionDropDownStyle
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.horcrux.svg.R$layout: int abc_popup_menu_header_item_layout
com.facebook.react.devsupport.LogBoxModule: android.view.View mReactRootView
com.horcrux.svg.R$styleable: int PopupWindow_android_popupBackground
okhttp3.CipherSuite: java.lang.String javaName
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
com.horcrux.svg.R$styleable: int TextAppearance_android_textFontWeight
com.horcrux.svg.R$attr: int actionBarTheme
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.horcrux.svg.RenderableView: float strokeMiterlimit
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTheme
com.horcrux.svg.R$attr: int actionBarTabStyle
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableTransition
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.horcrux.svg.R$string: int abc_menu_sym_shortcut_label
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_HISTORY
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.horcrux.svg.R$attr: int layout_behavior
com.horcrux.svg.R$anim: int abc_tooltip_enter
okhttp3.OkHttpClient: java.util.List connectionSpecs
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.horcrux.svg.R$drawable: int abc_ic_arrow_drop_right_black_24dp
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheInterceptor this$0
com.horcrux.svg.R$attr: int panelBackground
com.horcrux.svg.R$string: int catalyst_dismiss_button
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackground
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
com.horcrux.svg.R$layout: int select_dialog_multichoice_material
com.horcrux.svg.RenderableView: java.util.ArrayList mLastMergedList
com.horcrux.svg.SvgView: java.util.Map mDefinedBrushes
com.horcrux.svg.R$anim: int abc_tooltip_exit
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
com.horcrux.svg.R$styleable: int ActionBar_customNavigationLayout
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.horcrux.svg.R$styleable: int[] TextAppearance
com.horcrux.svg.R$style: int Animation_AppCompat_Tooltip
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.horcrux.svg.R$dimen: int notification_large_icon_height
okhttp3.MultipartBody: java.util.List parts
com.horcrux.svg.R$styleable: int FontFamily_fontProviderCerts
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
okhttp3.Response$Builder: okhttp3.Response networkResponse
com.horcrux.svg.R$attr: int firstBaselineToTopHeight
com.horcrux.svg.R$string: int catalyst_reload
com.horcrux.svg.R$drawable: int abc_ic_go_search_api_material
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.horcrux.svg.R$attr: int roundBottomLeft
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
com.horcrux.svg.R$id: int decor_content_parent
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$attr: int layout_keyline
com.horcrux.svg.R$styleable: int DrawerArrowToggle_spinBars
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableStartCompat
com.horcrux.svg.R$attr: int buttonBarStyle
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless
com.horcrux.svg.R$id: int accessibility_actions
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_Alert
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int[] DrawerArrowToggle
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarDivider
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
androidx.recyclerview.widget.RecyclerView: long NO_ID
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.ErrorCode val$errorCode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$drawable: int abc_scrubber_track_mtrl_alpha
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.horcrux.svg.R$layout: int abc_action_bar_up_container
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String SELECTION_DATE_TAKEN
okhttp3.MultipartBody: okhttp3.MediaType MIXED
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.VirtualView: int CLIP_RULE_EVENODD
com.horcrux.svg.R$styleable: int FontFamilyFont_fontStyle
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.horcrux.svg.R$attr: int fontProviderCerts
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomRight
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
com.horcrux.svg.R$id: int notification_background
com.horcrux.svg.R$attr: int listChoiceBackgroundIndicator
com.horcrux.svg.R$drawable: int abc_ic_star_black_48dp
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$integer: int abc_config_activityShortDur
com.horcrux.svg.R$style: int redboxButton
com.horcrux.svg.R$drawable: int abc_btn_default_mtrl_shape
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.horcrux.svg.R$attr: int spinnerStyle
okhttp3.MediaType: java.lang.String QUOTED
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
com.horcrux.svg.R$anim: int catalyst_push_up_in
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyle
com.horcrux.svg.R$dimen: int abc_switch_padding
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.horcrux.svg.R$styleable: int Toolbar_contentInsetRight
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
com.horcrux.svg.R$attr: int searchHintIcon
com.horcrux.svg.R$styleable: int[] ActionMenuItemView
com.horcrux.svg.R$color: int highlighted_text_material_dark
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PC
com.horcrux.svg.R$styleable: int AppCompatTheme_popupWindowStyle
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Inverse
com.horcrux.svg.R$styleable: int SearchView_submitBackground
com.horcrux.svg.R$string: int state_collapsed_description
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
com.horcrux.svg.R$attr: int queryBackground
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
okhttp3.internal.cache2.Relay: okio.Buffer buffer
com.horcrux.svg.R$attr: int alertDialogStyle
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
com.horcrux.svg.R$id: int radio
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.horcrux.svg.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.horcrux.svg.R$styleable: int FontFamilyFont_ttcIndex
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Caption
okhttp3.Dns: okhttp3.Dns SYSTEM
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
okhttp3.Protocol: java.lang.String protocol
okhttp3.internal.NamedRunnable: java.lang.String name
com.horcrux.svg.R$drawable: int abc_list_divider_material
com.horcrux.svg.R$dimen: int tooltip_margin
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.horcrux.svg.VirtualView: android.graphics.Region mStrokeRegion
okhttp3.RequestBody$1: okio.ByteString val$content
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableRightCompat
com.horcrux.svg.R$styleable: int[] ButtonBarLayout
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.horcrux.svg.R$attr: int paddingStart
com.google.android.material.theme.MaterialComponentsViewInflater: int floatingToolbarItemBackgroundResId
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
com.horcrux.svg.R$id: int rn_redbox_line_separator
okio.Timeout: long timeoutNanos
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_light
com.horcrux.svg.R$layout: int select_dialog_item_material
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
com.horcrux.svg.R$drawable: int tooltip_frame_light
com.horcrux.svg.R$styleable: int[] GradientColor
com.horcrux.svg.R$attr: int switchPadding
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.horcrux.svg.SvgView: float mMinX
okhttp3.internal.http2.Http2Codec: java.lang.String CONNECTION
com.horcrux.svg.R$attr: int contentInsetStart
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.horcrux.svg.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
okhttp3.Response: okhttp3.Handshake handshake
okhttp3.internal.http2.Http2Connection: boolean shutdown
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService listenerExecutor
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.LinkedBlockingQueue taskQueue
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.horcrux.svg.R$dimen: int abc_floating_window_z
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
okhttp3.CertificatePinner: java.util.Set pins
okhttp3.internal.http2.Http2Codec: java.lang.String TE
okhttp3.CacheControl$Builder: boolean immutable
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Throwable callFailure
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledFuture cancelFuture
com.horcrux.svg.R$drawable: int abc_cab_background_top_mtrl_alpha
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat_Layout
com.horcrux.svg.R$attr: int isLightTheme
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_major
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$id: int search_src_text
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeTextType
com.horcrux.svg.R$id: int time
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
com.horcrux.svg.R$drawable: int abc_ic_voice_search_api_material
com.horcrux.svg.R$color: int abc_tint_default
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.horcrux.svg.R$style: int Widget_AppCompat_ActionMode
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
okhttp3.Protocol: okhttp3.Protocol HTTP_2
com.horcrux.svg.R$attr: int colorButtonNormal
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopEnd
com.horcrux.svg.R$attr: int numericModifiers
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
okhttp3.internal.http2.Http2Codec: okhttp3.Protocol protocol
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_015
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_searchview_description_voice
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
okhttp3.Response: okhttp3.Protocol protocol
com.horcrux.svg.R$attr: int titleTextColor
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light
com.horcrux.svg.R$color: int secondary_text_disabled_material_dark
com.horcrux.svg.R$color: int abc_input_method_navigation_guard
com.horcrux.svg.R$color: int bright_foreground_disabled_material_light
okhttp3.internal.http1.Http1Codec$FixedLengthSink: long bytesRemaining
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
okhttp3.HttpUrl: java.util.List pathSegments
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$string: int state_on_description
com.horcrux.svg.R$attr: int actualImageUri
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.horcrux.svg.R$dimen: int notification_small_icon_size_as_large
com.horcrux.svg.R$styleable: int MenuItem_actionViewClass
okhttp3.internal.cache.DiskLruCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu
com.horcrux.svg.R$attr: int backgroundTint
com.horcrux.svg.R$styleable: int MenuItem_numericModifiers
com.horcrux.svg.R$string: int button_description
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar
okhttp3.RealCall: boolean forWebSocket
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.horcrux.svg.R$color: int abc_search_url_text
com.horcrux.svg.R$styleable: int DrawerArrowToggle_thickness
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int DrawerArrowToggle_barLength
okhttp3.Cookie$Builder: boolean persistent
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
com.horcrux.svg.R$styleable: int Toolbar_contentInsetLeft
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.horcrux.svg.R$id: int textSpacerNoTitle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
com.horcrux.svg.R$dimen: int compat_button_inset_horizontal_material
com.horcrux.svg.R$attr: int navigationMode
com.horcrux.svg.R$styleable: int StateListDrawable_android_constantSize
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat_Light
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
com.horcrux.svg.R$style: int CalendarDatePickerStyle
com.horcrux.svg.R$drawable: int abc_ratingbar_small_material
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
okhttp3.internal.http2.Http2: byte TYPE_GOAWAY
com.horcrux.svg.R$dimen: int abc_progress_bar_height_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
okhttp3.internal.http1.Http1Codec: okio.BufferedSink sink
okhttp3.CertificatePinner$Pin: java.lang.String canonicalHostname
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogTheme
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
com.horcrux.svg.R$layout: int abc_action_menu_item_layout
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
okhttp3.internal.http.RealInterceptorChain: int writeTimeout
com.horcrux.svg.R$layout: int abc_screen_content_include
com.horcrux.svg.R$style: int Theme_Catalyst_LogBox
okhttp3.internal.tls.DistinguishedNameParser: int cur
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$string: int abc_action_menu_overflow_description
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
okhttp3.Protocol: okhttp3.Protocol SPDY_3
com.horcrux.svg.R$styleable: int LinearLayoutCompat_dividerPadding
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.horcrux.svg.R$string: int abc_action_mode_done
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Light
com.horcrux.svg.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
okhttp3.MultipartBody$Builder: java.util.List parts
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.horcrux.svg.R$id: int fps_text
com.horcrux.svg.R$styleable: int ActionBar_elevation
com.horcrux.svg.R$attr: int homeAsUpIndicator
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] PREVAILING_RULE
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.ForwardingTimeout timeout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
com.horcrux.svg.R$layout: int abc_list_menu_item_radio
com.horcrux.svg.R$attr: int progressBarStyle
com.horcrux.svg.R$id: int listMode
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.horcrux.svg.R$integer: int cancel_button_image_alpha
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
okhttp3.internal.cache.DiskLruCache$3: java.util.Iterator delegate
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.horcrux.svg.VirtualView: double canvasDiagonal
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
androidx.recyclerview.widget.RecyclerView: int VERTICAL
com.horcrux.svg.R$attr: int subtitleTextStyle
okhttp3.internal.platform.OptionalMethod: java.lang.String methodName
com.horcrux.svg.R$layout: int abc_action_bar_title_item
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeBackground
okhttp3.ConnectionPool: int maxIdleConnections
okhttp3.internal.http2.Settings: int set
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead
com.horcrux.svg.R$styleable: int SimpleDraweeView_viewAspectRatio
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
okhttp3.internal.ws.WebSocketWriter: boolean activeWriter
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.RealConnection this$0
com.horcrux.svg.R$id: int spacer
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat
com.horcrux.svg.VirtualView: android.graphics.Matrix mCTM
com.horcrux.svg.R$style: int Platform_V25_AppCompat
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
okhttp3.internal.http2.Huffman: int[] CODES
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRunnable
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
okhttp3.Cache$Entry: okhttp3.Protocol protocol
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
okhttp3.internal.cache.DiskLruCache: java.io.File directory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.horcrux.svg.R$styleable: int GradientColor_android_endColor
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MINDATE
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] $VALUES
okhttp3.Cache$Entry: long sentRequestMillis
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.horcrux.svg.R$color: int accent_material_light
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
okhttp3.ResponseBody: java.io.Reader reader
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
com.horcrux.svg.R$drawable: int notification_bg_normal_pressed
com.horcrux.svg.R$id: int left
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTextPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
com.horcrux.svg.R$styleable: int[] CoordinatorLayout
com.horcrux.svg.R$attr: int contentDescription
com.horcrux.svg.R$styleable: int SearchView_suggestionRowLayout
com.horcrux.svg.R$drawable: int abc_text_cursor_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_INSTANCE_INIT_START
com.horcrux.svg.R$styleable: int Toolbar_navigationIcon
com.horcrux.svg.R$styleable: int AppCompatTheme_seekBarStyle
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String hostname
okhttp3.HttpUrl: java.lang.String url
okhttp3.Dispatcher: java.util.Deque runningAsyncCalls
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
com.horcrux.svg.R$attr: int switchStyle
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat
com.horcrux.svg.R$color: int catalyst_redbox_background
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.horcrux.svg.R$attr: int roundingBorderPadding
com.horcrux.svg.R$attr: int windowFixedHeightMinor
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundAsCircle
okhttp3.internal.http1.Http1Codec$ChunkedSource: long NO_CHUNK_YET
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
okhttp3.internal.http2.Http2: byte FLAG_NONE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Indicator
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.horcrux.svg.R$dimen: int abc_text_size_body_2_material
com.horcrux.svg.R$styleable: int SearchView_android_focusable
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: boolean completed
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_LE
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_start_material
com.horcrux.svg.R$attr: int selectableItemBackground
com.horcrux.svg.R$id: int expanded_menu
com.horcrux.svg.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
okhttp3.Response: long sentRequestAtMillis
okhttp3.internal.http2.Header: okio.ByteString value
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
okhttp3.Cookie: boolean persistent
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpCodec
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.horcrux.svg.R$color: int primary_text_disabled_material_dark
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
okhttp3.internal.http2.Http2Connection$2: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat_Light
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.horcrux.svg.R$layout: int abc_tooltip
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
com.horcrux.svg.R$attr: int windowFixedWidthMajor
com.horcrux.svg.R$attr: int trackTintMode
okhttp3.internal.cache.DiskLruCache$Editor$1: okhttp3.internal.cache.DiskLruCache$Editor this$1
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
okhttp3.Dispatcher: java.util.Deque readyAsyncCalls
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call call
com.horcrux.svg.R$drawable: int abc_btn_radio_material
com.horcrux.svg.R$attr: int fontProviderQuery
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
com.horcrux.svg.R$styleable: int[] Spinner
okhttp3.Request: java.lang.String method
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTextView_fontVariationSettings
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
okhttp3.Cache: int networkCount
com.horcrux.svg.R$attr: int textColorAlertDialogListItem
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
com.horcrux.svg.R$string: int catalyst_hot_reloading
com.horcrux.svg.R$drawable: int abc_ic_search_api_material
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_end_material
com.horcrux.svg.R$dimen: int notification_large_icon_width
okhttp3.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT
com.horcrux.svg.R$styleable: int Toolbar_subtitle
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DISMISSED
com.horcrux.svg.R$attr: int popupMenuStyle
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_max_height
com.horcrux.svg.R$string: int abc_menu_enter_shortcut_label
com.horcrux.svg.R$drawable: int abc_ic_ab_back_material
com.horcrux.svg.R$styleable: int SearchView_voiceIcon
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.horcrux.svg.R$styleable: int Toolbar_collapseIcon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_INSTANCE_INIT_END
com.horcrux.svg.R$dimen: int hint_alpha_material_light
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlHighlight
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_CACHE_DIRECTORY
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_DELETE
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.R$string: int menubar_description
com.horcrux.svg.R$color: int primary_text_default_material_light
com.horcrux.svg.R$attr: int listDividerAlertDialog
com.horcrux.svg.VirtualView: android.graphics.RectF mMarkerBounds
com.horcrux.svg.R$string: int catalyst_heap_capture
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
com.horcrux.svg.R$layout: int dev_loading_view
com.horcrux.svg.R$attr: int dropDownListViewStyle
com.horcrux.svg.R$styleable: int AlertDialog_showTitle
com.horcrux.svg.VirtualView: com.horcrux.svg.GlyphContext glyphContext
com.horcrux.svg.R$drawable: int abc_ic_star_black_16dp
com.horcrux.svg.R$styleable: int ActionMode_backgroundSplit
com.horcrux.svg.R$id: int view_tag_instance_handle
com.horcrux.svg.R$styleable: int[] ActionBarLayout
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int SwitchCompat_switchTextAppearance
okhttp3.Cache$CacheRequestImpl: okio.Sink body
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabView
okhttp3.internal.ws.RealWebSocket$2: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
com.horcrux.svg.R$dimen: int abc_seekbar_track_background_height_material
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor networkInterceptor
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
okhttp3.RealCall: okio.AsyncTimeout timeout
com.horcrux.svg.R$attr: int multiChoiceItemLayout
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageResource
com.horcrux.svg.R$color: int error_color_material_light
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
com.horcrux.svg.R$styleable: int[] SearchView
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$dimen: int abc_text_size_headline_material
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView contextElement
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String TAG
com.horcrux.svg.R$attr: int roundAsCircle
com.horcrux.svg.R$dimen: int notification_subtext_size
okhttp3.MultipartBody: okhttp3.MediaType originalType
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTint
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarStyle
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.horcrux.svg.R$attr: int showTitle
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRenderableView
com.horcrux.svg.R$layout: int redbox_view
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealConnection connection
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
com.horcrux.svg.R$layout: int abc_list_menu_item_icon
okhttp3.internal.http.RealInterceptorChain: int readTimeout
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.horcrux.svg.R$id: int progress_circular
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_Menu
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarWidgetTheme
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
okhttp3.internal.connection.RouteSelector: java.util.List proxies
com.horcrux.svg.R$style: int Animation_Catalyst_RedBox
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.horcrux.svg.R$attr: int colorPrimary
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.horcrux.svg.R$attr: int fadeDuration
com.horcrux.svg.R$style: int Widget_AppCompat_ImageButton
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.horcrux.svg.R$attr: int gapBetweenBars
okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow
com.horcrux.svg.VirtualView: android.graphics.RectF mBox
okhttp3.internal.http2.Http2: byte TYPE_PRIORITY
com.horcrux.svg.R$attr: int dialogPreferredPadding
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.horcrux.svg.R$dimen: int abc_text_size_subhead_material
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.horcrux.svg.R$dimen: int compat_button_inset_vertical_material
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
okhttp3.internal.http.StatusLine: java.lang.String message
com.horcrux.svg.R$id: int scrollView
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
com.horcrux.svg.RenderableView: int JOIN_MITER
com.horcrux.svg.R$style: int Base_Animation_AppCompat_DropDownUp
okhttp3.internal.Util: okio.ByteString UTF_32_BE_BOM
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextAppearance
com.facebook.react.bridge.ReactSoftException: java.util.List sListeners
okhttp3.internal.cache.DiskLruCache: boolean closed
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String dn
com.horcrux.svg.R$styleable: int AlertDialog_android_layout
com.horcrux.svg.VirtualView: java.lang.String mMarkerStart
okhttp3.Cookie: java.lang.String name
com.horcrux.svg.R$drawable: int abc_textfield_activated_mtrl_alpha
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.horcrux.svg.R$color: int abc_btn_colored_text_material
okhttp3.internal.ws.RealWebSocket$2: okhttp3.Request val$request
com.horcrux.svg.R$styleable: int MenuItem_android_alphabeticShortcut
okhttp3.internal.http2.Http2Connection: long bytesLeftInWriteWindow
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
okhttp3.CacheControl: boolean noTransform
com.horcrux.svg.R$styleable: int StateListDrawable_android_exitFadeDuration
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String moduleName
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray fill
com.horcrux.svg.R$styleable: int Toolbar_logo
com.horcrux.svg.R$attr: int listPopupWindowStyle
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTintMode
com.horcrux.svg.R$styleable: int SwitchCompat_trackTint
com.horcrux.svg.VirtualView: int mClipRule
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.Cookie: java.lang.String domain
com.horcrux.svg.R$color: int switch_thumb_material_dark
okhttp3.internal.cache.CacheInterceptor$1: boolean cacheRequestClosed
com.horcrux.svg.R$id: int end
com.horcrux.svg.R$attr: int theme
com.horcrux.svg.R$styleable: int ActivityChooserView_initialActivityCount
com.horcrux.svg.R$attr: int windowFixedWidthMinor
okhttp3.RequestBody$2: byte[] val$content
okhttp3.Route: java.net.Proxy proxy
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
com.horcrux.svg.R$attr: int buttonBarButtonStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
com.horcrux.svg.SvgView: float mMinY
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.horcrux.svg.R$string: int abc_searchview_description_clear
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_ActionBar
com.horcrux.svg.R$style: int TextAppearance_AppCompat
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with
com.horcrux.svg.R$color: int button_material_light
com.horcrux.svg.R$styleable: int ActionMode_subtitleTextStyle
com.horcrux.svg.R$attr: int actionModeCopyDrawable
okhttp3.internal.http2.Http2: byte FLAG_END_HEADERS
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.horcrux.svg.R$styleable: int SearchView_searchHintIcon
com.horcrux.svg.R$drawable: int abc_tab_indicator_material
com.horcrux.svg.VirtualView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PERCENTAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
com.horcrux.svg.R$attr: int icon
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
okhttp3.internal.http.StatusLine: int code
com.horcrux.svg.R$attr: int paddingBottomNoButtons
com.horcrux.svg.R$attr: int splitTrack
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_minor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.horcrux.svg.R$attr: int colorPrimaryDark
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark
okhttp3.Address: okhttp3.HttpUrl url
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
okhttp3.internal.http2.Http2: byte FLAG_PRIORITY
com.horcrux.svg.R$dimen: int abc_text_size_button_material
okhttp3.OkHttpClient$Builder: int writeTimeout
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.horcrux.svg.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.horcrux.svg.R$styleable: int[] ViewBackgroundHelper
com.horcrux.svg.R$color: int primary_text_default_material_dark
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
okhttp3.internal.http1.Http1Codec$FixedLengthSource: okhttp3.internal.http1.Http1Codec this$0
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Menu
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.horcrux.svg.R$styleable: int MenuItem_actionLayout
okhttp3.CacheControl$Builder: int minFreshSeconds
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display2
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] EMPTY_RULE
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DialogWhenLarge
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
com.horcrux.svg.R$styleable: int CompoundButton_android_button
com.horcrux.svg.R$styleable: int[] FontFamily
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_DropDown
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
com.horcrux.svg.VirtualView: double fontSize
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
com.horcrux.svg.R$styleable: int SearchView_queryBackground
okhttp3.internal.ws.RealWebSocket$CancelRunnable: okhttp3.internal.ws.RealWebSocket this$0
com.horcrux.svg.R$dimen: int abc_edit_text_inset_horizontal_material
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbHeight
com.horcrux.svg.R$attr: int actionButtonStyle
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
com.horcrux.svg.R$integer: int react_native_inspector_proxy_port
com.horcrux.svg.R$styleable: int AlertDialog_listLayout
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.horcrux.svg.R$styleable: int Toolbar_titleMargin
com.horcrux.svg.R$styleable: int[] AppCompatTextHelper
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.horcrux.svg.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setHostname
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.horcrux.svg.R$color: int abc_tint_edittext
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
com.horcrux.svg.R$attr: int lastBaselineToBottomHeight
com.horcrux.svg.R$styleable: int SimpleDraweeView_backgroundImage
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
com.horcrux.svg.R$id: int buttonPanel
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
okhttp3.internal.http2.Http2Stream: java.util.Deque headersQueue
com.horcrux.svg.R$attr: int alertDialogTheme
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
com.horcrux.svg.R$styleable: int MenuView_android_windowAnimationStyle
com.horcrux.svg.R$id: int action_mode_bar
com.horcrux.svg.R$attr: int fontProviderFetchStrategy
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_NON_SCALING_STROKE
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.horcrux.svg.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.horcrux.svg.R$styleable: int[] StateListDrawable
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
com.horcrux.svg.R$string: int abc_capital_off
okhttp3.Response: okhttp3.Response networkResponse
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method putMethod
okhttp3.internal.ws.RealWebSocket: int sentPingCount
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.horcrux.svg.RenderableView: int FILL_RULE_NONZERO
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light
com.facebook.react.bridge.ReadableNativeMap$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.horcrux.svg.R$id: int screen
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener headersListener
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method openMethod
com.horcrux.svg.R$dimen: int abc_text_size_body_1_material
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgentWithApplicationName
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
com.horcrux.svg.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.horcrux.svg.RenderableView: int FILL_RULE_EVENODD
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: boolean proceed
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
okhttp3.internal.Util$2: java.lang.String val$name
com.horcrux.svg.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.horcrux.svg.R$attr: int textAppearanceSearchResultTitle
com.horcrux.svg.R$style: int Animation_Catalyst_LogBox
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
com.horcrux.svg.R$attr: int progressBarImageScaleType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
okhttp3.internal.connection.StreamAllocation: boolean $assertionsDisabled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
okhttp3.FormBody$Builder: java.util.List values
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.horcrux.svg.R$attr: int overlayImage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.horcrux.svg.R$style: int Widget_AppCompat_Light_SearchView
okhttp3.FormBody$Builder: java.util.List names
okhttp3.MediaType: java.lang.String subtype
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
com.horcrux.svg.R$color: int abc_hint_foreground_material_dark
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.horcrux.svg.R$style: int Platform_Widget_AppCompat_Spinner
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_keyline
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.internal.platform.AndroidPlatform: java.lang.Class sslParametersClass
com.horcrux.svg.R$attr: int defaultQueryHint
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER_LEGACY
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Button
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_LE
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.horcrux.svg.R$styleable: int ActionBar_contentInsetRight
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
com.horcrux.svg.R$styleable: int[] AppCompatTheme
com.horcrux.svg.R$string: int state_busy_description
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$styleable: int FontFamilyFont_android_font
com.horcrux.svg.R$attr: int listItemLayout
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
okhttp3.internal.http2.Http2: byte TYPE_HEADERS
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.horcrux.svg.R$styleable: int[] GenericDraweeHierarchy
com.horcrux.svg.RenderableView: java.util.regex.Pattern regex
com.horcrux.svg.R$styleable: int Spinner_android_popupBackground
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String TAG
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabText
com.horcrux.svg.R$styleable: int[] AppCompatSeekBar
com.horcrux.svg.R$string: int alert_description
com.horcrux.svg.VirtualView: java.lang.String mDisplay
okhttp3.internal.http1.Http1Codec$ChunkedSink: boolean closed
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int actionModeSplitBackground
com.horcrux.svg.R$id: int action_mode_close_button
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
com.horcrux.svg.SvgView: java.lang.String mAlign
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Info
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
okhttp3.internal.http2.Http2Codec: java.lang.String UPGRADE
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$layout: int notification_action
com.horcrux.svg.R$layout: int abc_action_mode_close_item_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.horcrux.svg.R$attr: int dialogCornerRadius
com.horcrux.svg.R$id: int action_divider
com.horcrux.svg.R$id: int tag_unhandled_key_event_manager
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
okhttp3.internal.http2.Hpack$Reader: int headerCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.horcrux.svg.R$id: int icon_group
okhttp3.internal.http.RealInterceptorChain: int index
com.horcrux.svg.R$styleable: int FontFamilyFont_font
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
com.horcrux.svg.R$styleable: int MenuItem_android_visible
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.LinkedBlockingQueue fsTaskQueue
com.horcrux.svg.R$styleable: int Toolbar_titleTextAppearance
com.horcrux.svg.VirtualView: android.graphics.Region mClipRegion
io.invertase.firebase.common.ReactNativeFirebaseModule: io.invertase.firebase.common.TaskExecutorService executorService
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.horcrux.svg.R$attr: int titleMarginBottom
com.horcrux.svg.R$styleable: int ActionBar_title
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Caption
okhttp3.internal.http2.Http2Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$drawable: int abc_vector_test
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorLink
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body2
com.horcrux.svg.R$attr: int popupTheme
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.horcrux.svg.R$styleable: int ViewStubCompat_android_inflatedId
okhttp3.internal.Util: java.lang.reflect.Method addSuppressedExceptionMethod
okhttp3.internal.ws.WebSocketReader: boolean isClient
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.horcrux.svg.R$attr: int layout_insetEdge
com.horcrux.svg.R$attr: int titleTextAppearance
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
okhttp3.CacheControl: int minFreshSeconds
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_DEFAULT
okhttp3.OkHttpClient: int connectTimeout
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
com.horcrux.svg.R$style: int Platform_AppCompat_Light
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.horcrux.svg.R$drawable: int abc_textfield_default_mtrl_alpha
com.horcrux.svg.R$styleable: int[] ActivityChooserView
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_PHOTOS
com.horcrux.svg.R$style: int Platform_V25_AppCompat_Light
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.horcrux.svg.R$attr: int contentInsetStartWithNavigation
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
okhttp3.internal.tls.DistinguishedNameParser: int end
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_FILTER
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
com.horcrux.svg.R$drawable: int notification_icon_background
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $VALUES
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setUseSessionTickets
com.horcrux.svg.R$id: int right
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
com.horcrux.svg.R$attr: int autoSizeMinTextSize
com.horcrux.svg.R$drawable: int abc_seekbar_track_material
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.horcrux.svg.R$styleable: int SwitchCompat_showText
okhttp3.Cookie$Builder: boolean secure
com.horcrux.svg.R$attr: int progressBarAutoRotateInterval
com.horcrux.svg.R$id: int accessibility_hint
okhttp3.RequestBody$3: java.io.File val$file
com.horcrux.svg.R$id: int tag_transition_group
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOff
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display3
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.horcrux.svg.R$styleable: int AppCompatImageView_tintMode
com.horcrux.svg.R$dimen: int abc_dialog_corner_radius_material
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength[] strokeDasharray
okhttp3.Request$Builder: okhttp3.RequestBody body
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
okhttp3.internal.http2.Http2Connection$2: long val$unacknowledgedBytesRead
com.horcrux.svg.R$layout: int abc_screen_simple_overlay_action_mode
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$styleable: int MenuItem_android_numericShortcut
com.facebook.jni.IteratorHelper: java.lang.Object mElement
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$drawable: int abc_edit_text_material
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
okhttp3.CacheControl: java.lang.String headerValue
okhttp3.internal.connection.StreamAllocation: okhttp3.ConnectionPool connectionPool
com.horcrux.svg.R$string: int abc_menu_ctrl_shortcut_label
com.horcrux.svg.R$string: int abc_searchview_description_query
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.horcrux.svg.R$styleable: int SearchView_android_inputType
okhttp3.internal.tls.DistinguishedNameParser: int beg
okhttp3.internal.platform.AndroidPlatform: int MAX_LOG_LENGTH
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$styleable: int Toolbar_titleMarginTop
com.horcrux.svg.R$styleable: int GradientColor_android_type
com.horcrux.svg.R$color: int background_material_light
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.horcrux.svg.R$attr: int checkedTextViewStyle
okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0
com.horcrux.svg.R$attr: int tickMark
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
okhttp3.Cache: int VERSION
com.horcrux.svg.R$layout: int abc_cascading_menu_item_layout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.ws.WebSocketReader: int opcode
com.horcrux.svg.R$attr: int ratingBarStyleIndicator
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Headline
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
okhttp3.RequestBody$2: int val$offset
com.horcrux.svg.SvgView$Events: java.lang.String mName
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableItem
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_MIME_TYPE
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.horcrux.svg.R$styleable: int[] ActionMenuView
com.horcrux.svg.VirtualView: android.graphics.Region mRegion
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method getMethod
com.horcrux.svg.R$attr: int roundWithOverlayColor
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String SELECTED_PROTOCOL
com.horcrux.svg.R$attr: int showText
okhttp3.internal.http.RealResponseBody: long contentLength
com.horcrux.svg.RenderableView: int CAP_BUTT
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView
okhttp3.RequestBody$3: okhttp3.MediaType val$contentType
com.horcrux.svg.R$styleable: int Toolbar_android_minHeight
com.horcrux.svg.R$string: int catalyst_sample_profiler_enable
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
com.horcrux.svg.R$styleable: int AppCompatTextView_android_textAppearance
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
okio.ForwardingSource: okio.Source delegate
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
okhttp3.Response$Builder: okhttp3.Response cacheResponse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
okhttp3.CipherSuite: java.util.Map INSTANCES
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputImage
com.horcrux.svg.R$styleable: int AppCompatTheme_actionDropDownStyle
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: okhttp3.internal.http2.Http2Codec this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
com.horcrux.svg.R$attr: int dividerPadding
com.horcrux.svg.R$id: int action_image
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType UNKNOWN
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Response: okhttp3.CacheControl cacheControl
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_start_material
com.horcrux.svg.R$id: int up
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.horcrux.svg.R$layout: int abc_alert_dialog_title_material
com.horcrux.svg.R$styleable: int Spinner_popupTheme
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.Cookie$Builder: java.lang.String path
com.facebook.react.views.view.ReactViewGroup: java.lang.String mBackfaceVisibility
com.horcrux.svg.R$color: int error_color_material_dark
com.horcrux.svg.R$id: int accessibility_value
okhttp3.internal.http2.Header: int hpackSize
com.horcrux.svg.R$id: int react_test_id
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarButtonStyle
okhttp3.internal.cache.DiskLruCache: boolean initialized
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
com.horcrux.svg.R$attr: int displayOptions
com.horcrux.svg.R$attr: int listPreferredItemPaddingRight
com.horcrux.svg.RenderableView: float strokeOpacity
com.horcrux.svg.R$dimen: int abc_dialog_min_width_major
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
com.horcrux.svg.R$attr: int titleMargins
com.horcrux.svg.R$styleable: int GradientColor_android_tileMode
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.horcrux.svg.R$integer: int abc_config_activityDefaultDur
com.horcrux.svg.R$attr: int measureWithLargestChild
com.horcrux.svg.R$drawable: int abc_switch_track_mtrl_alpha
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_Solid
com.horcrux.svg.R$styleable: int SearchView_closeIcon
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.horcrux.svg.R$attr: int titleTextStyle
com.horcrux.svg.R$dimen: int highlight_alpha_material_colored
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int SpinnerDatePickerDialog
com.horcrux.svg.BuildConfig: java.lang.String BUILD_TYPE
com.horcrux.svg.R$layout: int redbox_item_title
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.horcrux.svg.R$drawable: int abc_btn_colored_material
com.horcrux.svg.R$styleable: int ViewStubCompat_android_id
com.horcrux.svg.R$layout: int abc_activity_chooser_view
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
okhttp3.internal.connection.StreamAllocation: boolean released
okhttp3.OkUrlFactory: okhttp3.internal.URLFilter urlFilter
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_light
com.horcrux.svg.R$id: int focusCrop
okhttp3.Cache$CacheRequestImpl: okhttp3.Cache this$0
com.horcrux.svg.R$drawable: int abc_list_focused_holo
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.horcrux.svg.R$attr: int windowActionBar
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.horcrux.svg.R$styleable: int[] CoordinatorLayout_Layout
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.horcrux.svg.R$styleable: int PopupWindow_overlapAnchor
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.Cookie: java.lang.String path
com.horcrux.svg.SvgView: float mVbWidth
com.horcrux.svg.R$id: int uniform
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
com.horcrux.svg.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.horcrux.svg.RenderableView: android.graphics.Paint$Cap strokeLinecap
com.horcrux.svg.R$color: int secondary_text_default_material_light
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
com.horcrux.svg.R$id: int topPanel
com.horcrux.svg.R$attr: int titleMarginEnd
com.horcrux.svg.R$drawable: int abc_btn_borderless_material
com.horcrux.svg.R$color: int abc_tint_spinner
okhttp3.internal.http2.Http2: byte TYPE_DATA
com.horcrux.svg.R$attr: int buttonTintMode
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.horcrux.svg.R$id: int fitEnd
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.horcrux.svg.R$bool: int abc_action_bar_embed_tabs
com.horcrux.svg.R$styleable: int StateListDrawable_android_visible
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView mTextRoot
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType NUMBER
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
okhttp3.Cache: int requestCount
com.horcrux.svg.R$drawable: int abc_text_select_handle_middle_mtrl_dark
okhttp3.internal.http1.Http1Codec: int HEADER_LIMIT
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
com.horcrux.svg.R$attr: int listPreferredItemHeightLarge
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.horcrux.svg.R$attr: int autoSizeTextType
com.horcrux.svg.R$layout: int abc_alert_dialog_material
com.horcrux.svg.R$attr: int closeItemLayout
com.horcrux.svg.R$styleable: int CompoundButton_buttonCompat
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.ForwardingTimeout timeout
com.horcrux.svg.R$id: int forever
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlNormal
com.horcrux.svg.R$id: int action_context_bar
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display3
com.horcrux.svg.VirtualView: float mOpacity
com.horcrux.svg.RenderableView: android.graphics.Path$FillType fillRule
com.horcrux.svg.R$anim: int abc_fade_in
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
com.horcrux.svg.R$dimen: int notification_right_icon_size
com.horcrux.svg.R$styleable: int[] RecycleListView
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
com.horcrux.svg.R$id: int view_tag_native_id
okhttp3.internal.http2.Http2Reader: boolean client
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock shouldOverrideUrlLoadingLock
com.horcrux.svg.R$styleable: int ActionMode_closeItemLayout
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_dither
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.horcrux.svg.R$layout: int abc_screen_toolbar
com.horcrux.svg.R$attr: int buttonPanelSideLayout
okhttp3.internal.cache2.Relay: long bufferMaxSize
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers responseHeaders
okhttp3.Cache$2: boolean canRemove
com.horcrux.svg.R$styleable: int[] StateListDrawableItem
okhttp3.internal.huc.OutputStreamRequestBody$1: long bytesReceived
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.RNFetchBlob.RNFetchBlob: android.util.SparseArray promiseTable
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.ReadableMap initialNotification
com.horcrux.svg.R$attr: int thumbTintMode
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableLeftCompat
okhttp3.MultipartBody: byte[] CRLF
com.horcrux.svg.R$styleable: int MenuGroup_android_menuCategory
com.horcrux.svg.R$attr: int actionModeWebSearchDrawable
com.horcrux.svg.R$styleable: int Toolbar_titleMarginBottom
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PX
com.horcrux.svg.R$string: int rn_tab_description
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
com.horcrux.svg.R$drawable: int abc_textfield_search_default_mtrl_alpha
okhttp3.CertificatePinner$Builder: java.util.List pins
com.horcrux.svg.R$id: int accessibility_role
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button
com.horcrux.svg.R$attr: int srcCompat
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_dimen
okhttp3.Address: okhttp3.Dns dns
com.horcrux.svg.R$styleable: int MenuView_android_horizontalDivider
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
com.horcrux.svg.VirtualView: android.graphics.Path mMarkerPath
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache: long size
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.horcrux.svg.R$attr: int alphabeticModifiers
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTopCompat
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
com.horcrux.svg.RenderableViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
okhttp3.Dispatcher: java.lang.Runnable idleCallback
okhttp3.CacheControl: boolean onlyIfCached
okhttp3.Route: okhttp3.Address address
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
okhttp3.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
com.horcrux.svg.R$attr: int panelMenuListTheme
okhttp3.internal.http2.Http2Connection$1: int val$streamId
com.horcrux.svg.RenderableView: java.util.ArrayList mAttributeList
okhttp3.Address: javax.net.SocketFactory socketFactory
com.horcrux.svg.R$attr: int textAppearanceListItemSmall
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
okhttp3.OkHttpClient$Builder: java.util.List interceptors
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
com.horcrux.svg.R$id: int action_bar_title
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_000
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.horcrux.svg.R$attr: int closeIcon
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Settings val$settings
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
com.horcrux.svg.VirtualView: float canvasWidth
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheRequest val$cacheRequest
com.horcrux.svg.R$attr: int goIcon
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okhttp3.ConnectionSpec$Builder: boolean tls
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
okhttp3.internal.http2.Http2Connection$5: boolean val$inFinished
com.horcrux.svg.R$drawable: int abc_list_selector_holo_light
com.horcrux.svg.SvgView: int mMeetOrSlice
okhttp3.OkHttpClient: okhttp3.Cache cache
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.horcrux.svg.R$attr: int actionMenuTextAppearance
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
com.horcrux.svg.R$id: int top
com.horcrux.svg.R$attr: int trackTint
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.horcrux.svg.R$attr: int selectableItemBackgroundBorderless
com.horcrux.svg.R$id: int select_dialog_listview
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebChromeClient mWebChromeClient
com.horcrux.svg.R$attr: int actionBarPopupTheme
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_left
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
com.horcrux.svg.R$styleable: int View_paddingEnd
com.horcrux.svg.R$styleable: int GradientColor_android_endX
com.horcrux.svg.R$dimen: int abc_edit_text_inset_bottom_material
com.horcrux.svg.R$color: int abc_search_url_text_pressed
okhttp3.internal.ws.RealWebSocket: boolean failed
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_light
com.horcrux.svg.VirtualView: android.graphics.Path mFillPath
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog mLogBoxDialog
okhttp3.OkHttpClient$Builder: java.util.List protocols
com.horcrux.svg.R$drawable: int abc_cab_background_internal_bg
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTTP_METHOD_POST
com.horcrux.svg.R$layout: int abc_expanded_menu_layout
okio.AsyncTimeout: okio.AsyncTimeout head
com.horcrux.svg.R$id: int rn_redbox_reload_button
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
com.horcrux.svg.VirtualView: int CLIP_RULE_NONZERO
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.horcrux.svg.R$anim: int abc_slide_in_top
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
okhttp3.RealCall: boolean executed
com.horcrux.svg.R$attr: int actionBarTabBarStyle
com.horcrux.svg.R$attr: int logoDescription
com.horcrux.svg.R$style: int Base_V26_Widget_AppCompat_Toolbar
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache$CacheRequestImpl this$1
com.horcrux.svg.VirtualView: android.graphics.RectF mStrokeBounds
okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength
okhttp3.HttpUrl: java.lang.String scheme
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchTimeout
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.horcrux.svg.R$drawable: int notification_bg_low
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache this$0
com.horcrux.svg.R$attr: int thumbTextPadding
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.horcrux.svg.R$attr: int indeterminateProgressStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.horcrux.svg.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
com.horcrux.svg.R$dimen: int notification_action_icon_size
okhttp3.ConnectionSpec: java.lang.String[] cipherSuites
com.horcrux.svg.R$string: int toolbar_description
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class clientProviderClass
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
okhttp3.RealCall$AsyncCall: boolean $assertionsDisabled
com.horcrux.svg.R$attr: int actionModeShareDrawable
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionMode
com.horcrux.svg.SvgView: float mVbHeight
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
com.horcrux.svg.R$styleable: int[] AppCompatTextView
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
okhttp3.Cache$2: okhttp3.Cache this$0
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStart
com.horcrux.svg.R$id: int home
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
com.horcrux.svg.R$drawable: int abc_action_bar_item_background_material
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.horcrux.svg.R$attr: int actionBarSize
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.horcrux.svg.R$styleable: int CompoundButton_buttonTint
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.horcrux.svg.R$styleable: int TextAppearance_textLocale
okhttp3.OkUrlFactory$1: okhttp3.OkUrlFactory this$0
com.horcrux.svg.R$color: int notification_icon_bg_color
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.horcrux.svg.R$styleable: int MenuView_subMenuArrow
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: okhttp3.Interceptor INTERCEPTOR
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.horcrux.svg.R$attr: int windowMinWidthMajor
com.horcrux.svg.R$attr: int subtitle
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontStyle
okhttp3.internal.http2.Http2Connection$5: okhttp3.internal.http2.Http2Connection this$0
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.horcrux.svg.R$color: int switch_thumb_material_light
com.horcrux.svg.R$styleable: int MenuItem_android_enabled
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.horcrux.svg.R$attr: int placeholderImageScaleType
okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http.CallServerInterceptor$CountingSink: long successfulCount
com.horcrux.svg.R$id: int src_in
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
com.horcrux.svg.R$styleable: int PopupWindow_android_popupAnimationStyle
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.horcrux.svg.R$attr: int editTextBackground
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopStart
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
com.horcrux.svg.R$id: int textSpacerNoButtons
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImageScaleType
okhttp3.internal.huc.OutputStreamRequestBody$1: okhttp3.internal.huc.OutputStreamRequestBody this$0
com.horcrux.svg.R$style: int DialogAnimationSlide
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.horcrux.svg.R$color: int catalyst_logbox_background
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
com.horcrux.svg.R$color: int ripple_material_light
com.horcrux.svg.R$attr: int navigationContentDescription
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Title
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
okhttp3.internal.http2.Http2: byte FLAG_COMPRESSED
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.horcrux.svg.R$string: int abc_activitychooserview_choose_application
okhttp3.internal.http1.Http1Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
com.horcrux.svg.R$styleable: int ActionMode_titleTextStyle
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.ThreadPoolExecutor fsThreadPool
okhttp3.OkUrlFactory$1: java.lang.String val$protocol
com.horcrux.svg.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Switch
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
okhttp3.internal.http1.Http1Codec: int STATE_IDLE
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
com.horcrux.svg.R$drawable: int abc_switch_thumb_material
com.horcrux.svg.R$styleable: int[] ColorStateListItem
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
okhttp3.ConnectionPool$1: okhttp3.ConnectionPool this$0
com.horcrux.svg.R$drawable: int abc_item_background_holo_light
okhttp3.internal.huc.BufferedRequestBody: long contentLength
okhttp3.internal.http2.Http2Connection: long unacknowledgedBytesRead
com.horcrux.svg.R$string: int catalyst_debug_chrome
okhttp3.Cache$Entry: java.lang.String url
okhttp3.internal.http1.Http1Codec: okio.BufferedSource source
okhttp3.Dispatcher: int maxRequestsPerHost
com.horcrux.svg.RenderableViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
com.horcrux.svg.R$id: int tabMode
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
com.horcrux.svg.R$drawable: int tooltip_frame_dark
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.horcrux.svg.VirtualView: android.graphics.RectF mFillBounds
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.horcrux.svg.R$styleable: int AppCompatTheme_colorBackgroundFloating
okhttp3.internal.huc.OutputStreamRequestBody: long expectedContentLength
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ASSET_TYPE_ALL
com.horcrux.svg.R$color: int foreground_material_light
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.horcrux.svg.R$string: int radiogroup_description
com.horcrux.svg.R$id: int action_menu_divider
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEnd
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.horcrux.svg.R$styleable: int AlertDialog_buttonPanelSideLayout
com.horcrux.svg.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
okhttp3.Response: okhttp3.Response priorResponse
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImage
com.horcrux.svg.R$style: int Base_Theme_AppCompat_DialogWhenLarge
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
com.horcrux.svg.R$styleable: int AppCompatTheme_imageButtonStyle
com.horcrux.svg.R$string: int catalyst_devtools_open
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
androidx.appcompat.app.AppCompatViewInflater: java.util.Map sConstructorMap
com.horcrux.svg.R$string: int state_mixed_description
com.horcrux.svg.RenderableView: int CAP_SQUARE
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.horcrux.svg.R$layout: int notification_action_tombstone
com.horcrux.svg.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.horcrux.svg.R$styleable: int[] MenuView
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.horcrux.svg.R$styleable: int ActionBar_displayOptions
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.lang.String TAG
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.horcrux.svg.R$integer: int config_tooltipAnimTime
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopStart
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.http.RetryAndFollowUpInterceptor: java.lang.Object callStackTrace
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListTheme
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
com.horcrux.svg.R$styleable: int Toolbar_menu
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.horcrux.svg.R$id: int content
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
okhttp3.internal.connection.RealConnection: java.util.List allocations
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.horcrux.svg.R$attr: int iconTintMode
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body2
okhttp3.internal.http1.Http1Codec: long headerLimit
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_orientation
okhttp3.OkHttpClient: java.util.List protocols
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Connection connection
com.horcrux.svg.R$attr: int actionLayout
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_minor
com.horcrux.svg.R$color: int background_floating_material_dark
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledExecutorService executor
com.horcrux.svg.R$styleable: int SearchView_searchIcon
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.horcrux.svg.R$attr: int thickness
com.horcrux.svg.R$attr: int actionModeBackground
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType CM
com.horcrux.svg.R$drawable: int abc_list_divider_mtrl_alpha
com.horcrux.svg.R$styleable: int FontFamilyFont_fontWeight
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
com.horcrux.svg.R$id: int fitStart
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.horcrux.svg.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.horcrux.svg.R$color: int abc_tint_seek_thumb
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.horcrux.svg.R$attr: int dialogTheme
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.horcrux.svg.R$attr: int arrowHeadLength
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBar
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
com.horcrux.svg.R$dimen: int hint_alpha_material_dark
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.horcrux.svg.R$styleable: int SearchView_defaultQueryHint
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_dark
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerStyle
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String SELECTION_BUCKET
com.horcrux.svg.R$styleable: int CoordinatorLayout_statusBarBackground
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyleSmall
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
com.horcrux.svg.R$styleable: int SearchView_layout
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
okhttp3.ConnectionPool: java.lang.Runnable cleanupRunnable
com.horcrux.svg.R$styleable: int[] ActionMode
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
okhttp3.internal.huc.OkHttpURLConnection: java.util.Set METHODS
com.horcrux.svg.R$dimen: int abc_text_size_menu_header_material
com.horcrux.svg.R$attr: int controlBackground
com.horcrux.svg.R$attr: int actionModePasteDrawable
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_backgroundImage
com.horcrux.svg.R$styleable: int Toolbar_buttonGravity
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
com.horcrux.svg.R$styleable: int SimpleDraweeView_overlayImage
okhttp3.MediaType: java.lang.String type
com.horcrux.svg.R$color: int abc_tint_btn_checkable
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
okhttp3.Route: java.net.InetSocketAddress inetSocketAddress
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
okhttp3.RealCall$1: okhttp3.RealCall this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
okhttp3.Cookie: long expiresAt
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_CACHE
com.horcrux.svg.R$string: int catalyst_change_bundle_location
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_Switch
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.horcrux.svg.R$string: int abc_prepend_shortcut_label
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with_application
okhttp3.internal.http2.Http2Connection$6: int val$byteCount
com.horcrux.svg.R$attr: int viewAspectRatio
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
okhttp3.OkHttpClient$Builder: int callTimeout
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small_Inverse
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_drawable
okhttp3.Cache: int ENTRY_METADATA
okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted
com.horcrux.svg.R$styleable: int ActionBar_itemPadding
com.horcrux.svg.R$color: int dim_foreground_disabled_material_light
com.horcrux.svg.R$styleable: int ActionMode_background
okhttp3.internal.http1.Http1Codec: int state
com.horcrux.svg.R$id: int text2
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_LOAD_URL
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
com.horcrux.svg.R$dimen: int abc_text_size_display_4_material
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.horcrux.svg.R$drawable: int redbox_top_border_background
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DATE_SET
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
com.horcrux.svg.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.horcrux.svg.R$styleable: int MenuGroup_android_enabled
com.horcrux.svg.R$id: int wrap_content
com.horcrux.svg.R$attr: int windowFixedHeightMajor
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_BE
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.horcrux.svg.R$color: int material_deep_teal_200
com.horcrux.svg.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
com.horcrux.svg.R$color: int material_deep_teal_500
com.horcrux.svg.R$attr: int subtitleTextColor
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
okhttp3.Authenticator: okhttp3.Authenticator NONE
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.horcrux.svg.R$attr: int tooltipForegroundColor
com.horcrux.svg.R$attr: int textAppearanceSearchResultSubtitle
com.horcrux.svg.R$attr: int failureImageScaleType
com.horcrux.svg.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.horcrux.svg.R$layout: int redbox_item_frame
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.horcrux.svg.R$layout: int select_dialog_singlechoice_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
okhttp3.Response$Builder: java.lang.String message
com.horcrux.svg.R$style: int Theme
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int GradientColor_android_startColor
com.horcrux.svg.R$styleable: int AppCompatTextView_textLocale
com.horcrux.svg.R$id: int submenuarrow
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_fadeDuration
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType MM
okio.Timeout: long deadlineNanoTime
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.horcrux.svg.R$style: int AlertDialog_AppCompat
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatImageView_srcCompat
com.horcrux.svg.R$styleable: int RecycleListView_paddingTopNoTitle
com.horcrux.svg.R$color: int material_grey_50
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.horcrux.svg.R$styleable: int ActionBar_homeAsUpIndicator
okhttp3.CacheControl: int sMaxAgeSeconds
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.horcrux.svg.R$drawable: int notification_template_icon_low_bg
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.StreamAllocation val$streamAllocation
com.horcrux.svg.R$styleable: int MenuGroup_android_orderInCategory
com.horcrux.svg.R$dimen: int abc_dropdownitem_icon_width
okhttp3.CacheControl: int maxStaleSeconds
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListWidth
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Http2Stream: long unacknowledgedBytesRead
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.horcrux.svg.R$id: int message
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvMatrix
com.horcrux.svg.R$string: int link_description
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.RNFetchBlob.RNFetchBlob: boolean ActionViewVisible
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.horcrux.svg.R$attr: int voiceIcon
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_material
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.horcrux.svg.R$attr: int pressedStateOverlayImage
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowRadius
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_16dp
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String TAG
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_48dp
com.horcrux.svg.R$id: int bottom
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
com.horcrux.svg.R$string: int catalyst_debug
com.horcrux.svg.VirtualView: boolean mCTMInvertible
okhttp3.Cache: int writeSuccessCount
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.horcrux.svg.R$attr: int track
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
okhttp3.internal.connection.RouteException: java.io.IOException firstException
com.horcrux.svg.R$attr: int layout_dodgeInsetEdges
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImage
com.horcrux.svg.R$styleable: int Spinner_android_entries
okhttp3.CacheControl$Builder: int maxAgeSeconds
com.horcrux.svg.R$string: int abc_menu_space_shortcut_label
com.horcrux.svg.R$color: int tooltip_background_light
okhttp3.internal.cache2.Relay: okio.Source upstream
com.horcrux.svg.R$drawable: int notification_bg_low_pressed
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_with_nav
com.horcrux.svg.R$string: int catalyst_report_button
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderWidth
okhttp3.internal.cache.DiskLruCache: int appVersion
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
okio.ForwardingSink: okio.Sink delegate
okhttp3.internal.http2.Http2Connection$4: int val$streamId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_textAppearance
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.horcrux.svg.R$attr: int retryImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTextView_textAllCaps
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Colored
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowColor
com.horcrux.svg.R$style: int Theme_AppCompat_DialogWhenLarge
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXT_STORAGE_DIRECTORY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
com.horcrux.svg.R$drawable: int abc_dialog_material_background
com.horcrux.svg.R$attr: int actionOverflowMenuStyle
com.horcrux.svg.R$id: int multiply
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_RESPONSE_BODY
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$styleable: int MenuView_android_verticalDivider
okhttp3.ResponseBody$1: okio.BufferedSource val$content
okhttp3.internal.http2.Http2: byte TYPE_CONTINUATION
com.horcrux.svg.R$dimen: int tooltip_corner_radius
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomRight
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.horcrux.svg.R$styleable: int[] SwitchCompat
com.horcrux.svg.R$attr: int layout_anchorGravity
okhttp3.EventListener: okhttp3.EventListener NONE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
okhttp3.HttpUrl$Builder: java.lang.String scheme
com.horcrux.svg.R$attr: int contentInsetRight
com.horcrux.svg.R$id: int add
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.horcrux.svg.R$styleable: int ActionBar_contentInsetLeft
com.horcrux.svg.R$styleable: int StateListDrawable_android_dither
com.horcrux.svg.R$styleable: int Toolbar_title
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
okhttp3.OkHttpClient$Builder: int connectTimeout
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_DATE
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEnd
com.horcrux.svg.VirtualView: java.lang.String mMarkerMid
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.R$attr: int panelMenuListWidth
com.horcrux.svg.R$dimen: int abc_text_size_display_3_material
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int Toolbar_navigationContentDescription
com.horcrux.svg.R$string: int timer_description
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_LIBRARY_DIRECTORY
com.horcrux.svg.VirtualView: float mScale
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.horcrux.svg.R$id: int none
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Small
com.horcrux.svg.R$styleable: int ActionMode_height
com.oblador.vectoricons.VectorIconsModule: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int ttcIndex
okhttp3.Cookie$Builder: java.lang.String value
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.horcrux.svg.R$styleable: int SwitchCompat_trackTintMode
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.horcrux.svg.R$attr: int actionBarTabTextStyle
okhttp3.internal.connection.StreamAllocation: java.lang.Object callStackTrace
com.horcrux.svg.R$styleable: int ActionBar_indeterminateProgressStyle
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
okhttp3.internal.cache.DiskLruCache: java.util.concurrent.Executor executor
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method setProtocolMethod
com.horcrux.svg.R$drawable: int abc_cab_background_top_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
okhttp3.ConnectionSpec: java.lang.String[] tlsVersions
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallback
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
okhttp3.OkHttpClient$Builder: int pingInterval
com.horcrux.svg.R$dimen: int tooltip_vertical_padding
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
okhttp3.internal.http2.Http2Connection$6: int val$streamId
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display4
okio.Timeout: okio.Timeout NONE
okhttp3.internal.http2.Http2Connection$2: int val$streamId
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$attr: int windowActionModeOverlay
com.horcrux.svg.R$styleable: int FontFamily_fontProviderPackage
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_android_background
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.horcrux.svg.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.facebook.jni.CppSystemErrorException: int errorCode
okhttp3.internal.http2.Http2Codec: okhttp3.Interceptor$Chain chain
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DarkActionBar
okhttp3.internal.http2.Http2: byte TYPE_WINDOW_UPDATE
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDy
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EMS
okhttp3.Cache$CacheRequestImpl: okhttp3.internal.cache.DiskLruCache$Editor editor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_EditText
okhttp3.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
com.horcrux.svg.R$styleable: int AppCompatTheme_windowNoTitle
com.horcrux.svg.R$style: int Theme_FullScreenDialog
okhttp3.internal.http1.Http1Codec$AbstractSource: boolean closed
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$attr: int collapseIcon
com.horcrux.svg.R$styleable: int FontFamily_fontProviderAuthority
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okhttp3.internal.http1.Http1Codec this$0
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.horcrux.svg.R$styleable: int TextAppearance_android_typeface
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView_ActionBar
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$attr: int titleMarginStart
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionContainer
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.horcrux.svg.R$drawable: int notification_bg_low_normal
okio.AsyncTimeout: boolean inQueue
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextBackground
com.horcrux.svg.R$attr: int spinnerDropDownItemStyle
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.horcrux.svg.R$id: int action_menu_presenter
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
com.horcrux.svg.R$attr: int buttonGravity
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray stroke
okhttp3.Cache$Entry: okhttp3.Handshake handshake
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
com.horcrux.svg.R$dimen: int abc_text_size_menu_material
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$SVGClass svgClass
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.R$anim: int abc_grow_fade_in_from_bottom
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
okhttp3.Request: okhttp3.HttpUrl url
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.horcrux.svg.R$layout: int abc_activity_chooser_view_list_item
com.horcrux.svg.R$color: int abc_search_url_text_normal
com.horcrux.svg.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.views.view.ReactViewGroup: int mLayoutDirection
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
com.horcrux.svg.R$color: int primary_material_dark
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: boolean unsupported
com.horcrux.svg.R$styleable: int MenuItem_contentDescription
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.cache2.Relay: int SOURCE_FILE
okhttp3.MediaType: java.lang.String mediaType
com.horcrux.svg.R$style: int Animation_AppCompat_Dialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.horcrux.svg.R$attr: int state_above_anchor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowIsFloating
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImage
com.horcrux.svg.R$color: int switch_thumb_normal_material_light
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_BE
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
com.horcrux.svg.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.horcrux.svg.R$id: int action_mode_bar_stub
com.horcrux.svg.R$attr: int tooltipText
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableBottomCompat
okhttp3.CacheControl: boolean noStore
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
okhttp3.internal.connection.RouteException: java.io.IOException lastException
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.horcrux.svg.R$color: int secondary_text_disabled_material_light
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat_Light
com.horcrux.svg.R$id: int blocking
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.horcrux.svg.R$attr: int allowStacking
com.horcrux.svg.R$xml: int rn_dev_preferences
com.horcrux.svg.R$style: int Base_Theme_AppCompat_CompactMenu
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.horcrux.svg.R$styleable: int AppCompatImageView_android_src
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$anim: int abc_slide_out_top
com.horcrux.svg.R$dimen: int abc_search_view_preferred_height
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.horcrux.svg.R$anim: int abc_popup_enter
com.horcrux.svg.R$string: int summary_description
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.horcrux.svg.R$dimen: int disabled_alpha_material_light
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.HashMap initialNotificationMap
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableTop
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
okhttp3.internal.cache2.Relay: long upstreamPos
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
okhttp3.internal.platform.Platform: int INFO
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
com.horcrux.svg.R$attr: int queryHint
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int AppCompatTheme_colorAccent
com.horcrux.svg.R$color: int background_material_dark
com.horcrux.svg.R$id: int default_activity_button
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
com.horcrux.svg.R$id: int checkbox
com.horcrux.svg.R$attr: int colorSwitchThumbNormal
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
com.horcrux.svg.VirtualView: boolean mOnLayout
androidx.recyclerview.widget.RecyclerView: int mScrollState
okhttp3.internal.http1.Http1Codec$FixedLengthSink: boolean closed
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class serverProviderClass
com.horcrux.svg.R$attr: int colorControlActivated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_extra_offset
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
okhttp3.internal.cache.DiskLruCache: java.lang.Runnable cleanupRunnable
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MAXDATE
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_LOAD_PERMISSION
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ERROR_NO_ACTIVITY
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display4
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderPadding
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.horcrux.svg.R$style: int Widget_AppCompat_Button
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.horcrux.svg.R$attr: int lineHeight
com.horcrux.svg.R$attr: int collapseContentDescription
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.horcrux.svg.R$string: int catalyst_loading_from_url
okhttp3.internal.ws.RealWebSocket$1: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.bridge.CatalystInstanceImpl: boolean mNativeModulesThreadDestructionComplete
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int AppCompatTextView_fontFamily
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
com.horcrux.svg.R$styleable: int AppCompatTheme_colorError
com.horcrux.svg.R$attr: int actualImageScaleType
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
com.horcrux.svg.R$drawable: int abc_scrubber_control_off_mtrl_alpha
okhttp3.internal.http2.Http2: byte FLAG_END_PUSH_PROMISE
okhttp3.internal.Util: okio.ByteString UTF_16_LE_BOM
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.horcrux.svg.R$drawable: int abc_tab_indicator_mtrl_alpha
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandlerWrapper
com.horcrux.svg.R$attr: int statusBarBackground
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.horcrux.svg.R$dimen: int notification_top_pad_large_text
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.WebViewConfig mWebViewConfig
okhttp3.internal.http1.Http1Codec: int STATE_CLOSED
okhttp3.internal.http2.Http2Writer: boolean closed
com.horcrux.svg.R$id: int expand_activities_button
okhttp3.ConnectionPool: boolean $assertionsDisabled
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
okhttp3.internal.Util: java.util.TimeZone UTC
com.horcrux.svg.R$dimen: int abc_seekbar_track_progress_height_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$attr: int roundingBorderWidth
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache
com.horcrux.svg.R$attr: int buttonTint
okhttp3.Address: java.net.ProxySelector proxySelector
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
okhttp3.MultipartBody: okhttp3.MediaType contentType
okhttp3.internal.huc.OkHttpURLConnection: java.net.Proxy proxy
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.horcrux.svg.R$string: int abc_searchview_description_search
com.horcrux.svg.R$anim: int abc_popup_exit
com.horcrux.svg.SvgView: android.graphics.Canvas mCanvas
com.horcrux.svg.R$styleable: int[] PopupWindow
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.horcrux.svg.R$styleable: int LinearLayoutCompat_showDividers
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_weightSum
okhttp3.Response$Builder: long receivedResponseAtMillis
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
okhttp3.OkHttpClient: int pingInterval
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerHorizontal
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response networkResponse
com.horcrux.svg.R$styleable: int ActionBar_background
com.horcrux.svg.R$string: int catalyst_perf_monitor
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
com.horcrux.svg.R$attr: int tooltipFrameBackground
com.horcrux.svg.R$attr: int roundTopEnd
com.horcrux.svg.R$styleable: int MenuItem_android_id
com.horcrux.svg.R$string: int abc_action_bar_up_description
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_Menu
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.horcrux.svg.R$id: int activity_chooser_view_content
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.horcrux.svg.R$bool: int abc_allow_stacked_button_bar
com.horcrux.svg.R$styleable: int SwitchCompat_android_thumb
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.horcrux.svg.R$styleable: int ActionBar_divider
com.horcrux.svg.R$string: int abc_menu_shift_shortcut_label
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.InternalCache cache
com.horcrux.svg.R$styleable: int Toolbar_maxButtonHeight
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength strokeWidth
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.horcrux.svg.R$id: int icon
okhttp3.ResponseBody$1: long val$contentLength
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
okhttp3.OkHttpClient: java.net.Proxy proxy
com.horcrux.svg.R$styleable: int[] GradientColorItem
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextColor
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableEndCompat
com.horcrux.svg.R$drawable: int abc_list_longpressed_holo
com.horcrux.svg.R$attr: int buttonStyleSmall
com.horcrux.svg.R$dimen: int abc_action_bar_elevation_material
com.horcrux.svg.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopLeft
com.horcrux.svg.R$drawable: int abc_control_background_material
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.horcrux.svg.R$dimen: int highlight_alpha_material_light
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
okhttp3.MultipartBody: long contentLength
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless_Colored
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
com.horcrux.svg.R$attr: int dropdownListPreferredItemHeight
com.horcrux.svg.R$styleable: int Toolbar_popupTheme
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_bar_height
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.horcrux.svg.R$styleable: int AlertDialog_listItemLayout
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallbackLegacy
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
com.horcrux.svg.R$styleable: int MenuView_android_headerBackground
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbWidth
com.horcrux.svg.R$color: int bright_foreground_inverse_material_dark
com.horcrux.svg.R$attr: int preserveIconSpacing
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
okhttp3.Request: java.util.Map tags
com.horcrux.svg.R$style: int Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$string: int state_off_description
com.horcrux.svg.R$attr: int actionBarStyle
com.horcrux.svg.VirtualView: java.lang.String mName
okhttp3.internal.http1.Http1Codec$AbstractSource: okhttp3.internal.http1.Http1Codec this$0
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
com.horcrux.svg.R$dimen: int abc_edit_text_inset_top_material
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.horcrux.svg.R$layout: int support_simple_spinner_dropdown_item
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display2
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
okhttp3.HttpUrl: java.lang.String host
com.horcrux.svg.R$attr: int searchIcon
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Dark
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_PICS_DIRECTORY
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events EVENT_DATA_URL
com.horcrux.svg.R$styleable: int ActionBar_icon
com.horcrux.svg.R$styleable: int MenuItem_android_onClick
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
com.horcrux.svg.R$string: int abc_menu_alt_shortcut_label
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
com.horcrux.svg.R$string: int scrollbar_description
okhttp3.internal.http.RealInterceptorChain: int connectTimeout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.horcrux.svg.R$id: int action_bar_subtitle
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableStart
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.horcrux.svg.R$attr: int drawableSize
okhttp3.internal.http2.Http2Codec: java.lang.String TRANSFER_ENCODING
com.horcrux.svg.R$attr: int textAppearanceListItem
com.horcrux.svg.R$id: int tag_unhandled_key_listeners
com.horcrux.svg.R$attr: int backgroundStacked
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
okhttp3.internal.http2.Http2Reader$ContinuationSource: byte flags
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
com.horcrux.svg.R$attr: int retryImage
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.R$id: int async
com.horcrux.svg.R$attr: int backgroundSplit
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_STOP_LOADING
com.horcrux.svg.R$id: int fitBottomStart
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
okhttp3.Address: java.net.Proxy proxy
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.String selected
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method warnIfOpenMethod
com.horcrux.svg.R$styleable: int CompoundButton_buttonTintMode
okhttp3.internal.huc.OkHttpURLConnection: boolean executed
com.horcrux.svg.R$styleable: int AppCompatTheme_searchViewStyle
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.horcrux.svg.R$attr: int textAppearancePopupMenuHeader
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.R$styleable: int MenuGroup_android_visible
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_Overflow
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
okhttp3.FormBody: java.util.List encodedValues
com.horcrux.svg.R$attr: int fontProviderAuthority
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
com.horcrux.svg.R$string: int menu_description
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.horcrux.svg.R$styleable: int[] ListPopupWindow
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String ERROR_UNABLE_TO_LOAD
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
com.horcrux.svg.R$string: int spinbutton_description
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.horcrux.svg.R$styleable: int ViewStubCompat_android_layout
okhttp3.Cache$CacheRequestImpl: boolean done
okhttp3.internal.http2.Http2Connection: int nextStreamId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
okhttp3.internal.http2.Http2Connection$PingRunnable: boolean reply
com.horcrux.svg.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.horcrux.svg.R$attr: int tintMode
okhttp3.Challenge: java.util.Map authParams
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXTERNAL_DIRECTORY
com.horcrux.svg.R$drawable: int abc_text_select_handle_left_mtrl_light
com.horcrux.svg.R$layout: int abc_search_dropdown_item_icons_2line
com.horcrux.svg.R$attr: int borderlessButtonStyle
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
com.horcrux.svg.R$attr: int height
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat
com.horcrux.svg.R$attr: int colorError
okhttp3.Request$Builder: okhttp3.HttpUrl url
com.horcrux.svg.R$string: int catalyst_debug_error
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$attr: int fontProviderPackage
com.horcrux.svg.R$dimen: int highlight_alpha_material_dark
com.horcrux.svg.R$color: int abc_secondary_text_material_dark
okhttp3.Address: java.util.List protocols
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat_Light
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.horcrux.svg.R$id: int accessibility_label
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
okhttp3.CacheControl: boolean isPrivate
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
okhttp3.MultipartBody: okhttp3.MediaType FORM
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
okhttp3.OkHttpClient$Builder: int readTimeout
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
okhttp3.HttpUrl: int port
com.horcrux.svg.R$styleable: int[] FontFamilyFont
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorHint
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.horcrux.svg.R$id: int normal
okhttp3.Cache: int hitCount
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String BLANK_URL
com.horcrux.svg.R$anim: int catalyst_slide_down
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
com.horcrux.svg.R$styleable: int GradientColorItem_android_offset
okhttp3.Cache: int ENTRY_BODY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
okhttp3.ConnectionSpec: boolean tls
com.horcrux.svg.R$styleable: int[] Toolbar
com.horcrux.svg.R$attr: int elevation
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload2
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.horcrux.svg.R$anim: int catalyst_push_up_out
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
com.horcrux.svg.R$attr: int dividerVertical
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display1
com.horcrux.svg.R$attr: int logo
com.horcrux.svg.R$attr: int expandActivityOverflowButtonDrawable
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageScaleType
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
com.horcrux.svg.R$attr: int color
com.horcrux.svg.R$attr: int actionModeCloseButtonStyle
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImage
com.horcrux.svg.R$color: int material_grey_800
com.horcrux.svg.R$attr: int actionProviderClass
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_36dp
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.horcrux.svg.R$styleable: int TextAppearance_android_fontFamily
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
com.horcrux.svg.R$id: int rn_redbox_stack
com.horcrux.svg.VirtualView: float canvasHeight
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Title
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.horcrux.svg.R$drawable: int notification_bg_normal
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
okhttp3.Cache$CacheRequestImpl: okio.Sink cacheOut
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorSearchUrl
com.RNFetchBlob.RNFetchBlob: java.util.concurrent.ThreadPoolExecutor threadPool
com.horcrux.svg.R$styleable: int AppCompatSeekBar_android_thumb
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat_Light
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
com.horcrux.svg.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
com.horcrux.svg.R$attr: int textAppearanceListItemSecondary
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.horcrux.svg.R$attr: int subtitleTextAppearance
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.horcrux.svg.R$attr: int alertDialogCenterButtons
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String[] PROJECTION
okhttp3.Protocol: okhttp3.Protocol QUIC
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarStyle
okhttp3.internal.cache.DiskLruCache: boolean $assertionsDisabled
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
com.horcrux.svg.RenderableView: int vectorEffect
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
okhttp3.Response: okhttp3.Response cacheResponse
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.horcrux.svg.RenderableView: java.util.ArrayList mPropList
com.horcrux.svg.R$id: int catalyst_redbox_title
com.horcrux.svg.R$dimen: int abc_text_size_medium_material
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform PLATFORM
okhttp3.CacheControl: boolean mustRevalidate
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.horcrux.svg.R$id: int search_badge
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
okhttp3.CertificatePinner$Pin: okio.ByteString hash
com.horcrux.svg.VirtualView: android.graphics.Region mMarkerRegion
com.horcrux.svg.R$styleable: int SwitchCompat_splitTrack
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.internal.huc.OkHttpURLConnection delegate
com.horcrux.svg.R$color: int material_grey_300
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_light
com.horcrux.svg.R$styleable: int StateListDrawable_android_enterFadeDuration
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.horcrux.svg.R$drawable: int abc_ic_clear_material
okhttp3.internal.http2.Http2Connection$6: okhttp3.internal.http2.Http2Connection this$0
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
com.horcrux.svg.R$string: int catalyst_debug_chrome_stop
com.horcrux.svg.R$attr: int backgroundTintMode
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title_Inverse
com.horcrux.svg.R$dimen: int notification_action_text_size
com.horcrux.svg.R$styleable: int GradientColor_android_gradientRadius
com.horcrux.svg.R$id: int action_text
com.horcrux.svg.R$attr: int title
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.horcrux.svg.R$drawable: int notification_template_icon_bg
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTheme_actionButtonStyle
com.horcrux.svg.R$attr: int windowActionBarOverlay
okhttp3.internal.http2.Http2: byte TYPE_PING
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.Response: okhttp3.ResponseBody body
com.horcrux.svg.SvgView: boolean mRendered
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.horcrux.svg.R$id: int title
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService pushExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
okhttp3.internal.http1.Http1Codec$ChunkedSource: long bytesRemainingInChunk
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.horcrux.svg.R$attr: int colorControlNormal
com.horcrux.svg.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.horcrux.svg.R$styleable: int Spinner_android_prompt
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.horcrux.svg.R$styleable: int SwitchCompat_track
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DarkActionBar
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body1
com.horcrux.svg.R$styleable: int ActionBar_backgroundStacked
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.horcrux.svg.R$id: int search_voice_btn
com.horcrux.svg.R$styleable: int[] PopupWindowBackgroundState
okhttp3.internal.http2.Http2Reader$ContinuationSource: short padding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
com.horcrux.svg.R$id: int search_plate
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_FORM_DATA
com.horcrux.svg.R$styleable: int AppCompatTheme_checkboxStyle
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableRight
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Tooltip
com.horcrux.svg.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_light
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStart
com.horcrux.svg.R$attr: int navigationIcon
com.horcrux.svg.R$layout: int abc_list_menu_item_checkbox
com.horcrux.svg.R$dimen: int abc_action_bar_default_height_material
com.horcrux.svg.VirtualView: boolean mResponsible
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.horcrux.svg.R$id: int image
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String MODULE_NAME
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body1
com.horcrux.svg.R$id: int src_atop
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
okhttp3.CacheControl$Builder: boolean onlyIfCached
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.horcrux.svg.R$attr: int actualImageResource
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.horcrux.svg.R$styleable: int TextAppearance_fontFamily
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Menu
com.horcrux.svg.R$attr: int fontFamily
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.horcrux.svg.R$styleable: int ColorStateListItem_alpha
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSource val$source
com.horcrux.svg.R$attr: int roundBottomRight
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.URLFilter urlFilter
com.RNFetchBlob.RNFetchBlob: com.facebook.react.bridge.ReactApplicationContext RCTContext
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.horcrux.svg.R$dimen: int abc_button_inset_vertical_material
com.horcrux.svg.R$styleable: int MenuItem_android_checked
com.horcrux.svg.VirtualView: android.graphics.Matrix mTransform
com.horcrux.svg.R$styleable: int ActionBar_progressBarPadding
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.horcrux.svg.R$style: int Base_DialogWindowTitleBackground_AppCompat
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MOVIES_DIRECTORY
com.horcrux.svg.R$id: int contentPanel
com.horcrux.svg.R$attr: int fontStyle
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload1
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
okhttp3.internal.http2.Http2Connection$6: boolean val$inFinished
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListMenuView
okhttp3.internal.http1.Http1Codec: int STATE_WRITING_REQUEST_BODY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.horcrux.svg.R$attr: int submitBackground
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.horcrux.svg.R$attr: int buttonStyle
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomLeft
com.horcrux.svg.R$color: int abc_secondary_text_material_light
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.horcrux.svg.RenderableViewManager: java.lang.String mClassName
com.horcrux.svg.R$styleable: int MenuGroup_android_id
com.horcrux.svg.R$styleable: int AppCompatTheme_radioButtonStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
com.horcrux.svg.R$id: int chronometer
com.horcrux.svg.R$attr: int barLength
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.horcrux.svg.R$layout: int notification_template_part_chronometer
com.horcrux.svg.R$id: int search_edit_frame
com.horcrux.svg.R$drawable: int abc_spinner_textfield_background_material
com.horcrux.svg.R$drawable: int abc_text_select_handle_right_mtrl_light
com.horcrux.svg.R$styleable: int[] AppCompatImageView
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small
okio.AsyncTimeout: okio.AsyncTimeout next
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
com.horcrux.svg.R$styleable: int PopupWindowBackgroundState_state_above_anchor
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.ErrorCode val$errorCode
com.horcrux.svg.R$style: int Widget_AppCompat_ActivityChooserView
okhttp3.internal.http2.Http2Connection$3: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2: byte FLAG_ACK
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.horcrux.svg.R$color: int button_material_dark
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogCornerRadius
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_light
okhttp3.ConnectionPool: okhttp3.internal.connection.RouteDatabase routeDatabase
com.horcrux.svg.R$attr: int autoSizeMaxTextSize
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTint
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.horcrux.svg.VirtualView: android.graphics.Path mStrokePath
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
com.horcrux.svg.R$styleable: int Toolbar_titleMarginStart
com.horcrux.svg.R$color: int secondary_text_default_material_dark
com.horcrux.svg.R$styleable: int CoordinatorLayout_keylines
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$id: int rn_frame_file
com.horcrux.svg.R$string: int catalyst_sample_profiler_disable
okhttp3.internal.http2.Http2Codec: java.lang.String ENCODING
com.horcrux.svg.R$attr: int searchViewStyle
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.horcrux.svg.R$color: int material_grey_600
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.horcrux.svg.R$drawable: int abc_seekbar_thumb_material
com.horcrux.svg.R$color: int switch_thumb_normal_material_dark
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method removeMethod
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0
com.horcrux.svg.R$id: int progress_horizontal
com.horcrux.svg.R$style: int Base_Widget_AppCompat_EditText
com.horcrux.svg.R$id: int scrollIndicatorDown
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTint
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.horcrux.svg.R$styleable: int AppCompatTheme_panelBackground
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
com.horcrux.svg.R$styleable: int[] ViewStubCompat
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.horcrux.svg.R$color: int abc_primary_text_material_dark
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImage
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_overlayImage
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_DropDown
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$styleable: int MenuItem_android_icon
com.horcrux.svg.R$attr: int arrowShaftLength
com.horcrux.svg.R$styleable: int ActionBar_height
okhttp3.Cookie$Builder: boolean hostOnly
com.horcrux.svg.R$attr: int tint
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
okhttp3.Dispatcher: int maxRequests
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.horcrux.svg.R$styleable: int ActionBar_logo
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
com.horcrux.svg.R$string: int abc_toolbar_collapse_description
com.horcrux.svg.R$id: int edit_query
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec
com.horcrux.svg.R$attr: int paddingTopNoTitle
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method getProtocolMethod
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyle
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Tooltip
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
com.horcrux.svg.R$id: int notification_main_column_container
com.horcrux.svg.R$attr: int radioButtonStyle
com.horcrux.svg.R$styleable: int MenuView_android_itemBackground
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlActivated
com.horcrux.svg.R$dimen: int abc_dialog_title_divider_material
com.horcrux.svg.R$id: int rn_frame_method
com.horcrux.svg.R$dimen: int tooltip_y_offset_non_touch
com.horcrux.svg.R$style: int Animation_AppCompat_DropDownUp
okhttp3.ResponseBody$BomAwareReader: boolean closed
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomEnd
okhttp3.Cache$Entry: long receivedResponseMillis
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
okhttp3.RequestBody$2: int val$byteCount
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
com.horcrux.svg.R$string: int header_description
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.horcrux.svg.R$styleable: int SearchView_commitIcon
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.horcrux.svg.R$attr: int actionModeCutDrawable
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Line2
com.horcrux.svg.R$dimen: int abc_action_button_min_width_material
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route
com.horcrux.svg.R$style: int Widget_AppCompat_ListPopupWindow
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
com.horcrux.svg.R$id: int rn_redbox_report_button
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
okhttp3.Dispatcher: java.util.Deque runningSyncCalls
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.horcrux.svg.VirtualView: android.graphics.RectF mClientRect
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
com.horcrux.svg.R$color: int highlighted_text_material_light
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
okhttp3.MultipartBody: okio.ByteString boundary
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
com.reactnativecommunity.webview.RNCWebViewManager: boolean mAllowsFullscreenVideo
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MODE
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect sHelperRect
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector$Selection routeSelection
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
okhttp3.internal.Internal: okhttp3.internal.Internal instance
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
okhttp3.OkHttpClient: boolean followRedirects
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
com.horcrux.svg.R$attr: int titleMarginTop
com.horcrux.svg.R$style: int Platform_V21_AppCompat_Light
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_gravity
com.horcrux.svg.R$id: int center
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat
okhttp3.CacheControl: boolean immutable
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
okhttp3.internal.http2.Http2Connection$PingRunnable: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.R$styleable: int MenuItem_android_orderInCategory
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.horcrux.svg.R$color: int primary_dark_material_light
com.horcrux.svg.R$dimen: int notification_big_circle_margin
okhttp3.internal.Util: okio.ByteString UTF_8_BOM
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOn
com.horcrux.svg.R$color: int accent_material_dark
com.horcrux.svg.R$color: int ripple_material_dark
com.horcrux.svg.R$id: int fitXY
com.horcrux.svg.R$attr: int actionBarDivider
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
com.horcrux.svg.R$styleable: int View_theme
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Cookie$Builder: java.lang.String domain
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
com.horcrux.svg.R$anim: int abc_slide_in_bottom
com.horcrux.svg.R$drawable: int notify_panel_notification_icon_bg
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String FIREBASE_TEST_LAB
com.horcrux.svg.R$styleable: int[] MenuGroup
okhttp3.internal.http2.Http2Connection$7: int val$streamId
com.horcrux.svg.R$styleable: int AppCompatTheme_colorButtonNormal
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
com.horcrux.svg.R$styleable: int TextAppearance_textAllCaps
okhttp3.Cookie$Builder: java.lang.String name
okhttp3.CacheControl$Builder: int maxStaleSeconds
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large_Inverse
okhttp3.internal.http2.Huffman$Node: int terminalBits
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.horcrux.svg.R$attr: int thumbTint
com.horcrux.svg.R$styleable: int TextAppearance_android_textStyle
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.horcrux.svg.R$styleable: int TextAppearance_android_textSize
com.horcrux.svg.R$styleable: int GradientColor_android_startY
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
okhttp3.CacheControl$Builder: boolean noCache
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundWithOverlayColor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
com.horcrux.svg.R$id: int rn_redbox_dismiss_button
com.horcrux.svg.R$color: int abc_tint_switch_track
com.horcrux.svg.R$styleable: int ActionBar_backgroundSplit
com.horcrux.svg.R$color: int abc_search_url_text_selected
com.horcrux.svg.R$attr: int initialActivityCount
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.horcrux.svg.R$dimen: int abc_dialog_padding_top_material
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageUri
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.horcrux.svg.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabStyle
com.horcrux.svg.R$attr: int actionModeSelectAllDrawable
com.horcrux.svg.R$styleable: int[] AlertDialog
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePasteDrawable
okhttp3.internal.tls.DistinguishedNameParser: int length
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$styleable: int AppCompatTheme_listMenuViewStyle
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
okhttp3.internal.huc.OkHttpURLConnection: long fixedContentLength
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
okhttp3.FormBody: java.util.List encodedNames
okhttp3.internal.ws.RealWebSocket$PingRunnable: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
com.horcrux.svg.SvgView: java.lang.Runnable toDataUrlTask
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.horcrux.svg.R$string: int catalyst_debug_open
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
okhttp3.internal.http2.ErrorCode: int httpCode
com.horcrux.svg.BuildConfig: boolean DEBUG
com.horcrux.svg.R$attr: int suggestionRowLayout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE
com.horcrux.svg.R$drawable: int notification_action_background
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_BACK
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_disable
okhttp3.Cookie: boolean secure
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.horcrux.svg.R$styleable: int GradientColor_android_endY
com.horcrux.svg.R$styleable: int FontFamilyFont_android_ttcIndex
com.horcrux.svg.R$attr: int textColorSearchUrl
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
okhttp3.internal.Util: java.util.regex.Pattern VERIFY_AS_IP_ADDRESS
com.horcrux.svg.SvgView: java.util.Map mDefinedClipPaths
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate sAccessibilityDelegate
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMark
com.horcrux.svg.R$drawable: int abc_popup_background_mtrl_mult
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.horcrux.svg.R$string: int abc_searchview_description_submit
com.horcrux.svg.R$dimen: int notification_small_icon_background_padding
com.horcrux.svg.R$drawable: int abc_ratingbar_material
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
com.horcrux.svg.RenderableView: java.util.ArrayList mOriginProperties
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources
com.horcrux.svg.VirtualView: android.graphics.Matrix mMatrix
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
okhttp3.internal.http2.Http2Stream: int id
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderColor
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_PLAYABLE_DURATION
com.horcrux.svg.R$styleable: int MenuView_android_itemTextAppearance
okhttp3.MultipartBody: byte[] DASHDASH
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.horcrux.svg.R$id: int list_item
com.horcrux.svg.R$style: int Widget_AppCompat_DropDownItem_Spinner
okhttp3.internal.cache2.Relay: okio.ByteString metadata
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.ResponseBody$1: okhttp3.MediaType val$contentType
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Dialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
okhttp3.internal.connection.RealConnection: long idleAtNanos
com.horcrux.svg.R$attr: int paddingEnd
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.horcrux.svg.R$styleable: int MenuItem_actionProviderClass
com.horcrux.svg.R$attr: int toolbarStyle
com.horcrux.svg.R$color: int bright_foreground_material_dark
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
com.horcrux.svg.R$styleable: int ColorStateListItem_android_alpha
com.horcrux.svg.R$attr: int ratingBarStyleSmall
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
okhttp3.internal.connection.RealConnection: okhttp3.ConnectionPool connectionPool
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_FOCUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Http2Writer: boolean client
com.horcrux.svg.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.ForwardingTimeout timeout
com.horcrux.svg.R$dimen: int abc_text_size_caption_material
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String INCLUDE_IMAGE_SIZE
com.horcrux.svg.R$drawable: int abc_list_selector_holo_dark
com.horcrux.svg.R$dimen: int notification_top_pad
com.oblador.vectoricons.VectorIconsModule: java.util.Map sTypefaceCache
com.horcrux.svg.R$string: int catalyst_reload_error
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Dialog
com.horcrux.svg.R$styleable: int[] SimpleDraweeView
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.horcrux.svg.R$id: int actions
com.horcrux.svg.R$attr: int fontWeight
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowShaftLength
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
com.horcrux.svg.R$styleable: int GradientColor_android_centerX
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.horcrux.svg.RenderableViewManager: double[] sTransformDecompositionArray
com.horcrux.svg.R$styleable: int ActionBar_popupTheme
com.horcrux.svg.VirtualView: java.lang.String mMarkerEnd
com.horcrux.svg.R$styleable: int SearchView_goIcon
com.horcrux.svg.R$attr: int placeholderImage
com.horcrux.svg.R$styleable: int MenuItem_alphabeticModifiers
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar
com.horcrux.svg.R$id: int customPanel
com.horcrux.svg.R$id: int action_bar_activity_content
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.horcrux.svg.R$styleable: int MenuItem_iconTint
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.horcrux.svg.R$attr: int listPreferredItemHeight
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_top_no_title
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_dark
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] cleanFiles
okhttp3.Headers$Builder: java.util.List namesAndValues
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
com.horcrux.svg.R$style: int Theme_AppCompat_Light
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.util.List protocols
com.horcrux.svg.RenderableView: int CAP_ROUND
com.horcrux.svg.R$dimen: int abc_search_view_preferred_width
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Colored
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
okhttp3.internal.huc.BufferedRequestBody: okio.Buffer buffer
com.horcrux.svg.R$styleable: int SearchView_iconifiedByDefault
okhttp3.HttpUrl$Builder: java.lang.String host
com.horcrux.svg.R$attr: int roundTopRight
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Light
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.Cookie$Builder: long expiresAt
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.horcrux.svg.R$styleable: int SimpleDraweeView_fadeDuration
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.horcrux.svg.R$color: int switch_thumb_disabled_material_dark
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.horcrux.svg.SvgView: float mScale
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.horcrux.svg.R$attr: int colorControlHighlight
com.horcrux.svg.R$styleable: int ActionBar_homeLayout
okhttp3.RequestBody$1: okhttp3.MediaType val$contentType
okhttp3.Response: okhttp3.Request request
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: boolean val$clearPrevious
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontWeight
com.horcrux.svg.R$styleable: int ActionBar_titleTextStyle
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.horcrux.svg.R$id: int action_bar
com.horcrux.svg.R$color: int material_grey_900
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.views.view.ReactViewGroup: android.graphics.Path mPath
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionText
com.horcrux.svg.R$dimen: int tooltip_horizontal_padding
com.horcrux.svg.R$dimen: int abc_button_padding_vertical_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
com.horcrux.svg.R$attr: int singleChoiceItemLayout
com.horcrux.svg.R$styleable: int MenuItem_android_checkable
okhttp3.internal.http1.Http1Codec$AbstractSource: long bytesRead
com.horcrux.svg.R$string: int imagebutton_description
com.facebook.react.views.view.ReactViewGroup: java.lang.String mOverflow
okhttp3.internal.http2.Http2Connection: boolean client
com.horcrux.svg.R$attr: int toolbarNavigationButtonStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Inverse
com.horcrux.svg.R$styleable: int AppCompatTheme_borderlessButtonStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
com.horcrux.svg.R$attr: int autoSizePresetSizes
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
com.horcrux.svg.SvgView: android.graphics.Bitmap mBitmap
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
okhttp3.Cache$Entry: java.lang.String requestMethod
com.horcrux.svg.R$integer: int react_native_dev_server_port
okhttp3.Response$Builder: okhttp3.ResponseBody body
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
okhttp3.OkHttpClient: java.util.List interceptors
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.horcrux.svg.R$attr: int progressBarImage
com.horcrux.svg.R$string: int abc_capital_on
okhttp3.internal.http2.Huffman$Node: int symbol
com.horcrux.svg.R$styleable: int StateListDrawableItem_android_drawable
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
com.horcrux.svg.R$dimen: int compat_button_padding_horizontal_material
com.horcrux.svg.R$attr: int windowNoTitle
com.horcrux.svg.R$id: int group_divider
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextColor
okhttp3.internal.http2.Http2Connection$5: java.util.List val$requestHeaders
com.horcrux.svg.R$dimen: int abc_action_button_min_width_overflow_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.horcrux.svg.R$styleable: int[] MenuItem
com.horcrux.svg.R$id: int search_go_btn
com.horcrux.svg.R$attr: int tickMarkTint
com.horcrux.svg.R$string: int image_description
com.horcrux.svg.R$dimen: int abc_config_prefDialogWidth
com.horcrux.svg.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
com.horcrux.svg.R$attr: int buttonBarNeutralButtonStyle
okhttp3.CacheControl$Builder: boolean noTransform
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.horcrux.svg.R$dimen: int abc_panel_menu_list_width
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimary
com.horcrux.svg.R$color: int abc_hint_foreground_material_light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
com.horcrux.svg.R$attr: int fontVariationSettings
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.horcrux.svg.R$styleable: int View_android_theme
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
okhttp3.CacheControl$Builder: boolean noStore
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.horcrux.svg.R$dimen: int abc_control_corner_material
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.horcrux.svg.R$dimen: int abc_text_size_title_material_toolbar
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
com.horcrux.svg.RenderableView: float fillOpacity
okhttp3.ConnectionPool: java.util.concurrent.Executor executor
com.horcrux.svg.R$attr: int alpha
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundAsCircle
com.horcrux.svg.R$attr: int actionModePopupWindowStyle
com.horcrux.svg.R$string: int catalyst_settings
com.horcrux.svg.R$id: int action_bar_container
com.horcrux.svg.SvgView: java.util.Map mDefinedMarkers
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogTheme
com.horcrux.svg.R$style: int Platform_AppCompat
com.horcrux.svg.R$attr: int colorBackgroundFloating
okhttp3.internal.http2.Http2: byte TYPE_PUSH_PROMISE
com.horcrux.svg.VirtualView: java.lang.String mMask
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
okhttp3.internal.http2.Hpack$Writer: int headerCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
com.horcrux.svg.R$color: int abc_btn_colored_borderless_text_material
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDx
com.horcrux.svg.R$attr: int actionOverflowButtonStyle
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$styleable: int DrawerArrowToggle_drawableSize
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
okhttp3.Cookie$Builder: boolean httpOnly
com.horcrux.svg.SvgView: int mTintColor
okhttp3.Cache$CacheRequestImpl$1: okhttp3.internal.cache.DiskLruCache$Editor val$editor
okhttp3.OkHttpClient$Builder: okhttp3.internal.cache.InternalCache internalCache
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgent
com.horcrux.svg.VirtualView: double M_SQRT1_2l
com.horcrux.svg.R$attr: int contentInsetEnd
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar
okhttp3.Request$Builder: java.util.Map tags
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$color: int tooltip_background_dark
okhttp3.RealCall: okhttp3.Request originalRequest
com.horcrux.svg.R$id: int search_bar
okhttp3.Request: okhttp3.RequestBody body
okhttp3.internal.cache2.Relay: boolean complete
com.horcrux.svg.R$style: int SpinnerDatePickerStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.horcrux.svg.R$layout: int notification_template_part_time
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
okhttp3.internal.connection.StreamAllocation: boolean canceled
com.horcrux.svg.R$id: int fitCenter
okhttp3.Cache$Entry: java.lang.String message
okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode
com.horcrux.svg.R$styleable: int AppCompatTextView_lineHeight
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.Request: okhttp3.Headers headers
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_MinWidth
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEndWithActions
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
com.horcrux.svg.R$id: int shortcut
okhttp3.MultipartBody$Builder: okio.ByteString boundary
okhttp3.CacheControl: boolean isPublic
com.horcrux.svg.R$layout: int abc_screen_simple
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$MatrixDecompositionContext sMatrixDecompositionContext
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.horcrux.svg.R$dimen: int compat_button_padding_vertical_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.horcrux.svg.R$id: int action_bar_root
okhttp3.internal.ws.WebSocketReader: long frameLength
com.horcrux.svg.R$styleable: int AppCompatTheme_dropDownListViewStyle
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.horcrux.svg.R$styleable: int AlertDialog_buttonIconDimen
okhttp3.Response: long receivedResponseAtMillis
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.horcrux.svg.R$string: int abc_action_bar_home_description
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
com.horcrux.svg.R$string: int tablist_description
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSink val$cacheBody
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Handshake handshake
okhttp3.internal.ws.RealWebSocket$Close: int code
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
okhttp3.OkHttpClient: java.util.List networkInterceptors
com.horcrux.svg.RenderableView: int JOIN_BEVEL
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
okhttp3.Request: okhttp3.CacheControl cacheControl
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Small
okhttp3.Cache: int ENTRY_COUNT
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTintMode
com.horcrux.svg.R$styleable: int ActionBar_subtitleTextStyle
okhttp3.internal.connection.StreamAllocation: int refusedStreamCount
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner
com.horcrux.svg.R$id: int accessibility_state
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
com.horcrux.svg.R$dimen: int abc_text_size_display_1_material
com.horcrux.svg.R$style: int Widget_AppCompat_ListView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.horcrux.svg.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.horcrux.svg.R$id: int notification_main_column
com.horcrux.svg.R$styleable: int MenuItem_tooltipText
com.horcrux.svg.R$string: int catalyst_inspector
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.horcrux.svg.R$style: int Widget_Support_CoordinatorLayout
com.horcrux.svg.R$anim: int abc_fade_out
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_dark
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_CheckBox
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.horcrux.svg.R$color: int primary_material_light
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
okhttp3.internal.http2.Header: okio.ByteString name
com.horcrux.svg.R$style: int Theme_AppCompat
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.ConnectionPool: boolean cleanupRunning
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
com.horcrux.svg.R$string: int progressbar_description
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.horcrux.svg.R$attr: int spinBars
okhttp3.internal.http2.Http2Connection: long DEGRADED_PONG_TIMEOUT_NS
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
okhttp3.internal.ws.RealWebSocket: java.lang.String key
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
com.horcrux.svg.R$attr: int showAsAction
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector routeSelector
com.horcrux.svg.R$styleable: int AppCompatTheme_controlBackground
com.horcrux.svg.R$layout: int abc_dialog_title_material
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: void close()
okhttp3.internal.connection.StreamAllocation: java.net.Socket deallocate(boolean,boolean,boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: void onCatalystInstanceDestroy()
okhttp3.JavaNetAuthenticator: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,okhttp3.HttpUrl)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String[] access$200()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
com.horcrux.svg.ImageView: void setMeetOrSlice(int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Response: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
com.horcrux.svg.VirtualView: int hitTest(float[])
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: AndroidPlatform$AndroidTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.facebook.react.animated.NativeAnimatedModule: void executeAllOperations(java.util.Queue,long)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
okhttp3.FormBody: long contentLength()
com.reactnativecommunity.webview.RNCWebViewModule: void onNewIntent(android.content.Intent)
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
okhttp3.MediaType: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
okhttp3.internal.http2.Http2Connection$7: Http2Connection$7(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
okhttp3.internal.huc.OkHttpURLConnection: java.security.Permission getPermission()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
com.horcrux.svg.VirtualView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.http2.Http2: Http2()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,byte,byte)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String toString()
okhttp3.internal.http1.Http1Codec$FixedLengthSource: Http1Codec$FixedLengthSource(okhttp3.internal.http1.Http1Codec,long)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
com.facebook.react.bridge.NativeArray: java.lang.String toString()
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableView: boolean hasOwnProperty(java.lang.String)
okhttp3.internal.http2.Http2Connection: void start(boolean)
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
okhttp3.Response: okhttp3.Response cacheResponse()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.horcrux.svg.MaskView: void setWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(android.webkit.WebView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidGetPlayServicesStatus(com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Connection: void close()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.RNFetchBlob.RNFetchBlob: void getContentIntent(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.jni.DestructorThread$Destructor: void destruct()
okio.Timeout: boolean hasDeadline()
com.reactnativecommunity.webview.RNCWebViewManager: void setNestedScrollEnabled(android.webkit.WebView,boolean)
okhttp3.internal.ws.RealWebSocket$2: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.fabric.Binding: void stopSurface(int)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: void execute()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent()
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(long)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
okhttp3.CacheControl: boolean isPublic()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsPing(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollX()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.swmansion.rnscreens.Screen: void setFragment(com.swmansion.rnscreens.ScreenFragment)
okio.Timeout: okio.Timeout clearTimeout()
okhttp3.MediaType: boolean equals(java.lang.Object)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(android.webkit.WebView,boolean)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String password()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$deleteToken$5(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.horcrux.svg.MarkerView: void setRefX(com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
okhttp3.Headers: java.lang.String value(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
okhttp3.CipherSuite$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.horcrux.svg.RenderableViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
okhttp3.Cookie: java.lang.String toString(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(android.webkit.WebView,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
okhttp3.RealCall: okhttp3.RealCall clone()
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.reactnativecommunity.webview.RNCWebViewManager: void setBuiltInZoomControls(android.webkit.WebView,boolean)
okhttp3.internal.http1.Http1Codec$ChunkedSink: Http1Codec$ChunkedSink(okhttp3.internal.http1.Http1Codec)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getRequestProperties()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.Address: okhttp3.HttpUrl url()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
okhttp3.internal.http2.Http2Stream: void waitForIo()
okhttp3.Response: okhttp3.Response networkResponse()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] values()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
okhttp3.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.horcrux.svg.RenderableView: boolean setupFillPaint(android.graphics.Paint,float)
okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
okhttp3.OkUrlFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.Request: okhttp3.HttpUrl url()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec)
okhttp3.RealCall: void enqueue(okhttp3.Callback)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String[])
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$200(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
okhttp3.internal.huc.StreamedRequestBody: StreamedRequestBody(long)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
okhttp3.ConnectionPool: int connectionCount()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onDropViewInstance(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
okhttp3.internal.http.HttpCodec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.huc.OkHttpsURLConnection: void disconnect()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.RNFetchBlob.RNFetchBlob: android.util.SparseArray access$000()
com.RNFetchBlob.RNFetchBlob: void fetchBlob(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
com.horcrux.svg.RenderableView: void setFillOpacity(float)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.horcrux.svg.RenderableView: void setVectorEffect(int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getResponseMessage()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
okhttp3.RequestBody: RequestBody()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onDropViewInstance(android.view.View)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.TextPathView: void setHref(java.lang.String)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
okhttp3.CipherSuite: java.util.List forJavaNames(java.lang.String[])
com.horcrux.svg.RenderableViewManager$RadialGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.Internal: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
okhttp3.Cache$CacheRequestImpl: void abort()
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putPlayableDuration(android.content.ContentResolver,com.facebook.react.bridge.WritableMap,android.net.Uri,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
io.invertase.firebase.common.ReactNativeFirebaseModule: ReactNativeFirebaseModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.horcrux.svg.SvgView: void defineTemplate(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
okhttp3.ResponseBody$1: long contentLength()
okhttp3.TlsVersion: java.lang.String javaName()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
com.RNFetchBlob.RNFetchBlob: java.util.Map getConstants()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.views.picker.ReactDialogPickerManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
okhttp3.Request$Builder: okhttp3.Request$Builder get()
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.picker.ReactDialogPickerManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.Request: java.lang.Object tag()
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
okhttp3.ConnectionSpec: java.util.List cipherSuites()
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMarker(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()
okhttp3.internal.http2.Http2Connection$2: void execute()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: void setIconSize(int)
okhttp3.Call: okio.Timeout timeout()
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
com.horcrux.svg.SvgView$Events: SvgView$Events(java.lang.String,int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getUseCaches()
com.horcrux.svg.RenderableViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.internal.BaselineLayout: int getBaseline()
okio.AsyncTimeout: void exit(boolean)
okhttp3.OkHttpClient$1: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
com.horcrux.svg.ForeignObjectView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
okhttp3.OkUrlFactory$1: int getDefaultPort()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
okhttp3.internal.connection.RealConnection$1: RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation)
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.cameraroll.CameraRollModule: void putEdges(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,java.util.Set)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.horcrux.svg.TextPathView: void setMethod(java.lang.String)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
okhttp3.internal.huc.OkHttpsURLConnection: long getExpiration()
okio.ForwardingSink: ForwardingSink(okio.Sink)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
okhttp3.internal.http2.Http2Connection: void writeSynReply(int,boolean,java.util.List)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.Request: Request(okhttp3.Request$Builder)
com.horcrux.svg.VirtualView: void invalidate()
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentEncoding()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.RNFetchBlob.RNFetchBlob: void writeChunk(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
com.horcrux.svg.TextPathView: void setSharp(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String redact()
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody: boolean isClosed()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.horcrux.svg.RenderableViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.TextPathView: void setStartOffset(com.facebook.react.bridge.Dynamic)
okhttp3.Cache: boolean isClosed()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket: long queueSize()
okhttp3.internal.Internal: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.Request$Builder: Request$Builder()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.bridge.Inspector: java.util.List getPages()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getLocalPrincipal()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.fragment.app.Fragment: Fragment()
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.bridge.CatalystInstance: void destroy()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
okhttp3.OkHttpClient: OkHttpClient()
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
okhttp3.RequestBody$3: long contentLength()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setAutoInitEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
okhttp3.internal.platform.AndroidPlatform: boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
okhttp3.Cache: void trackConditionalCacheHit()
okhttp3.internal.cache.FaultHidingSink: void flush()
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.horcrux.svg.ForeignObjectView: void setWidth(com.facebook.react.bridge.Dynamic)
okhttp3.ResponseBody: long contentLength()
okhttp3.TlsVersion: java.util.List forJavaNames(java.lang.String[])
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
okhttp3.internal.ws.WebSocketReader: void readHeader()
com.facebook.react.views.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
okhttp3.internal.http2.Http2Connection: void awaitPong()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getLastModified()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
okhttp3.HttpUrl: java.util.List encodedPathSegments()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
okhttp3.internal.platform.OptionalMethod: OptionalMethod(java.lang.Class,java.lang.String,java.lang.Class[])
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void metaGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
okhttp3.internal.huc.OkHttpURLConnection: int getReadTimeout()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.RequestBody$1: RequestBody$1(okhttp3.MediaType,okio.ByteString)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem removeDeleteMultiMountItem(int[])
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
okhttp3.Response: okhttp3.ResponseBody body()
com.facebook.react.bridge.JSIModule: void initialize()
okio.ForwardingSource: java.lang.String toString()
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
okhttp3.internal.http2.Huffman: void addCode(int,int,byte)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
okhttp3.Cookie: java.lang.String value()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(android.webkit.WebView,java.lang.Boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.Call: void enqueue(okhttp3.Callback)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
okhttp3.internal.io.FileSystem$1: void deleteContents(java.io.File)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
com.horcrux.svg.SvgView: java.lang.String toDataURL()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay read(java.io.File)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(int)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
okhttp3.WebSocket: long queueSize()
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
okhttp3.Cookie: long expiresAt()
androidx.lifecycle.ViewModel: ViewModel()
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.tls.DistinguishedNameParser: int getByte(int)
com.horcrux.svg.MarkerView: void setOrient(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void sendMessage(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.huc.BufferedRequestBody: long contentLength()
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
com.horcrux.svg.R$styleable: R$styleable()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri getOutputUri(java.io.File)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
com.facebook.react.bridge.ReadableArray: int getInt(int)
com.reactnativecommunity.cameraroll.CameraRollModule: void getAlbums(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
okhttp3.Headers: java.util.List values(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
okhttp3.Cache: void remove(okhttp3.Request)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getExpiration()
okhttp3.internal.http2.Hpack: Hpack()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Permission getPermission()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
com.horcrux.svg.R$string: R$string()
okhttp3.internal.http2.Http2Writer: void synStream(boolean,int,int,java.util.List)
com.horcrux.svg.SvgView: void onDraw(android.graphics.Canvas)
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getInputStream()
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
okhttp3.HttpUrl: java.lang.String encodedQuery()
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoInput()
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$GroupViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.Timeout timeout()
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.R$id: R$id()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptForMainFrameOnly(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.horcrux.svg.GroupView: void setFont(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: void setDoInput(boolean)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.cache.FaultHidingSink: void onException(java.io.IOException)
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(int)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
okhttp3.internal.cache.CacheRequest: void abort()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgentString(android.webkit.WebView)
okhttp3.Dispatcher: java.util.List queuedCalls()
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.react.views.picker.ReactPicker: void setStagedItems(java.util.List)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.horcrux.svg.RenderableView: RenderableView(com.facebook.react.bridge.ReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$hasPermission$7(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
okhttp3.OkHttpClient: java.util.List protocols()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
okhttp3.internal.http2.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService access$500(okhttp3.internal.http2.Http2Connection)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.RNFetchBlob.RNFetchBlob: void getSDCardDir(com.facebook.react.bridge.Promise)
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String[] getAcceptedMimeType(java.lang.String[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.EventListener: EventListener()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
okhttp3.internal.huc.OutputStreamRequestBody: void initOutputStream(okio.BufferedSink,long)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Response: long receivedResponseAtMillis()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
okhttp3.internal.JavaNetHeaders: java.util.Map toMultimap(okhttp3.Headers,java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initializeApp(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
okhttp3.internal.http2.Http2Connection: void access$000(okhttp3.internal.http2.Http2Connection)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()
com.facebook.react.fabric.Binding: void setPixelDensity(float)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,int)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
okio.Timeout: Timeout()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.MediaType: int hashCode()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass,com.horcrux.svg.RenderableViewManager$1)
okhttp3.internal.http.HttpHeaders: void parseChallengeHeader(java.util.List,okio.Buffer)
com.horcrux.svg.SvgView: void setId(int)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.picker.ReactDialogPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
okhttp3.OkHttpClient: int readTimeoutMillis()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
okhttp3.internal.huc.OkHttpsURLConnection: long getLastModified()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
io.invertase.firebase.common.ReactNativeFirebaseInitProvider: ReactNativeFirebaseInitProvider()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
okhttp3.Headers: java.util.Map toMultimap()
okhttp3.Headers$Builder: okhttp3.Headers build()
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getRequestProperties()
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.horcrux.svg.TextView: void setLengthAdjust(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
okhttp3.internal.http2.Http2Connection: long access$208(okhttp3.internal.http2.Http2Connection)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
okhttp3.OkHttpClient: int writeTimeoutMillis()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
okhttp3.Cache$1: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.bridge.ReactContext: void onHostPause()
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.horcrux.svg.ImageView: void setWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
okhttp3.Response: java.lang.String message()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: long getDate()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
okhttp3.internal.platform.JdkWithJettyBootPlatform: JdkWithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void jsonGetAll(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.horcrux.svg.PathView: void setD(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void unsubscribeFromTopic(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.http2.Settings: void clear()
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier access$100(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment getFragment()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.DynamicFromObject: void recycle()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: void onCatalystInstanceDestroy()
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
okhttp3.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams(int)
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
okhttp3.RealCall$1: void timedOut()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Writer: void writeMedium(okio.BufferedSink,int)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.URL getURL()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String)
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.horcrux.svg.R$anim: R$anim()
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform(java.lang.reflect.Method,java.lang.reflect.Method)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.horcrux.svg.VirtualView: void clip(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
okhttp3.internal.http2.Http2Connection: boolean access$300(okhttp3.internal.http2.Http2Connection)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.horcrux.svg.R$drawable: R$drawable()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.cache.DiskLruCache$Editor: void detach()
okhttp3.internal.http2.Huffman: void buildTree()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
okhttp3.Headers: java.lang.String name(int)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
okhttp3.Cookie: java.lang.String toString()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.RNFetchBlob.RNFetchBlob: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.WritableNativeMap)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.horcrux.svg.EllipseView: void setCy(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.webkit.WebView)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
okhttp3.internal.Version: Version()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.horcrux.svg.PatternView: void setMinY(float)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.horcrux.svg.RectView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
okhttp3.internal.huc.OutputStreamRequestBody: long contentLength()
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.RNFetchBlob.RNFetchBlob: void cp(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.huc.OkHttpURLConnection: void setConnectTimeout(int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
okhttp3.internal.http2.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.react.ReactActivity: ReactActivity()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
okhttp3.internal.cache.DiskLruCache: void delete()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
okhttp3.internal.io.FileSystem$1: void rename(java.io.File,java.io.File)
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
okhttp3.MediaType: java.nio.charset.Charset charset()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.horcrux.svg.MaskView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: AndroidPlatform$AndroidCertificateChainCleaner(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.Cache: void flush()
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.google.android.material.chip.Chip: void setMinLines(int)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: ReactNativeFirebaseAppRegistrar()
okhttp3.internal.http2.Http2Connection: void writePing()
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
okhttp3.RealCall: okhttp3.Call clone()
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
com.facebook.react.views.picker.ReactPicker: void setStagedPrimaryTextColor(java.lang.Integer)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: void run()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
okhttp3.internal.Util$1: int compare(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setEnabled(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(android.webkit.WebView,boolean)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.util.Map getConstants()
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: int pathSize()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
okhttp3.Request$Builder: okhttp3.Request$Builder head()
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String lambda$getToken$2()
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getPeerPrincipal()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
okhttp3.Cache: void initialize()
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setHasScrollEvent(boolean)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
okhttp3.Cookie: boolean equals(java.lang.Object)
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
okhttp3.internal.http2.Http2Connection$5: void execute()
com.facebook.react.bridge.JavaJSExecutor: void close()
okhttp3.RequestBody$2: long contentLength()
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.Internal: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
okio.AsyncTimeout: long remainingNanos(long)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request access$000(com.reactnativecommunity.webview.RNCWebViewModule)
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File getCapturedFile(com.reactnativecommunity.webview.RNCWebViewModule$MimeType)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
okhttp3.internal.cache.DiskLruCache$3: java.lang.Object next()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
okhttp3.EventListener$2: EventListener$2(okhttp3.EventListener)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass[] values()
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
okio.ForwardingSource: void close()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
okhttp3.CacheControl: boolean noTransform()
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] values()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
com.horcrux.svg.R$xml: R$xml()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getConstants()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void close()
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.facebook.react.bridge.JavaScriptContextHolder: long get()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(android.webkit.WebView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: int getPostAnimationScrollY()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.facebook.react.ReactRootView: int getRootViewTag()
okhttp3.Address: int hashCode()
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
okhttp3.internal.cache.CacheInterceptor$1: void close()
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService access$400()
com.horcrux.svg.UseView: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.Cache: long maxSize()
okhttp3.HttpUrl$Builder: int effectivePort()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
okhttp3.internal.platform.JdkWithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
okhttp3.OkHttpClient: java.net.Proxy proxy()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
okhttp3.HttpUrl: java.util.List pathSegments()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getMimeTypeFromExtension(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(int)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: ReactCheckBoxManager()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.internal.ws.RealWebSocket$1: void run()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback)
okhttp3.OkHttpClient$Builder: void setInternalCache(okhttp3.internal.cache.InternalCache)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.modules.datepicker.DatePickerDialogModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.reactnativecommunity.cameraroll.CameraRollModule: CameraRollModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getErrorStream()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.horcrux.svg.RenderableViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.OkHttpClient: boolean followRedirects()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: RealWebSocket$CancelRunnable(okhttp3.internal.ws.RealWebSocket)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void removeListeners(java.lang.Integer)
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker)
okhttp3.HttpUrl: java.lang.String query()
okhttp3.Dispatcher: java.util.List runningCalls()
okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater()
okhttp3.Handshake: boolean equals(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
okhttp3.Address: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void clear(com.facebook.react.bridge.Callback)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.Interceptor$Chain: okhttp3.Call call()
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void close()
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
org.devio.rn.splashscreen.SplashScreenModule: SplashScreenModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(com.horcrux.svg.MaskView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.RNFetchBlob.RNFetchBlob: void stat(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
okio.ForwardingSource: ForwardingSource(okio.Source)
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
okhttp3.Cache$CacheRequestImpl$1: void close()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getRequestProperty(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$RectViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoOutput(boolean)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.horcrux.svg.LinearGradientView: void setX2(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
okhttp3.internal.ws.RealWebSocket$1: RealWebSocket$1(okhttp3.internal.ws.RealWebSocket)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedTemplate(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
okhttp3.Cache: int requestCount()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
okhttp3.Cookie: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.horcrux.svg.ImageView: void setY(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
okhttp3.internal.URLFilter: void checkURLPermitted(java.net.URL)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
okhttp3.CacheControl: boolean immutable()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(android.webkit.WebView,java.lang.Boolean)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoOutput()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
com.RNFetchBlob.RNFetchBlob: void mkdir(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(android.webkit.WebView,java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: int hashCode()
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
com.RNFetchBlob.RNFetchBlob: void readStream(java.lang.String,java.lang.String,int,int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void subscribeToTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
okhttp3.CertificatePinner$Pin: java.lang.String toString()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getDate()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
okhttp3.internal.platform.Platform: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$sendMessage$9(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
okhttp3.Cache$2: java.lang.String next()
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.horcrux.svg.RadialGradientView: void setRy(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
okhttp3.internal.huc.OkHttpsURLConnection: boolean getInstanceFollowRedirects()
okhttp3.internal.http1.Http1Codec: void detachTimeout(okio.ForwardingTimeout)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxDialog access$202(com.facebook.react.devsupport.LogBoxModule,com.facebook.react.devsupport.LogBoxDialog)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.horcrux.svg.UseView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: Http2Connection$IntervalPingRunnable(okhttp3.internal.http2.Http2Connection)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(android.webkit.WebView,boolean)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.platform.Platform: byte[] concatLengthPrefixed(java.util.List)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
okhttp3.internal.huc.OkHttpsURLConnection: boolean usingProxy()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode)
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.RealCall: void captureCallStackTrace()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgView: java.lang.String toDataURL(int,int)
okhttp3.internal.io.FileSystem$1: okio.Sink appendingSink(java.io.File)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.material.chip.Chip: float getChipStartPadding()
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.horcrux.svg.CircleView: void setR(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.huc.OkHttpURLConnection: void setReadTimeout(int)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.horcrux.svg.PatternView: void setX(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,byte,byte)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onSuccess(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
okio.Timeout: long minTimeout(long,long)
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody$1: void flush()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setTintColors(com.reactnativecommunity.checkbox.ReactCheckBox,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.CacheInterceptor$1: CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.SvgView: void drawChildren(android.graphics.Canvas)
okhttp3.internal.http2.Http2Writer: void synReply(boolean,int,java.util.List)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getErrorStream()
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.horcrux.svg.ImageView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.AndroidPlatform: boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.views.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
okhttp3.internal.http2.Http2Reader: void close()
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
okhttp3.OkHttpClient$1: int code(okhttp3.Response$Builder)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.http1.Http1Codec$ChunkedSource: void readChunkSize()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient$1: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.react.ReactRootView: int getUIManagerType()
okio.Timeout: long timeoutNanos()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,short,byte,int)
okhttp3.Cache: okhttp3.Response get(okhttp3.Request)
com.horcrux.svg.SvgView: void defineMask(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
okhttp3.Request: okhttp3.RequestBody body()
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.Util: Util()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.horcrux.svg.RenderableViewManager: void access$100(com.horcrux.svg.RenderableViewManager,com.horcrux.svg.VirtualView)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.horcrux.svg.SvgView: void invalidate()
okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events valueOf(java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.WritableMap popRemoteMessageMapFromMessagingStore(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.internal.http1.Http1Codec$ChunkedSink: void write(okio.Buffer,long)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollY()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.horcrux.svg.RenderableViewManager$PathViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.http2.Http2Connection: okhttp3.Protocol getProtocol()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
okhttp3.internal.huc.OkHttpURLConnection: int getConnectTimeout()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
okhttp3.internal.io.FileSystem$1: okio.Source source(java.io.File)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.horcrux.svg.CircleView: void setCy(com.facebook.react.bridge.Dynamic)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
okhttp3.RequestBody$1: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.horcrux.svg.RectView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
okhttp3.internal.huc.OkHttpsURLConnection: void setReadTimeout(int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri[] getSelectedFiles(android.content.Intent,int)
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.Handshake handshake()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Codec: void finishRequest()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setSendContentSizeChangeEvents(boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void endOfInput(java.io.IOException)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: com.reactnativecommunity.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RectView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.horcrux.svg.MaskView: void setMaskTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePaddingMountItem(int,int,int,int,int)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDefaultUseCaches()
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String hexAV()
okhttp3.internal.cache.DiskLruCache$2: DiskLruCache$2(okhttp3.internal.cache.DiskLruCache,okio.Sink)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.webview.RNCWebViewManager: void setupWebChromeClient(com.facebook.react.bridge.ReactContext,android.webkit.WebView)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
okhttp3.CacheControl: java.lang.String toString()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Connection$4: void execute()
okhttp3.internal.io.FileSystem$1: void delete(java.io.File)
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.CookieJar$1: CookieJar$1()
com.reactnativecommunity.cameraroll.CameraRollModule: void saveToCameraRoll(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
okhttp3.Challenge: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.Dispatcher: int queuedCallsCount()
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent()
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.internal.Internal: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsAddListener(java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.horcrux.svg.RenderableViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
okhttp3.Dispatcher: void setMaxRequests(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: void execute()
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
androidx.recyclerview.widget.RecyclerView: void initAutofill()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
com.horcrux.svg.MarkerView: void setMarkerUnits(java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.picker.ReactPicker: int getMode()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.horcrux.svg.RadialGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.OkUrlFactory$1: OkUrlFactory$1(okhttp3.OkUrlFactory,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
com.facebook.react.modules.dialog.DialogModule: void initialize()
okhttp3.internal.ws.RealWebSocket: void writePingFrame()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.horcrux.svg.TextView: void setVerticalAlign(java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putImageInfo(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int,boolean,boolean,boolean,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Stream: boolean isOpen()
com.horcrux.svg.RenderableViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.VirtualView: void onMeasure(int,int)
okhttp3.CacheControl: int minFreshSeconds()
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsRemoveListener(java.lang.String,java.lang.Boolean)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.RequestBody$1: long contentLength()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
okhttp3.internal.Util: int decodeHexDigit(char)
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getToken(com.facebook.react.bridge.Promise)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestMethod(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.reactnativecommunity.webview.RNCWebViewModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
okhttp3.internal.http1.Http1Codec: java.lang.String readHeaderLine()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setReadTimeout(int)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
okhttp3.Cache$1: void trackConditionalCacheHit()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.horcrux.svg.SymbolView: void setVbHeight(float)
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
okhttp3.Cookie: int hashCode()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.horcrux.svg.RenderableViewManager$UseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setAutoInitEnabled$0(java.lang.Boolean)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
okhttp3.internal.http2.Http2Writer: void headers(int,java.util.List)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,int,okio.Source)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okio.AsyncTimeout: boolean exit()
okio.ForwardingSink: void close()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,boolean)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okhttp3.ResponseBody: java.io.Reader charStream()
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
okhttp3.internal.huc.OutputStreamRequestBody$1: void close()
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.huc.OkHttpURLConnection: boolean getInstanceFollowRedirects()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean arrayContainsString(java.lang.String[],java.lang.String)
okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.google.android.material.theme.MaterialComponentsViewInflater: boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
okhttp3.MultipartBody: java.util.List parts()
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(long)
okhttp3.OkUrlFactory: OkUrlFactory(okhttp3.OkHttpClient)
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.HttpUrl$Builder: java.lang.String toString()
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(android.webkit.WebView,java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setAllowUserInteraction(boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.littleartists.MainApplication: MainApplication()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.ResponseBody: byte[] bytes()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route)
okhttp3.internal.cache.DiskLruCache: void initialize()
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
okhttp3.CacheControl: boolean onlyIfCached()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getPhotoIntent()
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.MultipartBody: okhttp3.MediaType contentType()
com.facebook.react.bridge.ReactSoftException: ReactSoftException()
okhttp3.internal.JavaNetHeaders$1: JavaNetHeaders$1()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
okhttp3.internal.platform.JdkWithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
okhttp3.Response: okhttp3.Headers headers()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
okhttp3.CipherSuite$1: CipherSuite$1()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.bridge.ReactSoftException: void clearListeners()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl(long)
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
okhttp3.RealCall: void cancel()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateLayoutMountItem(int,int,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
com.RNFetchBlob.RNFetchBlob: void cancelRequest(java.lang.String,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.HttpUrl: int port()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean)
okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.VirtualView: void render(android.graphics.Canvas,android.graphics.Paint,float)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
okhttp3.internal.cache.CacheInterceptor$1: long read(okio.Buffer,long)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(android.webkit.WebView,int)
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
okhttp3.ResponseBody$1: okio.BufferedSource source()
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okhttp3.Headers: long byteCount()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
okhttp3.WebSocketListener: WebSocketListener()
com.horcrux.svg.TextView: void setTextLength(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http1.Http1Codec$ChunkedSink: void close()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.horcrux.svg.VirtualView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.RNFetchBlob.RNFetchBlobReq$ResponseType: com.RNFetchBlob.RNFetchBlobReq$ResponseType[] values()
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
okhttp3.internal.platform.Platform: Platform()
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.PatternView: void setVbHeight(float)
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
com.facebook.react.views.view.ReactViewGroup: void onRtlPropertiesChanged(int)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()
com.facebook.react.devsupport.HMRClient: void disable()
com.horcrux.svg.RectView: void setRy(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.RNFetchBlob.RNFetchBlob: void actionViewIntent(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
okhttp3.FormBody$Builder: FormBody$Builder()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
okhttp3.internal.io.FileSystem$1: FileSystem$1()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.horcrux.svg.LineView: void setY1(com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
okhttp3.internal.http2.Http2Reader: int lengthWithoutPadding(int,byte,short)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
okhttp3.internal.tls.DistinguishedNameParser: char getEscaped()
okhttp3.Response: boolean isRedirect()
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
com.google.android.gms.common.api.PendingResult: PendingResult()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
com.horcrux.svg.RadialGradientView: void setFx(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.ConnectionSpec: java.lang.String toString()
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
okhttp3.internal.Internal: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
okhttp3.internal.huc.OkHttpsURLConnection: long getContentLengthLong()
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.HttpCodec: void flushRequest()
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
com.reactnativecommunity.webview.RNCWebViewManager: void setOnContentSizeChange(android.webkit.WebView,boolean)
okhttp3.internal.Util: void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable)
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.Cookie: long parseExpires(java.lang.String,int,int)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.Cache$CacheResponseBody: long contentLength()
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoOutput()
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
okhttp3.internal.http.HttpDate: HttpDate()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
okhttp3.internal.http2.Http2Codec: void cancel()
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
okhttp3.internal.cache.DiskLruCache: long size()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.WritableNativeArray)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
org.devio.rn.splashscreen.SplashScreenModule: void show()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,okio.Source)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode()
com.facebook.jni.HybridData: boolean isValid()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: Http1Codec$FixedLengthSink(okhttp3.internal.http1.Http1Codec,long)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.horcrux.svg.RenderableViewManager: boolean isZero(double)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderFieldKey(int)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.app.Activity getActivity()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.horcrux.svg.RenderableViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getRequestProperties()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.devsupport.LogBoxModule: android.view.View access$000(com.facebook.react.devsupport.LogBoxModule)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
okhttp3.Challenge: java.nio.charset.Charset charset()
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
okhttp3.Request: java.lang.String method()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.cache.DiskLruCache: void trimToSize()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
okhttp3.internal.Internal: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
okhttp3.Response: Response(okhttp3.Response$Builder)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
okhttp3.internal.cache2.Relay: void writeMetadata(long)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.picker.ReactPicker: void setStagedBackgroundColor(java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
okhttp3.RealCall: okhttp3.internal.connection.StreamAllocation streamAllocation()
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
com.facebook.react.views.view.ReactViewGroup: void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View)
androidx.fragment.app.ListFragment: ListFragment()
com.horcrux.svg.TextView: void setInlineSize(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidResolutionForPlayServices()
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsUnrepeatable(java.io.IOException,okhttp3.Request)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.horcrux.svg.RenderableView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
okhttp3.FormBody$Builder: okhttp3.FormBody build()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.RealCall: okhttp3.EventListener access$000(okhttp3.RealCall)
okhttp3.internal.huc.OkHttpsURLConnection: void setInstanceFollowRedirects(boolean)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
okhttp3.internal.http1.Http1Codec: void flushRequest()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
okhttp3.RequestBody: long contentLength()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.ImageView: void setSrc(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
okhttp3.Request: boolean isHttps()
okhttp3.Cache: void evictAll()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
okhttp3.ResponseBody$1: okhttp3.MediaType contentType()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
okhttp3.Route: okhttp3.Address address()
okhttp3.Cache: long size()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
okhttp3.internal.cache.DiskLruCache$2: void onException(java.io.IOException)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
okhttp3.Headers: java.lang.String toString()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setInstanceFollowRedirects(boolean)
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
okhttp3.internal.ws.RealWebSocket: void awaitTermination(int,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.RNFetchBlob.RNFetchBlob: void slice(java.lang.String,java.lang.String,int,int,com.facebook.react.bridge.Promise)
okhttp3.OkHttpClient: int pingIntervalMillis()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
com.horcrux.svg.ImageView: void setHeight(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long read(okio.Buffer,long)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.Cache: void update(okhttp3.Response,okhttp3.Response)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.RNFetchBlob.RNFetchBlobReq$ResponseFormat: com.RNFetchBlob.RNFetchBlobReq$ResponseFormat[] values()
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl: java.lang.String encodedUsername()
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(android.webkit.WebView,java.lang.String)
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
okhttp3.Challenge: java.lang.String scheme()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
com.RNFetchBlob.RNFetchBlob: void getSDCardApplicationDir(com.facebook.react.bridge.Promise)
okhttp3.Headers: java.util.Set names()
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
okhttp3.internal.cache.DiskLruCache$1: DiskLruCache$1(okhttp3.internal.cache.DiskLruCache)
okhttp3.OkHttpClient$1: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.horcrux.svg.LinearGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec,okio.Source)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
okhttp3.internal.Util$2: Util$2(java.lang.String,boolean)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
okio.ForwardingSink: okio.Timeout timeout()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.horcrux.svg.RadialGradientView: void setGradientUnits(int)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.horcrux.svg.RenderableView: int hitTest(float[])
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
okhttp3.Cache: int writeSuccessCount()
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.views.picker.ReactPickerManager: ReactPickerManager()
com.horcrux.svg.SvgView: boolean isResponsible()
okhttp3.CertificatePinner: int hashCode()
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
okhttp3.Call: okhttp3.Request request()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.internal.cache.DiskLruCache: void readJournal()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getInputStream()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
okhttp3.Cache: int networkCount()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.facebook.react.fabric.Binding: Binding()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
okhttp3.Connection: okhttp3.Route route()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
okhttp3.internal.http2.Settings: int getHeaderTableSize()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.MediaType contentType()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okhttp3.Cookie: boolean httpOnly()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.internal.platform.Platform: boolean isAndroid()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
okhttp3.RealCall: okhttp3.Response execute()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
okhttp3.internal.http2.Http2Stream: int getId()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
com.horcrux.svg.VirtualView: int saveAndSetupCanvas(android.graphics.Canvas,android.graphics.Matrix)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
okhttp3.ConnectionPool$1: void run()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
com.google.android.material.chip.Chip: void setMaxLines(int)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.RNFetchBlob.RNFetchBlob: void df(com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths(okio.BufferedSink)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String quotedAV()
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()
okhttp3.internal.http1.Http1Codec$AbstractSource: void close()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
okhttp3.Response: okhttp3.CacheControl cacheControl()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onFailure(double,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.horcrux.svg.SVGLength$UnitType: SVGLength$UnitType(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.OutputStream getOutputStream()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(android.webkit.WebView,boolean)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.Handshake: java.security.Principal peerPrincipal()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
okhttp3.internal.http.RequestLine: RequestLine()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
com.facebook.jni.HybridClassBase: HybridClassBase()
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: float getProgress()
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: okhttp3.Handshake handshake()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDefaultUseCaches(boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
okhttp3.Headers: Headers(okhttp3.Headers$Builder)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.OkHttpClient$1: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
okhttp3.Cookie: java.lang.String name()
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.ReactSoftException: void logSoftException(java.lang.String,java.lang.Throwable)
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
okhttp3.internal.http2.Http2Connection: void flush()
com.horcrux.svg.RenderableViewManager: void setOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
okhttp3.CipherSuite: java.lang.String secondaryName(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
okhttp3.Cache$1: okhttp3.Response get(okhttp3.Request)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.LinearGradientView: void setGradientUnits(int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetBool(java.lang.String,boolean,com.facebook.react.bridge.Promise)
androidx.core.app.ComponentActivity: ComponentActivity()
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.horcrux.svg.SvgViewManager: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestMethod()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
com.horcrux.svg.R$color: R$color()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.horcrux.svg.RenderableView: boolean setupStrokePaint(android.graphics.Paint,float)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.Timeout timeout()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
com.reactnativecommunity.webview.RNCWebViewManager: void setMinimumFontSize(android.webkit.WebView,int)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
okhttp3.Challenge: java.lang.String realm()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
okio.AsyncTimeout: void enter()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
okhttp3.internal.huc.OkHttpURLConnection: void setInstanceFollowRedirects(boolean)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: ReactNativeFirebaseAppModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.ConnectionPool: long cleanup(long)
okhttp3.RequestBody$2: okhttp3.MediaType contentType()
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.react.bridge.queue.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.SvgView: void setVbWidth(float)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.Platform: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String defaultUserAgent()
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.google.android.material.button.MaterialButton: void setIconResource(int)
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setAutoInitEnabled$1(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.horcrux.svg.RenderableViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getUseCaches()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.checkbox.ReactCheckBox)
com.horcrux.svg.SvgView: com.horcrux.svg.Brush getDefinedBrush(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
okio.ForwardingSource: okio.Timeout timeout()
okhttp3.MultipartBody: long contentLength()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
okhttp3.CipherSuite$1: int compare(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory clone()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getErrorStream()
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.RNFetchBlob.RNFetchBlob: void writeFileArray(java.lang.String,com.facebook.react.bridge.ReadableArray,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
okhttp3.internal.http.HttpDate$1: java.lang.Object initialValue()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getPostAnimationScrollX()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.RNFetchBlob.RNFetchBlob: void addCompleteDownload(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
com.horcrux.svg.EllipseView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getPeerPrincipal()
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
okhttp3.Response: boolean isSuccessful()
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
okhttp3.internal.huc.OkHttpURLConnection: boolean usingProxy()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
okio.ForwardingSink: void flush()
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.reactnativecommunity.webview.RNCWebViewManager: android.webkit.WebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
okhttp3.internal.http2.Http2Connection$1: Http2Connection$1(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
okhttp3.RequestBody$2: void writeTo(okio.BufferedSink)
okhttp3.internal.cache.InternalCache: void trackConditionalCacheHit()
com.facebook.react.bridge.Dynamic: double asDouble()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(android.webkit.WebView,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void write(okio.Buffer,long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
okhttp3.internal.NamedRunnable: void execute()
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
okhttp3.Address: okhttp3.Dns dns()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(byte[],int,int)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: JdkWithJettyBootPlatform$JettyNegoProvider(java.util.List)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
okhttp3.Handshake: java.util.List peerCertificates()
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableView: void resetProperties()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
okhttp3.Address: boolean equalsNonHost(okhttp3.Address)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.picker.ReactDialogPickerManager: void setPrompt(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
okhttp3.HttpUrl: java.net.URL url()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.react.views.picker.ReactPicker: void setStagedSelection(int)
okhttp3.internal.http2.Http2Stream: void receiveFin()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
com.reactnativecommunity.webview.RNCWebViewManager: void setBasicAuthCredential(android.webkit.WebView,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
okhttp3.CertificatePinner$Pin: int hashCode()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection: boolean pushedStream(int)
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.internal.huc.OkHttpsURLConnection: void setIfModifiedSince(long)
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(android.webkit.WebView,boolean)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void connect()
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(int)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.horcrux.svg.SvgView: void defineBrush(com.horcrux.svg.Brush,java.lang.String)
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.horcrux.svg.RectView: void setY(com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache: void processJournal()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.Boolean isRunningInTestLab()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.devsupport.LogBoxModule: android.app.Activity access$300(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
okhttp3.Request: okhttp3.Request$Builder newBuilder()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
okhttp3.CacheControl: int maxStaleSeconds()
com.google.android.material.card.MaterialCardView: float getRadius()
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.net.URL getURL()
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getHeaderFields()
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.RNFetchBlob.RNFetchBlob: void lstat(java.lang.String,com.facebook.react.bridge.Callback)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setChunkedStreamingMode(int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
okhttp3.internal.huc.OkHttpsURLConnection: void setDoOutput(boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void onDropViewInstance(android.view.View)
com.reactnativecommunity.cameraroll.CameraRollModule: void getPhotos(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
okhttp3.internal.platform.OptionalMethod: boolean isSupported(java.lang.Object)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
okhttp3.RequestBody$3: void writeTo(okio.BufferedSink)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setItems(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.VirtualView: void clearChildCache()
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType: com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType valueOf(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: void putBasicNodeInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$LineViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Dynamic: void recycle()
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.PushObserver$1: boolean onRequest(int,java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.horcrux.svg.RenderableView: android.graphics.Region getRegion(android.graphics.Path,android.graphics.RectF)
com.horcrux.svg.VirtualView: void setOpacity(float)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateStateMountItem(int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
okhttp3.Call: okhttp3.Call clone()
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: void access$300(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,java.util.Set)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.BuildConfig: BuildConfig()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl: java.lang.String encodedFragment()
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.RNFetchBlob.RNFetchBlob: void enableUploadProgressReport(java.lang.String,int,int)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
okhttp3.Cache$2: void remove()
com.horcrux.svg.ForeignObjectView: void setY(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
okhttp3.Call: boolean isExecuted()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.Headers: Headers(java.lang.String[])
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.RealCall: boolean isCanceled()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoaded(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.http.HttpCodec: void finishRequest()
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getInstanceFollowRedirects()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider: ReactNativeFirebaseAppInitProvider()
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okhttp3.internal.Internal: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
okhttp3.ConnectionSpec: int hashCode()
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.bridge.queue.MessageQueueThread: void runOnQueue(java.lang.Runnable)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call buildCall()
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: void execute()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.webkit.WebView)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: int getReadTimeout()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem insertMountItem(int,int,int)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.RNFetchBlob.RNFetchBlobReq$RequestType: com.RNFetchBlob.RNFetchBlobReq$RequestType[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
okhttp3.RealCall: java.lang.String toLoggableString()
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.horcrux.svg.MarkerView: void setVbHeight(float)
okhttp3.internal.http2.Http2Connection$4: Http2Connection$4(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List)
okhttp3.Request: okhttp3.Headers headers()
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.horcrux.svg.LinearGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: void setSupportMultipleWindows(android.webkit.WebView,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsGetListeners(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMask(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(okhttp3.internal.huc.OkHttpURLConnection)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.google.android.material.button.MaterialButton: void setElevation(float)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: int hashCode()
com.horcrux.svg.RenderableViewManager: java.lang.String getName()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.jni.NativeRunnable: void run()
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.littleartists.MainActivity: MainActivity()
com.horcrux.svg.SvgView: int reactTagForTouch(float,float)
okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
okhttp3.HttpUrl: boolean isHttps()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setGravity(int)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
okhttp3.HttpUrl: java.net.URI uri()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
okhttp3.internal.ws.RealWebSocket: void cancel()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: void initialize()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getIdentifier(android.content.Context,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePropsMountItem(int,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.Cookie: okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.bridge.queue.NativeRunnable: void run()
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
okhttp3.internal.http.HttpCodec: void writeRequestHeaders(okhttp3.Request)
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RadialGradientView: void setCx(com.facebook.react.bridge.Dynamic)
okhttp3.WebSocket: boolean send(okio.ByteString)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestMethod(java.lang.String)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.OkHttpClient: java.util.List interceptors()
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.SymbolView: void setVbWidth(float)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
androidx.cardview.widget.CardView: float getCardElevation()
okhttp3.internal.io.FileSystem$1: okio.Sink sink(java.io.File)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.HttpUrl: java.lang.String encodedPath()
com.horcrux.svg.R$layout: R$layout()
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
okhttp3.internal.Util$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
okhttp3.EventListener$1: EventListener$1()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void hasPermission(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.RealCall,okhttp3.Callback)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
okhttp3.internal.cache.DiskLruCache$3: DiskLruCache$3(okhttp3.internal.cache.DiskLruCache)
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.reactnativecommunity.webview.RNCWebViewManager: void setUrlPrefixesForDefaultIntent(android.webkit.WebView,com.facebook.react.bridge.ReadableArray)
okhttp3.OkUrlFactory: void setUrlFilter(okhttp3.internal.URLFilter)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.SvgView: SvgView(com.facebook.react.bridge.ReactContext)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView createRNCWebViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.horcrux.svg.SymbolView: void setMinX(float)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
okhttp3.Request: okhttp3.CacheControl cacheControl()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
com.google.android.gms.common.api.internal.zzd: zzd()
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.EllipseView: void setRy(com.facebook.react.bridge.Dynamic)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
okhttp3.CacheControl: boolean noCache()
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
com.horcrux.svg.SvgView: void setVbHeight(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.RNFetchBlob.RNFetchBlob: void exists(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
okhttp3.internal.ws.RealWebSocket$2: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
okhttp3.internal.http.HttpCodec: void cancel()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(android.webkit.WebView,boolean)
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void setOn(com.reactnativecommunity.checkbox.ReactCheckBox,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.RNFetchBlob.RNFetchBlobReq$ResponseFormat: com.RNFetchBlob.RNFetchBlobReq$ResponseFormat valueOf(java.lang.String)
androidx.cardview.widget.CardView: void setRadius(float)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.cardview.widget.CardView: float getRadius()
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.internal.Util$1: Util$1()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getHeaderFields()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.reactnativecommunity.cameraroll.CameraRollModule: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection$PingRunnable: void execute()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.horcrux.svg.RenderableViewManager$PathViewManager: void onDropViewInstance(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
com.facebook.react.uimanager.UIManagerModule: void preComputeConstantsForViewManager(java.util.List)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
okhttp3.internal.huc.StreamedRequestBody: void writeTo(okio.BufferedSink)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.RNFetchBlob.RNFetchBlob: void closeStream(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.horcrux.svg.RenderableView: void setupPaint(android.graphics.Paint,float,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setUseCaches(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: HttpUrl(okhttp3.HttpUrl$Builder)
com.horcrux.svg.SvgPackage: SvgPackage()
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.internal.http2.Http2Connection: void failConnection()
com.RNFetchBlob.RNFetchBlob: void writeStream(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.Dynamic: boolean isNull()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesClearAll(com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
okhttp3.Credentials: Credentials()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
okhttp3.Headers$Builder: Headers$Builder()
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getConstants()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.RNFetchBlob.RNFetchBlob: void enableProgressReport(java.lang.String,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: void proceed()
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
okhttp3.Cookie: java.lang.String parseDomain(java.lang.String)
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScript(java.lang.String)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
okhttp3.Cache: int writeAbortCount()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
okio.ForwardingSink: void write(okio.Buffer,long)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor()
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentType()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$getToken$3(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.horcrux.svg.RenderableView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame()
com.horcrux.svg.VirtualView: void setClipRule(int)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Stream: void setHeadersListener(okhttp3.internal.http2.Header$Listener)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
okhttp3.internal.http2.Http2Connection$6: void execute()
com.facebook.react.views.picker.ReactDialogPickerManager: ReactDialogPickerManager()
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
okhttp3.internal.http.HttpDate$1: java.text.DateFormat initialValue()
okhttp3.internal.http2.Http2Connection$PingRunnable: Http2Connection$PingRunnable(okhttp3.internal.http2.Http2Connection,boolean,int,int)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
okhttp3.internal.connection.RealConnection$1: void close()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(android.webkit.WebView,java.lang.String)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
okhttp3.RequestBody$3: RequestBody$3(okhttp3.MediaType,java.io.File)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
okhttp3.ResponseBody: okhttp3.MediaType contentType()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.horcrux.svg.R$attr: R$attr()
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.WritableNativeArray)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getExecutor()
okhttp3.internal.http1.Http1Codec$ChunkedSource: void close()
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.http2.Http2Connection: void start()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setBasicAuthCredential(com.reactnativecommunity.webview.BasicAuthCredential)
okhttp3.RealCall: java.lang.String redactedUrl()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.horcrux.svg.VirtualView: double relativeOnOther(com.horcrux.svg.SVGLength)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: ReactNativeFirebaseMessagingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
com.horcrux.svg.RenderableViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
okhttp3.internal.ws.RealWebSocket$PingRunnable: RealWebSocket$PingRunnable(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.devsupport.JSDevSupport: void onFailure(double,java.lang.String)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
okhttp3.internal.cache2.Relay: boolean isClosed()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
okhttp3.Call: okhttp3.Response execute()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setLayerType(android.webkit.WebView,java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void addListener(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.RNFetchBlob.RNFetchBlob: void readFile(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onDropViewInstance(android.view.View)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
okhttp3.internal.http2.Http2Writer: void connectionPreface()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
okhttp3.Challenge: boolean equals(java.lang.Object)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.JavaNetAuthenticator: JavaNetAuthenticator()
com.horcrux.svg.SvgView: void setTintColor(com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)
okhttp3.internal.cache.InternalCache: void remove(okhttp3.Request)
okhttp3.Cache: int hitCount()
com.horcrux.svg.RenderableView: void setId(int)
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType[] values()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.RealCall: java.lang.Object clone()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setNestedScrollEnabled(boolean)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$UseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
okhttp3.internal.cache.InternalCache: void update(okhttp3.Response,okhttp3.Response)
okhttp3.internal.connection.StreamAllocation: void cancel()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,long,boolean,boolean)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
com.horcrux.svg.MaskView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.RNFetchBlob.RNFetchBlob: void writeFile(java.lang.String,java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
okhttp3.HttpUrl: java.lang.String fragment()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.horcrux.svg.RadialGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(android.webkit.WebView,boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
okhttp3.internal.huc.BufferedRequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.bridge.Inspector$Page: int getId()
okhttp3.FormBody: java.lang.String name(int)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoInput()
okhttp3.internal.cache.DiskLruCache: void close()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
okhttp3.Dispatcher: int getMaxRequestsPerHost()
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.horcrux.svg.VirtualView: void restoreCanvas(android.graphics.Canvas,int)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
okhttp3.Cache: void delete()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
okhttp3.internal.http.HttpHeaders: java.lang.String repeat(char,int)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String responseSourceHeader(okhttp3.Response)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
okhttp3.MultipartBody: okhttp3.MediaType type()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine get(okhttp3.Response)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void deleteToken(com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.devsupport.JSDevSupport: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
okhttp3.internal.cache.CacheInterceptor: boolean isContentSpecificHeader(java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.picker.ReactDialogPickerManager: void setBackgroundColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
okhttp3.internal.huc.OkHttpsURLConnection: boolean getAllowUserInteraction()
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
okio.Timeout: long deadlineNanoTime()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String getName()
okhttp3.HttpUrl$Builder: void pop()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)
okhttp3.MediaType: java.lang.String subtype()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
okhttp3.Headers: void checkName(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.Address: java.util.List connectionSpecs()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.horcrux.svg.SvgPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Request$Builder: okhttp3.Request build()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String[])
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.internal.ws.WebSocketWriter$FrameSink: okio.Timeout timeout()
okhttp3.internal.http2.PushObserver$1: boolean onHeaders(int,java.util.List,boolean)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(android.webkit.WebView,boolean)
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Response)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
okio.AsyncTimeout: void timedOut()
okhttp3.Cache: int readInt(okio.BufferedSource)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.reactnativecommunity.cameraroll.CameraRollModule: void deletePhotos(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RadialGradientView: void setFy(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.RNFetchBlob.RNFetchBlobReq$RequestType: com.RNFetchBlob.RNFetchBlobReq$RequestType valueOf(java.lang.String)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
okhttp3.RealCall$AsyncCall: okhttp3.Request request()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CipherSuite: java.lang.String javaName()
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1Codec$ChunkedSource: long read(okio.Buffer,long)
okhttp3.Request: java.util.List headers(java.lang.String)
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initialize()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void resetScroll()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
okhttp3.Headers: java.lang.String get(java.lang.String)
okhttp3.internal.http.HttpDate$1: HttpDate$1()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
okhttp3.internal.ws.RealWebSocket: void checkResponse(okhttp3.Response)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
okhttp3.internal.connection.RealConnection: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
okio.ForwardingSource: long read(okio.Buffer,long)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
okhttp3.ResponseBody: void close()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
okhttp3.Dispatcher: void executed(okhttp3.RealCall)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
okhttp3.Cookie: java.lang.String path()
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.RNFetchBlob.RNFetchBlob: boolean access$100()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.VirtualView: void clearCache()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(android.content.Context)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Permission getPermission()
okhttp3.RealCall$AsyncCall: okhttp3.RealCall get()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.horcrux.svg.RenderableViewManager: void decomposeMatrix()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
okhttp3.ResponseBody$BomAwareReader: void close()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
okhttp3.Cookie: Cookie(okhttp3.Cookie$Builder)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.huc.OkHttpsURLConnection: int getConnectTimeout()
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
okhttp3.CacheControl: int maxAgeSeconds()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,boolean)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.internal.http2.PushObserver$1: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$sendMessage$8(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.PatternView: void setPatternContentUnits(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
okhttp3.ResponseBody: java.io.InputStream byteStream()
okhttp3.internal.huc.OkHttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
okhttp3.internal.http2.Settings: boolean isSet(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
com.horcrux.svg.MarkerView: void setMinX(float)
okhttp3.internal.http.CallServerInterceptor$CountingSink: void write(okio.Buffer,long)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.bridge.ReactSoftException: void removeListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
okhttp3.OkHttpClient: okhttp3.Dns dns()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: java.util.List getComponents()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.StreamAllocation: void release()
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
okhttp3.Cache$CacheRequestImpl$1: Cache$CacheRequestImpl$1(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
okhttp3.Response: java.util.List challenges()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
okhttp3.internal.io.FileSystem$1: long size(java.io.File)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot next()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
okhttp3.internal.http2.Huffman: byte[] decode(byte[])
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.bridge.GuardedRunnable: void run()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.horcrux.svg.VirtualView: boolean isResponsible()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
okhttp3.Route: java.net.Proxy proxy()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
okhttp3.Dispatcher: void cancelAll()
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
com.horcrux.svg.TextPathView: void setSpacing(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.webkit.WebView,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.facebook.react.bridge.Arguments$1: int size()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.horcrux.svg.MarkerView: void setMinY(float)
okhttp3.FormBody: okhttp3.MediaType contentType()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebViewClient getRNCWebViewClient()
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
com.facebook.react.bridge.BaseJavaModule: void initialize()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getResponseMessage()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http1.Http1Codec$ChunkedSink: void flush()
io.invertase.firebase.common.ReactNativeFirebaseModule: android.content.Context getApplicationContext()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
okhttp3.FormBody: java.lang.String encodedName(int)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
okhttp3.EventListener: void callStart(okhttp3.Call)
com.horcrux.svg.VirtualView: void onLayout(boolean,int,int,int,int)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.horcrux.svg.RenderableViewManager: void setOnLayout(com.horcrux.svg.VirtualView,boolean)
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
okhttp3.internal.http2.Http2Connection: long access$708(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getReadTimeout()
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
okhttp3.OkHttpClient$1: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
okhttp3.MediaType: java.lang.String type()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: void setRequestMethod(java.lang.String)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
com.horcrux.svg.MaskView: void setX(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.horcrux.svg.R$dimen: R$dimen()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
okhttp3.Cache$2: Cache$2(okhttp3.Cache)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
okhttp3.ResponseBody: java.lang.String string()
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
okhttp3.internal.huc.OkHttpsURLConnection: void connect()
com.horcrux.svg.RenderableViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.facebook.react.views.picker.ReactPicker: void setImmediateSelection(int)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: Http1Codec$UnknownLengthSource(okhttp3.internal.http1.Http1Codec)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
okhttp3.internal.ws.WebSocketReader: void readMessage()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.react.HeadlessJsTaskService: HeadlessJsTaskService()
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestMethod()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.huc.BufferedRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
okhttp3.OkUrlFactory: java.lang.Object clone()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: OkHttpURLConnection$NetworkInterceptor(okhttp3.internal.huc.OkHttpURLConnection)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.internal.huc.OkHttpsURLConnection: int getContentLength()
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.google.android.material.chip.Chip: void setCheckable(boolean)
okhttp3.internal.http2.Http2Stream: java.util.Deque access$000(okhttp3.internal.http2.Http2Stream)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.horcrux.svg.MarkerView: void setMarkerWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpsURLConnection: void setConnectTimeout(int)
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: boolean customDrawOrderDisabled()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean)
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] findMatchingRule(java.lang.String[])
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseIfNoNewStreams()
okhttp3.internal.http2.Http2Connection$7: void execute()
com.facebook.react.fabric.ReactNativeConfig: int getInt64(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetString(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.horcrux.svg.VirtualView: float getCanvasWidth()
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.horcrux.svg.VirtualView: double fromRelativeFast(com.horcrux.svg.SVGLength)
okhttp3.internal.cache.DiskLruCache$1: void run()
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
okhttp3.FormBody: java.lang.String encodedValue(int)
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: void connect()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
okhttp3.ConnectionPool$1: ConnectionPool$1(okhttp3.ConnectionPool)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
okhttp3.Request: java.lang.String toString()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
okhttp3.Cookie$Builder: okhttp3.Cookie build()
okhttp3.Cache$1: void trackResponse(okhttp3.internal.cache.CacheStrategy)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.horcrux.svg.PatternView: void setAlign(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
okhttp3.Cookie$Builder: Cookie$Builder()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
okhttp3.ResponseBody$1: ResponseBody$1(okhttp3.MediaType,long,okio.BufferedSource)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setIfModifiedSince(long)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void execute()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.Object,java.lang.Object)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
okio.AsyncTimeout: AsyncTimeout()
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
com.horcrux.svg.R$integer: R$integer()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(android.webkit.WebView,java.lang.Boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.facebook.react.views.picker.ReactPickerManager: void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
okhttp3.internal.ws.WebSocketWriter: okio.Sink newMessageSink(int,long)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
okhttp3.internal.huc.OutputStreamRequestBody: OutputStreamRequestBody()
com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType: com.RNFetchBlob.RNFetchBlobProgressConfig$ReportType[] values()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.facebook.react.uimanager.ViewManager: ViewManager()
okhttp3.internal.Internal: Internal()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(android.webkit.WebView,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidMakePlayServicesAvailable()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
okhttp3.internal.huc.OkHttpsURLConnection: void setDefaultUseCaches(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
okhttp3.Response: long sentRequestAtMillis()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.facebook.react.views.picker.ReactPicker: void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: StreamAllocation$StreamAllocationReference(okhttp3.internal.connection.StreamAllocation,java.lang.Object)
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
com.facebook.react.bridge.ReactContext: void runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
okhttp3.RequestBody$3: okhttp3.MediaType contentType()
com.facebook.react.views.picker.ReactDropdownPickerManager: void setBackgroundColor(android.view.View,int)
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onDropViewInstance(android.view.View)
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void close()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
okio.Timeout: okio.Timeout clearDeadline()
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
org.devio.rn.splashscreen.SplashScreenModule: java.lang.String getName()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: int isGooglePlayServicesAvailable()
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
okhttp3.CacheControl: CacheControl(okhttp3.CacheControl$Builder)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)
com.horcrux.svg.VirtualView: double relativeOnWidth(com.horcrux.svg.SVGLength)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.horcrux.svg.SvgView: void defineMarker(com.horcrux.svg.VirtualView,java.lang.String)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(int,com.facebook.react.bridge.ReadableMap)
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: int getThemeColor(android.content.Context,java.lang.String)
okhttp3.Cookie: boolean secure()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: com.facebook.react.bridge.WritableMap getPlayServicesStatusMap()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewModule getModule(com.facebook.react.bridge.ReactContext)
okhttp3.internal.http2.Huffman: Huffman()
okhttp3.internal.http2.Header: int hashCode()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
okhttp3.CookieJar$1: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.horcrux.svg.RenderableViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.RealConnection: void cancel()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void dispatchOverflowDraw(android.graphics.Canvas)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void access$400(com.facebook.react.animated.NativeAnimatedModule,java.util.Queue,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
okhttp3.internal.http2.Http2Connection$3: Http2Connection$3(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[])
com.horcrux.svg.RenderableView: void mergeProperties(com.horcrux.svg.RenderableView)
okhttp3.Cache: java.util.Iterator urls()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
okhttp3.internal.huc.OutputStreamRequestBody$1: OutputStreamRequestBody$1(okhttp3.internal.huc.OutputStreamRequestBody,long,okio.BufferedSink)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.SvgView: void setMinY(float)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
okhttp3.Connection: java.net.Socket socket()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.reactnativecommunity.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.TextView: void setMethod(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getResponseCode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.Cookie: long parseMaxAge(java.lang.String)
okhttp3.RequestBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
okhttp3.internal.ws.RealWebSocket$2: RealWebSocket$2(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: NativeJSDevSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
okhttp3.Request: java.lang.String header(java.lang.String)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.modules.core.TimingModule: void onHostPause()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.horcrux.svg.PatternView: void setPatternTransform(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
okhttp3.internal.cache.CacheInterceptor: boolean isEndToEnd(java.lang.String)
okhttp3.internal.ws.RealWebSocket$PingRunnable: void run()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.horcrux.svg.PatternView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
okhttp3.internal.http.HttpHeaders: HttpHeaders()
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDefaultUseCaches()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
okhttp3.internal.Internal: int code(okhttp3.Response$Builder)
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.VirtualView: VirtualView(com.facebook.react.bridge.ReactContext)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.PatternView: void setPatternUnits(int)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.reactnativecommunity.cameraroll.CameraRollModule: boolean putImageSize(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,android.net.Uri,boolean,boolean)
com.horcrux.svg.RenderableView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.horcrux.svg.SvgView: void enableTouchEvents()
okhttp3.FormBody: void writeTo(okio.BufferedSink)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$subscribeToTopic$10(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
okhttp3.OkHttpClient$1: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.WebSocket: void cancel()
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
okhttp3.internal.io.FileSystem: long size(java.io.File)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.Interceptor$Chain: int readTimeoutMillis()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[])
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: BottomSheetDialogFragment()
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoInput(boolean)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
com.RNFetchBlob.RNFetchBlob: void fetchBlobForm(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Header: java.lang.String toString()
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
okhttp3.Dispatcher: int getMaxRequests()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.reactnativecommunity.cameraroll.CameraRollModule: void putLocationInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
okhttp3.Cache$CacheRequestImpl: okio.Sink body()
okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)
okhttp3.Interceptor$Chain: okhttp3.Request request()
com.horcrux.svg.LinearGradientView: void setX1(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.horcrux.svg.RadialGradientView: void setCy(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
okhttp3.WebSocket: okhttp3.Request request()
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.react.bridge.ModuleHolder: void destroy()
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: void removeEventListeningExecutor(java.lang.String)
com.horcrux.svg.UseView: void setHref(java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.RealCall$AsyncCall: java.lang.String host()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
okhttp3.internal.cache2.Relay$RelaySource: void close()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingModuleName(java.lang.String)
okhttp3.internal.http2.Http2Connection$6: Http2Connection$6(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
okhttp3.internal.http.CallServerInterceptor$CountingSink: CallServerInterceptor$CountingSink(okio.Sink)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentEncoding()
okhttp3.internal.http2.Http2Reader: int readMedium(okio.BufferedSource)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[])
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(android.webkit.WebView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
okhttp3.Authenticator$1: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
okhttp3.Dispatcher: void finished(okhttp3.RealCall)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
okhttp3.internal.http2.Http2Connection: long access$200(okhttp3.internal.http2.Http2Connection)
okhttp3.Cache$2: boolean hasNext()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
okhttp3.internal.http1.Http1Codec$AbstractSource: void endOfInput(boolean,java.io.IOException)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.TextPathView: void setSide(java.lang.String)
com.horcrux.svg.SvgView: void clearChildCache()
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getCipherSuite()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.internal.http2.Http2Codec: void flushRequest()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
okhttp3.internal.http2.PushObserver$1: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void flush()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: NativeAsyncLocalStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
androidx.core.content.FileProvider: FileProvider()
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: Http2Connection$ReaderRunnable$2(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],boolean,okhttp3.internal.http2.Settings)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.horcrux.svg.PatternView: void setMinX(float)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: OkHttpURLConnection$UnexpectedException(java.lang.Throwable)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.chip.Chip: void setLines(int)
okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getIfModifiedSince()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createMountItem(java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,int,int,boolean)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okhttp3.internal.cache.DiskLruCache$Editor$1: void onException(java.io.IOException)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.horcrux.svg.SvgView: android.graphics.Bitmap drawOutput()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.http2.Http2Writer: void dataFrame(int,byte,okio.Buffer,int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: void setAllowUserInteraction(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService: ReactNativeFirebaseMessagingHeadlessService()
com.RNFetchBlob.RNFetchBlobReq$ResponseType: com.RNFetchBlob.RNFetchBlobReq$ResponseType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedClipPath(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: DelegatingHttpsURLConnection(java.net.HttpURLConnection)
okhttp3.internal.http.HttpHeaders: boolean skipWhitespaceAndCommas(okio.Buffer)
okhttp3.Cache: java.io.File directory()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)
okhttp3.internal.huc.OkHttpsURLConnection: java.io.OutputStream getOutputStream()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.internal.ws.RealWebSocket: void runWriter()
com.horcrux.svg.LinearGradientView: void setY2(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.Response: okhttp3.Response priorResponse()
okhttp3.internal.http2.Settings: int size()
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.chip.Chip: void setTextAppearance(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver: ReactNativeFirebaseMessagingReceiver()
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.views.picker.ReactPickerManager: void receiveCommand(com.facebook.react.views.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Writer: void flush()
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
okhttp3.CacheControl: boolean isPrivate()
com.facebook.react.modules.storage.AsyncStorageModule: void onCatalystInstanceDestroy()
com.facebook.soloader.SoLoader$Api14Utils: SoLoader$Api14Utils()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: boolean warnIfOpen(java.lang.Object)
com.horcrux.svg.PatternView: void setMeetOrSlice(int)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
com.horcrux.svg.SymbolView: void setMinY(float)
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
okhttp3.ConnectionSpec: ConnectionSpec(okhttp3.ConnectionSpec$Builder)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
okhttp3.internal.http.HttpMethod: HttpMethod()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
okhttp3.Address: boolean equals(java.lang.Object)
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.jni.CppException: CppException(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.horcrux.svg.LineView: void setX1(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map getConstants()
com.horcrux.svg.MaskView: void setMaskContentUnits(int)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.Authenticator$1: Authenticator$1()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request)
com.horcrux.svg.RenderableViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.OkHttpClient: boolean followSslRedirects()
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)
okhttp3.Handshake: int hashCode()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$RectViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.Response: java.util.List headers(java.lang.String)
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
okhttp3.internal.http2.Hpack$Reader: int readByte()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$100(com.facebook.react.devsupport.LogBoxModule)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
okhttp3.internal.Version: java.lang.String userAgent()
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
okhttp3.internal.cache2.Relay: void commit(long)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$unsubscribeFromTopic$11(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
okhttp3.internal.ws.RealWebSocket: void tearDown()
com.horcrux.svg.VirtualView: void setOnLayout(boolean)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
okhttp3.Cache$1: void remove(okhttp3.Request)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okhttp3.Address: java.net.Proxy proxy()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
okhttp3.FormBody: java.lang.String value(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getResponseMessage()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void onCatalystInstanceDestroy()
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.horcrux.svg.MarkerView: void setMeetOrSlice(int)
com.horcrux.svg.PatternView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.huc.OkHttpURLConnection: int getResponseCode()
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
okhttp3.internal.huc.OkHttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener access$100(okhttp3.internal.http2.Http2Stream)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.RNFetchBlob.RNFetchBlob: void mv(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cache$1: Cache$1(okhttp3.Cache)
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(android.webkit.WebView,java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
okhttp3.internal.http1.Http1Codec$AbstractSource: long read(okio.Buffer,long)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
okhttp3.internal.connection.RealConnection: void startHttp2(int)
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(int)
okhttp3.internal.huc.OkHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl: java.lang.String scheme()
com.RNFetchBlob.RNFetchBlob: java.lang.String getName()
okhttp3.Dns$1: Dns$1()
okhttp3.ConnectionPool: void evictAll()
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
okhttp3.internal.tls.DistinguishedNameParser: DistinguishedNameParser(javax.security.auth.x500.X500Principal)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
com.RNFetchBlob.RNFetchBlob: void writeArrayChunk(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
okhttp3.internal.http1.Http1Codec$ChunkedSource: Http1Codec$ChunkedSource(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl)
okhttp3.Call: void cancel()
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(android.webkit.WebView,boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
okhttp3.internal.http1.Http1Codec: void cancel()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Boolean lambda$hasPermission$6()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.horcrux.svg.SvgPackage: java.util.List createJSModules()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
okhttp3.internal.http.StatusLine: java.lang.String toString()
okhttp3.internal.http.HttpCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void write(okio.Buffer,long)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
okhttp3.RealCall: okhttp3.Request request()
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$500(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.jni.HybridData: HybridData()
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
okhttp3.internal.platform.Android10Platform: void enableSessionTickets(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Connection: boolean access$302(okhttp3.internal.http2.Http2Connection,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
com.horcrux.svg.ForeignObjectView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String escapedAV()
com.facebook.jni.DestructorThread$1: void run()
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.devsupport.LogBoxModule: void onCatalystInstanceDestroy()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void flush()
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long read(okio.Buffer,long)
okhttp3.OkHttpClient: int connectTimeoutMillis()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.horcrux.svg.SvgView: void setMinX(float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void deleteApp(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
okhttp3.WebSocket: boolean close(int,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
okhttp3.internal.http2.Http2Writer: void close()
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
okhttp3.internal.cache2.Relay: okio.Source newSource()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker)
com.horcrux.svg.RenderableView: void initBounds()
okhttp3.Response$Builder: Response$Builder()
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory setClient(okhttp3.OkHttpClient)
okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
okhttp3.Dispatcher: int runningCallsCount()
okhttp3.internal.huc.OkHttpURLConnection: void setIfModifiedSince(long)
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.modules.datepicker.DatePickerDialogModule: DatePickerDialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
okhttp3.internal.http2.Http2Connection$5: Http2Connection$5(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean)
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.Map getConstants()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.Map getConstants()
com.RNFetchBlob.RNFetchBlob: void createFile(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
okhttp3.internal.http2.Http2Stream: void receiveHeaders(java.util.List)
okio.ForwardingSource: okio.Source delegate()
androidx.appcompat.widget.SearchView: int getInputType()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.Cookie: java.lang.String domain()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
okhttp3.internal.http2.Settings: int get(int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.horcrux.svg.RenderableViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String toHumanReadableAscii(java.lang.String)
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(java.util.EnumSet)
com.facebook.react.bridge.WritableArray: void pushNull()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.horcrux.svg.RenderableViewManager$CircleViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onNewIntent(android.content.Intent)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.horcrux.svg.RenderableViewManager$LineViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setConnectTimeout(int)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(int,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.LinearGradientView: void setY1(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.TSpanView: void setContent(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
okhttp3.OkHttpClient: int callTimeoutMillis()
okhttp3.RequestBody$1: okhttp3.MediaType contentType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(int,com.facebook.react.bridge.ReadableMap)
com.reactnativecommunity.webview.RNCWebViewManager: void setDisplayZoomControls(android.webkit.WebView,boolean)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
com.horcrux.svg.CircleView: void setCx(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.picker.ReactPickerManager: void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.picker.ReactPickerManager: void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
okhttp3.Address: javax.net.SocketFactory socketFactory()
com.horcrux.svg.SvgView: boolean interceptsTouchEvent(float,float)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
com.RNFetchBlob.RNFetchBlob: void ls(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Route: boolean requiresTunnel()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
okhttp3.HttpUrl: java.lang.String encodedPassword()
com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)
okhttp3.internal.http.HttpCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener getOnSelectListener()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
io.invertase.firebase.common.ReactNativeFirebaseModule: com.facebook.react.bridge.ReactContext getContext()
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.huc.OkHttpsURLConnection: int getResponseCode()
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.views.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewModule: android.app.Activity access$100(com.reactnativecommunity.webview.RNCWebViewModule)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void disconnect()
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
okhttp3.OkHttpClient$1: OkHttpClient$1()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.facebook.react.bridge.ReactContext: void destroy()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
okio.Timeout: void throwIfReached()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
okhttp3.Cache$CacheRequestImpl: Cache$CacheRequestImpl(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
androidx.fragment.app.FragmentActivity: FragmentActivity()
okhttp3.internal.Internal: void initializeInstanceForTests()
okhttp3.internal.http2.Header$Listener: void onHeaders(okhttp3.Headers)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
okhttp3.internal.http2.Http2Connection: void pushDataLater(int,okio.BufferedSource,int,boolean)
okhttp3.Cookie: boolean hostOnly()
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
com.horcrux.svg.RenderableView: void renderMarkers(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
okhttp3.Headers: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
okhttp3.internal.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.horcrux.svg.SvgView: void defineClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
okhttp3.internal.io.FileSystem: void delete(java.io.File)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getCipherSuite()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.reactnativecommunity.checkbox.ReactCheckBoxManager: java.lang.String getName()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
androidx.cardview.widget.CardView: void setCardElevation(float)
com.horcrux.svg.R$bool: R$bool()
okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.internal.http2.Http2Connection: int openStreamCount()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache$3: void remove()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
com.horcrux.svg.MaskView: void setMaskUnits(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.core.TimingModule: void initialize()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
okhttp3.internal.huc.OkHttpURLConnection: void onResponse(okhttp3.Call,okhttp3.Response)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
com.facebook.react.views.picker.ReactPickerManager: void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.WritableNativeMap)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
okhttp3.OkHttpClient: java.util.List networkInterceptors()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String getName()
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout()
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
okhttp3.RealCall$AsyncCall: void execute()
okhttp3.HttpUrl: int hashCode()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.facebook.react.modules.datepicker.DatePickerDialogFragment: DatePickerDialogFragment()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL,java.net.Proxy)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
okhttp3.RealCall: boolean isExecuted()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
okhttp3.Connection: okhttp3.Protocol protocol()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.react.views.view.ReactViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getLocalPrincipal()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean noAcceptTypesSet(java.lang.String[])
okhttp3.Route: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
okhttp3.Response: int code()
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.reactnativecommunity.webview.RNCWebViewManager: void setHardwareAccelerationDisabled(android.webkit.WebView,boolean)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.SvgView: boolean notRendered()
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$deleteToken$4()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.internal.http.HttpHeaders: int skipAll(okio.Buffer,byte)
okhttp3.internal.cache.FaultHidingSink: void close()
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
okhttp3.internal.http2.Http2Connection: void writeSynReset(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.chip.Chip: float getTextEndPadding()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.horcrux.svg.RenderableViewManager$UseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
okhttp3.CacheControl: java.lang.String headerValue()
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
okhttp3.Route: int hashCode()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.horcrux.svg.RenderableViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
okhttp3.internal.huc.OkHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
okhttp3.internal.cache.DiskLruCache$Editor: void abortUnlessCommitted()
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.facebook.jni.HybridData: void resetNative()
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)
com.horcrux.svg.VirtualView: void setResponsible(boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.reactnativecommunity.cameraroll.CameraRollModule: void putPageInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.horcrux.svg.VirtualView: void saveDefinition()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.EllipseView: void setCx(com.facebook.react.bridge.Dynamic)
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.jni.HybridData$Destructor: void destruct()
okhttp3.HttpUrl: java.util.Set queryParameterNames()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
okhttp3.Response: okhttp3.Protocol protocol()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.http2.Http2Connection: void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.horcrux.svg.VirtualView: void clearParentCache()
okhttp3.internal.http1.Http1Codec: void finishRequest()
com.RNFetchBlob.RNFetchBlob: void removeSession(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RectView: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
okhttp3.Response$Builder: okhttp3.Response build()
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
okhttp3.FormBody: int size()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
com.horcrux.svg.UseView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.horcrux.svg.SvgView: int hitTest(float,float)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
okhttp3.internal.ws.WebSocketWriter$FrameSink: WebSocketWriter$FrameSink(okhttp3.internal.ws.WebSocketWriter)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,int)
okhttp3.CacheControl: boolean mustRevalidate()
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(android.webkit.WebView,boolean)
okhttp3.Address: java.util.List protocols()
okhttp3.CacheControl: boolean noStore()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.ReactFragment: ReactFragment()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
okhttp3.ResponseBody: ResponseBody()
okhttp3.internal.huc.OkHttpsURLConnection: long getIfModifiedSince()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setPrompt(android.view.View,java.lang.String)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(android.webkit.WebView,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: void onShouldStartLoadWithRequestCallback(boolean,int)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager(com.reactnativecommunity.webview.WebViewConfig)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
okhttp3.Route: boolean equals(java.lang.Object)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(long)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getContentLength()
okhttp3.Headers: boolean equals(java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void initialize()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Handshake: java.util.List localCertificates()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setEnabled(android.view.View,boolean)
okhttp3.internal.huc.OkHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsNotifyReady(java.lang.Boolean)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: Http2Connection$ReaderRunnable$3(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[])
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.ConnectionSpec: boolean isTls()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
okhttp3.internal.cache.InternalCache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
okhttp3.ResponseBody: okio.BufferedSource source()
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream()
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingEnabled(boolean)
okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)
com.horcrux.svg.TextView: void setBaselineShift(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
okhttp3.internal.http2.Http2Connection$Listener$1: void onStream(okhttp3.internal.http2.Http2Stream)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.chip.Chip: void setChipIconSize(float)
okio.Timeout: void waitUntilNotified(java.lang.Object)
com.horcrux.svg.PatternView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.ConnectionPool: ConnectionPool()
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
okhttp3.internal.JavaNetHeaders: JavaNetHeaders()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
okhttp3.internal.cache.DiskLruCache: void flush()
okhttp3.internal.Util$2: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
okhttp3.internal.http2.Http2Connection$Listener$1: Http2Connection$Listener$1()
okhttp3.internal.http1.Http1Codec: boolean isClosed()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.horcrux.svg.RenderableViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.horcrux.svg.LineView: void setX2(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(android.webkit.WebView,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
okhttp3.internal.NamedRunnable: void run()
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
com.horcrux.svg.SvgView: void onSizeChanged(int,int,int,int)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createBatchMountItem(int,com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int)
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.horcrux.svg.MarkerView: void setAlign(java.lang.String)
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.horcrux.svg.RenderableViewManager$PathViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.picker.ReactPickerManager: void setSelected(com.facebook.react.views.picker.ReactPicker,int)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
okio.ForwardingSink: java.lang.String toString()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
okhttp3.MultipartBody: java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(android.view.View)
okhttp3.Response: java.lang.String header(java.lang.String)
okio.AsyncTimeout: okio.Source source(okio.Source)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
okhttp3.Cache$1: void update(okhttp3.Response,okhttp3.Response)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.Timeout timeout()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.Cache: void close()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
org.devio.rn.splashscreen.SplashScreenModule: void hide()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
okhttp3.HttpUrl: java.lang.String toString()
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean usingProxy()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
okhttp3.Challenge: java.util.Map authParams()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.reactnativecommunity.cameraroll.CameraRollModule: void access$400(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.Dns: java.util.List lookup(java.lang.String)
com.horcrux.svg.PatternView: void setVbWidth(float)
com.RNFetchBlob.RNFetchBlob: void unlink(java.lang.String,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: AndroidPlatform$CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman get()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
okhttp3.internal.io.FileSystem$1: boolean exists(java.io.File)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object access$000(okhttp3.internal.huc.OkHttpURLConnection)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidPromptForPlayServices()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String getName()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.horcrux.svg.RenderableViewManager: void resetTransformProperty(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection$2: Http2Connection$2(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.MarkerView: void setVbWidth(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
com.horcrux.svg.SymbolView: void setAlign(java.lang.String)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.horcrux.svg.LineView: void setY2(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.horcrux.svg.SymbolView: void setMeetOrSlice(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
com.google.android.material.chip.Chip: void setElevation(float)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Settings: Settings()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithExceptionMap(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.reactnativecommunity.webview.RNCWebViewModule: boolean needsCameraPermission()
com.horcrux.svg.RenderableViewManager$DefsViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: void execute()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2: java.lang.String formatFlags(byte,byte)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.core.TimingModule: void onCatalystInstanceDestroy()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers getHeaders()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String binarySearchBytes(byte[],byte[][],int)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$3: void execute()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
okhttp3.Protocol: java.lang.String toString()
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.horcrux.svg.R: R()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
okhttp3.CipherSuite: java.lang.String toString()
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(boolean)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
okhttp3.EventListener$2: okhttp3.EventListener create(okhttp3.Call)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.textinput.ReactTextInputManager: android.widget.EditText createInternalEditText(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.cache.InternalCache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.internal.http2.Hpack$Writer: void setHeaderTableSizeSetting(int)
okhttp3.CookieJar$1: java.util.List loadForRequest(okhttp3.HttpUrl)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.SvgView$Events: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
okhttp3.internal.cache.InternalCache: okhttp3.Response get(okhttp3.Request)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
okhttp3.internal.tls.DistinguishedNameParser: char getUTF8()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getInitialNotification(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String[],boolean)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setOnScroll(android.webkit.WebView,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int)
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
okhttp3.internal.huc.OkHttpURLConnection: java.io.IOException propagate(java.lang.Throwable)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
com.facebook.react.bridge.ReactBridge: void staticInit()
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
okhttp3.Call: boolean isCanceled()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
okhttp3.internal.huc.OkHttpsURLConnection: void setUseCaches(boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateEventEmitterMountItem(int,java.lang.Object)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(int,com.facebook.react.bridge.ReadableMap)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response getResponse(boolean)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setForceDarkOn(android.webkit.WebView,boolean)
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
okhttp3.MultipartBody: java.lang.String boundary()
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
okhttp3.internal.http2.Http2Connection$1: void execute()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findJvmPlatform()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getHeaderFields()
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String nextAT()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentType()
okhttp3.internal.ws.RealWebSocket: void loopReader()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.Dns$1: java.util.List lookup(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
okio.ForwardingSink: okio.Sink delegate()
com.horcrux.svg.RadialGradientView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
okhttp3.Dispatcher: boolean promoteAndExecute()
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
okhttp3.internal.cache.CacheInterceptor$1: okio.Timeout timeout()
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void close()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.RNFetchBlob.RNFetchBlob: RNFetchBlob(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
okhttp3.internal.http2.PushObserver$1: PushObserver$1()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
okhttp3.Challenge: int hashCode()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(android.content.Context)
com.horcrux.svg.RenderableViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.RenderableView: double saturate(double)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
okhttp3.internal.http2.Http2Connection: long access$108(okhttp3.internal.http2.Http2Connection)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.oblador.vectoricons.VectorIconsModule: java.lang.String createGlyphImagePath(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.picker.ReactDropdownPickerManager: void setSelected(android.view.View,int)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
okhttp3.Response: okhttp3.Response$Builder newBuilder()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.horcrux.svg.RenderableViewManager$RectViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
okhttp3.RequestBody$2: RequestBody$2(okhttp3.MediaType,int,byte[],int)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
okhttp3.Response: okhttp3.Handshake handshake()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String host()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: Http2Connection$ReaderRunnable$1(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
okhttp3.Cache: Cache(java.io.File,long)
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(android.webkit.WebView,boolean)
okhttp3.CacheControl: int sMaxAgeSeconds()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.R$style: R$style()
okhttp3.internal.huc.BufferedRequestBody: BufferedRequestBody(long)
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
okhttp3.Cache$2: java.lang.Object next()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: OkHttpURLConnection$UnexpectedException$1()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
okhttp3.internal.huc.OkHttpURLConnection: void onFailure(okhttp3.Call,java.io.IOException)
okhttp3.internal.cache.DiskLruCache$Editor$1: DiskLruCache$Editor$1(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean access$000(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
okhttp3.Cache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.Connection: okhttp3.Handshake handshake()
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.horcrux.svg.RenderableView: void setFillRule(int)
okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String getName()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.facebook.yoga.YogaNode: YogaNode()
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.platform.AndroidPlatform: int getSdkInt()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
okhttp3.Response: okhttp3.Request request()
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
okhttp3.MultipartBody: int size()
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService: ReactNativeFirebaseMessagingService()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
okhttp3.Headers: int size()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean)
okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
okhttp3.Route: java.net.InetSocketAddress socketAddress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.horcrux.svg.MarkerView: void setRefY(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.facebook.common.time.MonotonicClock: long now()
com.horcrux.svg.VirtualView: float getCanvasHeight()
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
okhttp3.internal.huc.OkHttpURLConnection: java.net.URL access$102(okhttp3.internal.huc.OkHttpURLConnection,java.net.URL)
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath(android.graphics.Canvas,android.graphics.Paint)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
okhttp3.internal.platform.Android10Platform: Android10Platform(java.lang.Class)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String findMostSpecific(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
okhttp3.internal.cache.CacheRequest: okio.Sink body()
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getContentLengthLong()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getVideoIntent()
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Platform buildIfSupported()
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
okhttp3.internal.huc.OkHttpURLConnection: java.io.OutputStream getOutputStream()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: DefaultNativeModuleCallExceptionHandler()
com.horcrux.svg.UseView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
okhttp3.Response: void close()
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
okhttp3.ConnectionPool: int idleConnectionCount()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.WebSocket: boolean send(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.RNFetchBlob.RNFetchBlob: void scanFile(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.internal.http2.Http2Connection: long access$100(okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: ReactNativeFirebaseUtilsModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.RNFetchBlob.Utils.FileProvider: FileProvider()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.Dynamic: int asInt()
com.facebook.react.devsupport.LogBoxModule: android.view.View access$002(com.facebook.react.devsupport.LogBoxModule,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(int)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.ImageView: void setAlign(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
okhttp3.Cookie: boolean persistent()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getAllowUserInteraction()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
okhttp3.Dispatcher: Dispatcher()
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getConnectTimeout()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.ReactSoftException: void addListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: NativeAsyncSQLiteDBStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getInputStream()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.huc.OkHttpURLConnection: void disconnect()
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
okhttp3.ConnectionPool: java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
okhttp3.HttpUrl: int querySize()
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.RealCall: okio.Timeout timeout()
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.RNFetchBlob.RNFetchBlob: void createFileASCII(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.horcrux.svg.VirtualView: double relativeOnHeight(com.horcrux.svg.SVGLength)
okhttp3.HttpUrl: java.lang.String username()
okhttp3.internal.connection.RouteSelector: java.lang.String getHostString(java.net.InetSocketAddress)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths(java.lang.String[])
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.react.views.picker.ReactDialogPickerManager: void setSelected(android.view.View,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
okhttp3.internal.http2.Http2Connection: long access$608(okhttp3.internal.http2.Http2Connection)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
okhttp3.RealCall$1: RealCall$1(okhttp3.RealCall)
com.horcrux.svg.RNSVGRenderableManager: float getTotalLength(int)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()
okhttp3.internal.huc.OkHttpsURLConnection: void setChunkedStreamingMode(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
okhttp3.Cache$Entry: boolean isHttps()
okhttp3.ResponseBody: java.nio.charset.Charset charset()
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.horcrux.svg.MarkerView: void setMarkerHeight(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
okhttp3.Address: java.net.ProxySelector proxySelector()
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
